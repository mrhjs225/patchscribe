0: unit: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: s32
  5: name: gf_media_vvc_read_vps_bs_internal
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: GF_BitStream
      11: modifier: *
     12: name: bs
   13: parameter: 
    14: decl: 
     15: type: 
      16: name: VVCState
      17: modifier: *
     18: name: vvc
   19: parameter: 
    20: decl: 
     21: type: 
      22: name: Bool
     23: name: stop_at_vps_ext
  24: block: 
   25: block_content: 
    26: decl_stmt: 
     27: decl: 
      28: type: 
       29: name: u32
      30: name: i
     31: decl: 
      32: type: 
      33: name: j
    34: decl_stmt: 
     35: decl: 
      36: type: 
       37: name: s32
      38: name: vps_id
    39: decl_stmt: 
     40: decl: 
      41: type: 
       42: name: VVC_VPS
       43: modifier: *
      44: name: vps
    45: decl_stmt: 
     46: decl: 
      47: type: 
       48: name: Bool
      49: name: vps_default_ptl_dpb_hrd_max_tid_flag
      50: init: 
       51: expr: 
        52: literal: 0
    53: comment: //nalu header already parsed
    54: expr_stmt: 
     55: expr: 
      56: name: vps_id
      57: operator: =
      58: call: 
       59: name: gf_bs_read_int_log
       60: argument_list: 
        61: argument: 
         62: expr: 
          63: name: bs
        64: argument: 
         65: expr: 
          66: literal: 4
        67: argument: 
         68: expr: 
          69: literal: "vps_id"
    70: if_stmt: 
     71: if: 
      72: condition: 
       73: expr: 
        74: name: vps_id
        75: operator: >=
        76: literal: 16
      77: block: 
       78: block_content: 
        79: return: 
         80: expr: 
          81: operator: -
          82: literal: 1
    83: if_stmt: 
     84: if: 
      85: condition: 
       86: expr: 
        87: operator: !
        88: name: vps_id
      89: block: 
       90: block_content: 
        91: expr_stmt: 
         92: expr: 
          93: call: 
           94: name: GF_LOG
           95: argument_list: 
            96: argument: 
             97: expr: 
              98: name: GF_LOG_ERROR
            99: argument: 
             100: expr: 
              101: name: GF_LOG_CODING
            102: argument: 
             103: expr: 
              104: operator: (
              105: literal: "[VVC] VPS ID 0 is forbidden\n"
              106: operator: )
        107: return: 
         108: expr: 
          109: operator: -
          110: literal: 1
    111: expr_stmt: 
     112: expr: 
      113: name: vps
      114: operator: =
      115: operator: &
      116: name: 
       117: name: vvc
       118: operator: ->
       119: name: vps
       120: index: 
        121: expr: 
         122: name: vps_id
    123: if_stmt: 
     124: if: 
      125: condition: 
       126: expr: 
        127: operator: !
        128: name: 
         129: name: vps
         130: operator: ->
         131: name: state
      132: block: 
       133: block_content: 
        134: expr_stmt: 
         135: expr: 
          136: name: 
           137: name: vps
           138: operator: ->
           139: name: id
          140: operator: =
          141: name: vps_id
        142: expr_stmt: 
         143: expr: 
          144: name: 
           145: name: vps
           146: operator: ->
           147: name: state
          148: operator: =
          149: literal: 1
    150: expr_stmt: 
     151: expr: 
      152: name: 
       153: name: vps
       154: operator: ->
       155: name: max_layers
      156: operator: =
      157: literal: 1
      158: operator: +
      159: call: 
       160: name: gf_bs_read_int_log
       161: argument_list: 
        162: argument: 
         163: expr: 
          164: name: bs
        165: argument: 
         166: expr: 
          167: literal: 6
        168: argument: 
         169: expr: 
          170: literal: "max_layers"
    171: if_stmt: 
     172: if: 
      173: condition: 
       174: expr: 
        175: name: 
         176: name: vps
         177: operator: ->
         178: name: max_layers
        179: operator: >
        180: name: MAX_LHVC_LAYERS
      181: block: 
       182: block_content: 
        183: expr_stmt: 
         184: expr: 
          185: call: 
           186: name: GF_LOG
           187: argument_list: 
            188: argument: 
             189: expr: 
              190: name: GF_LOG_ERROR
            191: argument: 
             192: expr: 
              193: name: GF_LOG_CODING
            194: argument: 
             195: expr: 
              196: operator: (
              197: literal: "[VVC] sorry, %d layers in VPS but only %d supported\n"
              198: operator: ,
              199: name: 
               200: name: vps
               201: operator: ->
               202: name: max_layers
              203: operator: ,
              204: name: MAX_LHVC_LAYERS
              205: operator: )
        206: return: 
         207: expr: 
          208: operator: -
          209: literal: 1
    210: expr_stmt: 
     211: expr: 
      212: name: 
       213: name: vps
       214: operator: ->
       215: name: max_sub_layers
      216: operator: =
      217: call: 
       218: name: gf_bs_read_int_log
       219: argument_list: 
        220: argument: 
         221: expr: 
          222: name: bs
        223: argument: 
         224: expr: 
          225: literal: 3
        226: argument: 
         227: expr: 
          228: literal: "max_sub_layers_minus1"
      229: operator: +
      230: literal: 1
    231: if_stmt: 
     232: if: 
      233: condition: 
       234: expr: 
        235: operator: (
        236: name: 
         237: name: vps
         238: operator: ->
         239: name: max_layers
        240: operator: >
        241: literal: 1
        242: operator: )
        243: operator: &&
        244: operator: (
        245: name: 
         246: name: vps
         247: operator: ->
         248: name: max_sub_layers
        249: operator: >
        250: literal: 1
        251: operator: )
      252: block: 
       253: block_content: 
        254: expr_stmt: 
         255: expr: 
          256: name: vps_default_ptl_dpb_hrd_max_tid_flag
          257: operator: =
          258: call: 
           259: name: gf_bs_read_int_log
           260: argument_list: 
            261: argument: 
             262: expr: 
              263: name: bs
            264: argument: 
             265: expr: 
              266: literal: 1
            267: argument: 
             268: expr: 
              269: literal: "vps_default_ptl_dpb_hrd_max_tid_flag"
    270: if_stmt: 
     271: if: 
      272: condition: 
       273: expr: 
        274: name: 
         275: name: vps
         276: operator: ->
         277: name: max_layers
        278: operator: >
        279: literal: 1
      280: block: 
       281: block_content: 
        282: expr_stmt: 
         283: expr: 
          284: name: 
           285: name: vps
           286: operator: ->
           287: name: all_layers_independent
          288: operator: =
          289: call: 
           290: name: gf_bs_read_int_log
           291: argument_list: 
            292: argument: 
             293: expr: 
              294: name: bs
            295: argument: 
             296: expr: 
              297: literal: 1
            298: argument: 
             299: expr: 
              300: literal: "all_layers_independent"
    301: for: 
     302: control: 
      303: init: 
       304: expr: 
        305: name: i
        306: operator: =
        307: literal: 0
      308: condition: 
       309: expr: 
        310: name: i
        311: operator: <
        312: name: 
         313: name: vps
         314: operator: ->
         315: name: max_layers
      316: incr: 
       317: expr: 
        318: name: i
        319: operator: ++
     320: block: 
      321: block_content: 
       322: decl_stmt: 
        323: decl: 
         324: type: 
          325: name: u32
         326: name: layer_id
         327: init: 
          328: expr: 
           329: call: 
            330: name: gf_bs_read_int_log_idx
            331: argument_list: 
             332: argument: 
              333: expr: 
               334: name: bs
             335: argument: 
              336: expr: 
               337: literal: 6
             338: argument: 
              339: expr: 
               340: literal: "layer_id"
             341: argument: 
              342: expr: 
               343: name: i
       344: if_stmt: 
        345: if: 
         346: condition: 
          347: expr: 
           348: name: layer_id
           349: operator: >
           350: name: 
            351: name: vps
            352: operator: ->
            353: name: max_layer_id
         354: block: 
          355: block_content: 
           356: expr_stmt: 
            357: expr: 
             358: name: 
              359: name: vps
              360: operator: ->
              361: name: max_layer_id
             362: operator: =
             363: name: layer_id
       364: if_stmt: 
        365: if: 
         366: condition: 
          367: expr: 
           368: name: i
           369: operator: &&
           370: operator: !
           371: name: 
            372: name: vps
            373: operator: ->
            374: name: all_layers_independent
         375: block: 
          376: block_content: 
           377: decl_stmt: 
            378: decl: 
             379: type: 
              380: name: Bool
             381: name: layer_indep
             382: init: 
              383: expr: 
               384: call: 
                385: name: gf_bs_read_int_log_idx
                386: argument_list: 
                 387: argument: 
                  388: expr: 
                   389: name: bs
                 390: argument: 
                  391: expr: 
                   392: literal: 1
                 393: argument: 
                  394: expr: 
                   395: literal: "layer_independent"
                 396: argument: 
                  397: expr: 
                   398: name: i
           399: if_stmt: 
            400: if: 
             401: condition: 
              402: expr: 
               403: operator: !
               404: name: layer_indep
             405: block: 
              406: block_content: 
               407: decl_stmt: 
                408: decl: 
                 409: type: 
                  410: name: Bool
                 411: name: vps_max_tid_ref_present_flag
                 412: init: 
                  413: expr: 
                   414: call: 
                    415: name: gf_bs_read_int_log_idx
                    416: argument_list: 
                     417: argument: 
                      418: expr: 
                       419: name: bs
                     420: argument: 
                      421: expr: 
                       422: literal: 1
                     423: argument: 
                      424: expr: 
                       425: literal: "vps_max_tid_ref_present_flag"
                     426: argument: 
                      427: expr: 
                       428: name: i
               429: for: 
                430: control: 
                 431: init: 
                  432: expr: 
                   433: name: j
                   434: operator: =
                   435: literal: 0
                 436: condition: 
                  437: expr: 
                   438: name: j
                   439: operator: <
                   440: name: i
                 441: incr: 
                  442: expr: 
                   443: name: j
                   444: operator: ++
                445: block: 
                 446: block_content: 
                  447: decl_stmt: 
                   448: decl: 
                    449: type: 
                     450: name: Bool
                    451: name: vps_direct_ref_layer_flag
                    452: init: 
                     453: expr: 
                      454: call: 
                       455: name: gf_bs_read_int_log_idx2
                       456: argument_list: 
                        457: argument: 
                         458: expr: 
                          459: name: bs
                        460: argument: 
                         461: expr: 
                          462: literal: 1
                        463: argument: 
                         464: expr: 
                          465: literal: "vps_direct_ref_layer_flag"
                        466: argument: 
                         467: expr: 
                          468: name: i
                        469: argument: 
                         470: expr: 
                          471: name: j
                  472: if_stmt: 
                   473: if: 
                    474: condition: 
                     475: expr: 
                      476: name: vps_max_tid_ref_present_flag
                      477: operator: &&
                      478: name: vps_direct_ref_layer_flag
                    479: block: 
                     480: block_content: 
                      481: expr_stmt: 
                       482: expr: 
                        483: call: 
                         484: name: gf_bs_read_int_log_idx2
                         485: argument_list: 
                          486: argument: 
                           487: expr: 
                            488: name: bs
                          489: argument: 
                           490: expr: 
                            491: literal: 3
                          492: argument: 
                           493: expr: 
                            494: literal: "vps_max_tid_il_ref_pics_plus1"
                          495: argument: 
                           496: expr: 
                            497: name: i
                          498: argument: 
                           499: expr: 
                            500: name: j
    501: expr_stmt: 
     502: expr: 
      503: name: 
       504: name: vps
       505: operator: ->
       506: name: num_ptl
      507: operator: =
      508: literal: 1
    509: if_stmt: 
     510: if: 
      511: condition: 
       512: expr: 
        513: name: 
         514: name: vps
         515: operator: ->
         516: name: max_layers
        517: operator: >
        518: literal: 1
      519: block: 
       520: block_content: 
        521: if_stmt: 
         522: if: 
          523: condition: 
           524: expr: 
            525: name: 
             526: name: vps
             527: operator: ->
             528: name: all_layers_independent
          529: block: 
           530: block_content: 
            531: expr_stmt: 
             532: expr: 
              533: name: 
               534: name: vps
               535: operator: ->
               536: name: each_layer_is_ols
              537: operator: =
              538: call: 
               539: name: gf_bs_read_int_log
               540: argument_list: 
                541: argument: 
                 542: expr: 
                  543: name: bs
                544: argument: 
                 545: expr: 
                  546: literal: 1
                547: argument: 
                 548: expr: 
                  549: literal: "each_layer_is_ols"
        550: if_stmt: 
         551: if: 
          552: condition: 
           553: expr: 
            554: operator: !
            555: name: 
             556: name: vps
             557: operator: ->
             558: name: each_layer_is_ols
          559: block: 
           560: block_content: 
            561: decl_stmt: 
             562: decl: 
              563: type: 
               564: name: u32
              565: name: vps_ols_mode_idc
              566: init: 
               567: expr: 
                568: literal: 2
            569: if_stmt: 
             570: if: 
              571: condition: 
               572: expr: 
                573: operator: !
                574: name: 
                 575: name: vps
                 576: operator: ->
                 577: name: all_layers_independent
              578: block: 
               579: block_content: 
                580: expr_stmt: 
                 581: expr: 
                  582: name: vps_ols_mode_idc
                  583: operator: =
                  584: call: 
                   585: name: gf_bs_read_int_log
                   586: argument_list: 
                    587: argument: 
                     588: expr: 
                      589: name: bs
                    590: argument: 
                     591: expr: 
                      592: literal: 2
                    593: argument: 
                     594: expr: 
                      595: literal: "vps_ols_mode_idc"
            596: if_stmt: 
             597: if: 
              598: condition: 
               599: expr: 
                600: name: vps_ols_mode_idc
                601: operator: ==
                602: literal: 2
              603: block: 
               604: block_content: 
                605: decl_stmt: 
                 606: decl: 
                  607: type: 
                   608: name: u8
                  609: name: vps_num_output_layer_sets
                  610: init: 
                   611: expr: 
                    612: literal: 2
                    613: operator: +
                    614: call: 
                     615: name: gf_bs_read_int_log
                     616: argument_list: 
                      617: argument: 
                       618: expr: 
                        619: name: bs
                      620: argument: 
                       621: expr: 
                        622: literal: 8
                      623: argument: 
                       624: expr: 
                        625: literal: "vps_num_output_layer_sets_minus2"
                626: for: 
                 627: control: 
                  628: init: 
                   629: expr: 
                    630: name: i
                    631: operator: =
                    632: literal: 0
                  633: condition: 
                   634: expr: 
                    635: name: i
                    636: operator: <
                    637: name: vps_num_output_layer_sets
                  638: incr: 
                   639: expr: 
                    640: name: i
                    641: operator: ++
                 642: block: 
                  643: block_content: 
                   644: for: 
                    645: control: 
                     646: init: 
                      647: expr: 
                       648: name: j
                       649: operator: =
                       650: literal: 0
                     651: condition: 
                      652: expr: 
                       653: name: j
                       654: operator: <
                       655: name: 
                        656: name: vps
                        657: operator: ->
                        658: name: max_layers
                     659: incr: 
                      660: expr: 
                       661: name: j
                       662: operator: ++
                    663: block: 
                     664: block_content: 
                      665: expr_stmt: 
                       666: expr: 
                        667: call: 
                         668: name: gf_bs_read_int_log_idx2
                         669: argument_list: 
                          670: argument: 
                           671: expr: 
                            672: name: bs
                          673: argument: 
                           674: expr: 
                            675: literal: 1
                          676: argument: 
                           677: expr: 
                            678: literal: "vps_ols_output_layer_flag"
                          679: argument: 
                           680: expr: 
                            681: name: i
                          682: argument: 
                           683: expr: 
                            684: name: j
        685: expr_stmt: 
         686: expr: 
          687: name: 
           688: name: vps
           689: operator: ->
           690: name: num_ptl
          691: operator: =
          692: literal: 1
          693: operator: +
          694: call: 
           695: name: gf_bs_read_int_log
           696: argument_list: 
            697: argument: 
             698: expr: 
              699: name: bs
            700: argument: 
             701: expr: 
              702: literal: 8
            703: argument: 
             704: expr: 
              705: literal: "num_ptl_minus1"
    706: expr_stmt: 
     707: expr: 
      708: name: 
       709: name: vps
       710: operator: ->
       711: name: ptl
       712: index: 
        713: expr: 
         714: literal: 0
      715: operator: .
      716: name: pt_present
      717: operator: =
      718: literal: 1
    719: for: 
     720: control: 
      721: init: 
       722: expr: 
        723: name: i
        724: operator: =
        725: literal: 0
      726: condition: 
       727: expr: 
        728: name: i
        729: operator: <
        730: name: 
         731: name: vps
         732: operator: ->
         733: name: num_ptl
      734: incr: 
       735: expr: 
        736: name: i
        737: operator: ++
     738: block: 
      739: block_content: 
       740: if_stmt: 
        741: if: 
         742: condition: 
          743: expr: 
           744: name: i
         745: block: 
          746: block_content: 
           747: expr_stmt: 
            748: expr: 
             749: name: 
              750: name: vps
              751: operator: ->
              752: name: ptl
              753: index: 
               754: expr: 
                755: name: i
             756: operator: .
             757: name: pt_present
             758: operator: =
             759: call: 
              760: name: gf_bs_read_int_log_idx
              761: argument_list: 
               762: argument: 
                763: expr: 
                 764: name: bs
               765: argument: 
                766: expr: 
                 767: literal: 1
               768: argument: 
                769: expr: 
                 770: literal: "pt_present"
               771: argument: 
                772: expr: 
                 773: name: i
       774: if_stmt: 
        775: if: 
         776: condition: 
          777: expr: 
           778: operator: !
           779: name: vps_default_ptl_dpb_hrd_max_tid_flag
         780: block: 
          781: block_content: 
           782: expr_stmt: 
            783: expr: 
             784: name: 
              785: name: vps
              786: operator: ->
              787: name: ptl
              788: index: 
               789: expr: 
                790: name: i
             791: operator: .
             792: name: ptl_max_tid
             793: operator: =
             794: call: 
              795: name: gf_bs_read_int_log_idx
              796: argument_list: 
               797: argument: 
                798: expr: 
                 799: name: bs
               800: argument: 
                801: expr: 
                 802: literal: 3
               803: argument: 
                804: expr: 
                 805: literal: "ptl_max_tid"
               806: argument: 
                807: expr: 
                 808: name: i
        809: else: 
         810: block: 
          811: block_content: 
           812: expr_stmt: 
            813: expr: 
             814: name: 
              815: name: vps
              816: operator: ->
              817: name: ptl
              818: index: 
               819: expr: 
                820: name: i
             821: operator: .
             822: name: ptl_max_tid
             823: operator: =
             824: name: 
              825: name: vps
              826: operator: ->
              827: name: max_sub_layers
             828: operator: -
             829: literal: 1
       830: empty_stmt: 
    831: comment: //align
    832: expr_stmt: 
     833: expr: 
      834: call: 
       835: name: gf_bs_align
       836: argument_list: 
        837: argument: 
         838: expr: 
          839: name: bs
    840: for: 
     841: control: 
      842: init: 
       843: expr: 
        844: name: i
        845: operator: =
        846: literal: 0
      847: condition: 
       848: expr: 
        849: name: i
        850: operator: <
        851: name: 
         852: name: vps
         853: operator: ->
         854: name: num_ptl
      855: incr: 
       856: expr: 
        857: name: i
        858: operator: ++
     859: block: 
      860: block_content: 
       861: expr_stmt: 
        862: expr: 
         863: call: 
          864: name: vvc_profile_tier_level
          865: argument_list: 
           866: argument: 
            867: expr: 
             868: name: bs
           869: argument: 
            870: expr: 
             871: operator: &
             872: name: 
              873: name: vps
              874: operator: ->
              875: name: ptl
              876: index: 
               877: expr: 
                878: name: i
           879: argument: 
            880: expr: 
             881: name: i
    882: comment: //TODO, parse multilayer stuff
    883: return: 
     884: expr: 
      885: name: vps_id

----------------------------------------
0: unit: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: s32
  5: name: gf_media_vvc_read_vps_bs_internal
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: GF_BitStream
      11: modifier: *
     12: name: bs
   13: parameter: 
    14: decl: 
     15: type: 
      16: name: VVCState
      17: modifier: *
     18: name: vvc
   19: parameter: 
    20: decl: 
     21: type: 
      22: name: Bool
     23: name: stop_at_vps_ext
  24: block: 
   25: block_content: 
    26: decl_stmt: 
     27: decl: 
      28: type: 
       29: name: u32
      30: name: i
     31: decl: 
      32: type: 
      33: name: j
    34: decl_stmt: 
     35: decl: 
      36: type: 
       37: name: s32
      38: name: vps_id
    39: decl_stmt: 
     40: decl: 
      41: type: 
       42: name: VVC_VPS
       43: modifier: *
      44: name: vps
    45: decl_stmt: 
     46: decl: 
      47: type: 
       48: name: Bool
      49: name: vps_default_ptl_dpb_hrd_max_tid_flag
      50: init: 
       51: expr: 
        52: literal: 0
    53: comment: //nalu header already parsed
    54: expr_stmt: 
     55: expr: 
      56: name: vps_id
      57: operator: =
      58: call: 
       59: name: gf_bs_read_int_log
       60: argument_list: 
        61: argument: 
         62: expr: 
          63: name: bs
        64: argument: 
         65: expr: 
          66: literal: 4
        67: argument: 
         68: expr: 
          69: literal: "vps_id"
    70: if_stmt: 
     71: if: 
      72: condition: 
       73: expr: 
        74: operator: (
        75: name: vps_id
        76: operator: <
        77: literal: 0
        78: operator: )
        79: operator: ||
        80: operator: (
        81: name: vps_id
        82: operator: >=
        83: literal: 16
        84: operator: )
      85: block: 
       86: block_content: 
        87: return: 
         88: expr: 
          89: operator: -
          90: literal: 1
    91: if_stmt: 
     92: if: 
      93: condition: 
       94: expr: 
        95: operator: !
        96: name: vps_id
      97: block: 
       98: block_content: 
        99: expr_stmt: 
         100: expr: 
          101: call: 
           102: name: GF_LOG
           103: argument_list: 
            104: argument: 
             105: expr: 
              106: name: GF_LOG_ERROR
            107: argument: 
             108: expr: 
              109: name: GF_LOG_CODING
            110: argument: 
             111: expr: 
              112: operator: (
              113: literal: "[VVC] VPS ID 0 is forbidden\n"
              114: operator: )
        115: return: 
         116: expr: 
          117: operator: -
          118: literal: 1
    119: expr_stmt: 
     120: expr: 
      121: name: vps
      122: operator: =
      123: operator: &
      124: name: 
       125: name: vvc
       126: operator: ->
       127: name: vps
       128: index: 
        129: expr: 
         130: name: vps_id
    131: if_stmt: 
     132: if: 
      133: condition: 
       134: expr: 
        135: operator: !
        136: name: 
         137: name: vps
         138: operator: ->
         139: name: state
      140: block: 
       141: block_content: 
        142: expr_stmt: 
         143: expr: 
          144: name: 
           145: name: vps
           146: operator: ->
           147: name: id
          148: operator: =
          149: name: vps_id
        150: expr_stmt: 
         151: expr: 
          152: name: 
           153: name: vps
           154: operator: ->
           155: name: state
          156: operator: =
          157: literal: 1
    158: expr_stmt: 
     159: expr: 
      160: name: 
       161: name: vps
       162: operator: ->
       163: name: max_layers
      164: operator: =
      165: literal: 1
      166: operator: +
      167: call: 
       168: name: gf_bs_read_int_log
       169: argument_list: 
        170: argument: 
         171: expr: 
          172: name: bs
        173: argument: 
         174: expr: 
          175: literal: 6
        176: argument: 
         177: expr: 
          178: literal: "max_layers"
    179: if_stmt: 
     180: if: 
      181: condition: 
       182: expr: 
        183: name: 
         184: name: vps
         185: operator: ->
         186: name: max_layers
        187: operator: >
        188: name: MAX_LHVC_LAYERS
      189: block: 
       190: block_content: 
        191: expr_stmt: 
         192: expr: 
          193: call: 
           194: name: GF_LOG
           195: argument_list: 
            196: argument: 
             197: expr: 
              198: name: GF_LOG_ERROR
            199: argument: 
             200: expr: 
              201: name: GF_LOG_CODING
            202: argument: 
             203: expr: 
              204: operator: (
              205: literal: "[VVC] sorry, %d layers in VPS but only %d supported\n"
              206: operator: ,
              207: name: 
               208: name: vps
               209: operator: ->
               210: name: max_layers
              211: operator: ,
              212: name: MAX_LHVC_LAYERS
              213: operator: )
        214: return: 
         215: expr: 
          216: operator: -
          217: literal: 1
    218: expr_stmt: 
     219: expr: 
      220: name: 
       221: name: vps
       222: operator: ->
       223: name: max_sub_layers
      224: operator: =
      225: call: 
       226: name: gf_bs_read_int_log
       227: argument_list: 
        228: argument: 
         229: expr: 
          230: name: bs
        231: argument: 
         232: expr: 
          233: literal: 3
        234: argument: 
         235: expr: 
          236: literal: "max_sub_layers_minus1"
      237: operator: +
      238: literal: 1
    239: if_stmt: 
     240: if: 
      241: condition: 
       242: expr: 
        243: operator: (
        244: name: 
         245: name: vps
         246: operator: ->
         247: name: max_layers
        248: operator: >
        249: literal: 1
        250: operator: )
        251: operator: &&
        252: operator: (
        253: name: 
         254: name: vps
         255: operator: ->
         256: name: max_sub_layers
        257: operator: >
        258: literal: 1
        259: operator: )
      260: block: 
       261: block_content: 
        262: expr_stmt: 
         263: expr: 
          264: name: vps_default_ptl_dpb_hrd_max_tid_flag
          265: operator: =
          266: call: 
           267: name: gf_bs_read_int_log
           268: argument_list: 
            269: argument: 
             270: expr: 
              271: name: bs
            272: argument: 
             273: expr: 
              274: literal: 1
            275: argument: 
             276: expr: 
              277: literal: "vps_default_ptl_dpb_hrd_max_tid_flag"
    278: if_stmt: 
     279: if: 
      280: condition: 
       281: expr: 
        282: name: 
         283: name: vps
         284: operator: ->
         285: name: max_layers
        286: operator: >
        287: literal: 1
      288: block: 
       289: block_content: 
        290: expr_stmt: 
         291: expr: 
          292: name: 
           293: name: vps
           294: operator: ->
           295: name: all_layers_independent
          296: operator: =
          297: call: 
           298: name: gf_bs_read_int_log
           299: argument_list: 
            300: argument: 
             301: expr: 
              302: name: bs
            303: argument: 
             304: expr: 
              305: literal: 1
            306: argument: 
             307: expr: 
              308: literal: "all_layers_independent"
    309: for: 
     310: control: 
      311: init: 
       312: expr: 
        313: name: i
        314: operator: =
        315: literal: 0
      316: condition: 
       317: expr: 
        318: name: i
        319: operator: <
        320: name: 
         321: name: vps
         322: operator: ->
         323: name: max_layers
      324: incr: 
       325: expr: 
        326: name: i
        327: operator: ++
     328: block: 
      329: block_content: 
       330: decl_stmt: 
        331: decl: 
         332: type: 
          333: name: u32
         334: name: layer_id
         335: init: 
          336: expr: 
           337: call: 
            338: name: gf_bs_read_int_log_idx
            339: argument_list: 
             340: argument: 
              341: expr: 
               342: name: bs
             343: argument: 
              344: expr: 
               345: literal: 6
             346: argument: 
              347: expr: 
               348: literal: "layer_id"
             349: argument: 
              350: expr: 
               351: name: i
       352: if_stmt: 
        353: if: 
         354: condition: 
          355: expr: 
           356: name: layer_id
           357: operator: >
           358: name: 
            359: name: vps
            360: operator: ->
            361: name: max_layer_id
         362: block: 
          363: block_content: 
           364: expr_stmt: 
            365: expr: 
             366: name: 
              367: name: vps
              368: operator: ->
              369: name: max_layer_id
             370: operator: =
             371: name: layer_id
       372: if_stmt: 
        373: if: 
         374: condition: 
          375: expr: 
           376: name: i
           377: operator: &&
           378: operator: !
           379: name: 
            380: name: vps
            381: operator: ->
            382: name: all_layers_independent
         383: block: 
          384: block_content: 
           385: decl_stmt: 
            386: decl: 
             387: type: 
              388: name: Bool
             389: name: layer_indep
             390: init: 
              391: expr: 
               392: call: 
                393: name: gf_bs_read_int_log_idx
                394: argument_list: 
                 395: argument: 
                  396: expr: 
                   397: name: bs
                 398: argument: 
                  399: expr: 
                   400: literal: 1
                 401: argument: 
                  402: expr: 
                   403: literal: "layer_independent"
                 404: argument: 
                  405: expr: 
                   406: name: i
           407: if_stmt: 
            408: if: 
             409: condition: 
              410: expr: 
               411: operator: !
               412: name: layer_indep
             413: block: 
              414: block_content: 
               415: decl_stmt: 
                416: decl: 
                 417: type: 
                  418: name: Bool
                 419: name: vps_max_tid_ref_present_flag
                 420: init: 
                  421: expr: 
                   422: call: 
                    423: name: gf_bs_read_int_log_idx
                    424: argument_list: 
                     425: argument: 
                      426: expr: 
                       427: name: bs
                     428: argument: 
                      429: expr: 
                       430: literal: 1
                     431: argument: 
                      432: expr: 
                       433: literal: "vps_max_tid_ref_present_flag"
                     434: argument: 
                      435: expr: 
                       436: name: i
               437: for: 
                438: control: 
                 439: init: 
                  440: expr: 
                   441: name: j
                   442: operator: =
                   443: literal: 0
                 444: condition: 
                  445: expr: 
                   446: name: j
                   447: operator: <
                   448: name: i
                 449: incr: 
                  450: expr: 
                   451: name: j
                   452: operator: ++
                453: block: 
                 454: block_content: 
                  455: decl_stmt: 
                   456: decl: 
                    457: type: 
                     458: name: Bool
                    459: name: vps_direct_ref_layer_flag
                    460: init: 
                     461: expr: 
                      462: call: 
                       463: name: gf_bs_read_int_log_idx2
                       464: argument_list: 
                        465: argument: 
                         466: expr: 
                          467: name: bs
                        468: argument: 
                         469: expr: 
                          470: literal: 1
                        471: argument: 
                         472: expr: 
                          473: literal: "vps_direct_ref_layer_flag"
                        474: argument: 
                         475: expr: 
                          476: name: i
                        477: argument: 
                         478: expr: 
                          479: name: j
                  480: if_stmt: 
                   481: if: 
                    482: condition: 
                     483: expr: 
                      484: name: vps_max_tid_ref_present_flag
                      485: operator: &&
                      486: name: vps_direct_ref_layer_flag
                    487: block: 
                     488: block_content: 
                      489: expr_stmt: 
                       490: expr: 
                        491: call: 
                         492: name: gf_bs_read_int_log_idx2
                         493: argument_list: 
                          494: argument: 
                           495: expr: 
                            496: name: bs
                          497: argument: 
                           498: expr: 
                            499: literal: 3
                          500: argument: 
                           501: expr: 
                            502: literal: "vps_max_tid_il_ref_pics_plus1"
                          503: argument: 
                           504: expr: 
                            505: name: i
                          506: argument: 
                           507: expr: 
                            508: name: j
    509: expr_stmt: 
     510: expr: 
      511: name: 
       512: name: vps
       513: operator: ->
       514: name: num_ptl
      515: operator: =
      516: literal: 1
    517: if_stmt: 
     518: if: 
      519: condition: 
       520: expr: 
        521: name: 
         522: name: vps
         523: operator: ->
         524: name: max_layers
        525: operator: >
        526: literal: 1
      527: block: 
       528: block_content: 
        529: if_stmt: 
         530: if: 
          531: condition: 
           532: expr: 
            533: name: 
             534: name: vps
             535: operator: ->
             536: name: all_layers_independent
          537: block: 
           538: block_content: 
            539: expr_stmt: 
             540: expr: 
              541: name: 
               542: name: vps
               543: operator: ->
               544: name: each_layer_is_ols
              545: operator: =
              546: call: 
               547: name: gf_bs_read_int_log
               548: argument_list: 
                549: argument: 
                 550: expr: 
                  551: name: bs
                552: argument: 
                 553: expr: 
                  554: literal: 1
                555: argument: 
                 556: expr: 
                  557: literal: "each_layer_is_ols"
        558: if_stmt: 
         559: if: 
          560: condition: 
           561: expr: 
            562: operator: !
            563: name: 
             564: name: vps
             565: operator: ->
             566: name: each_layer_is_ols
          567: block: 
           568: block_content: 
            569: decl_stmt: 
             570: decl: 
              571: type: 
               572: name: u32
              573: name: vps_ols_mode_idc
              574: init: 
               575: expr: 
                576: literal: 2
            577: if_stmt: 
             578: if: 
              579: condition: 
               580: expr: 
                581: operator: !
                582: name: 
                 583: name: vps
                 584: operator: ->
                 585: name: all_layers_independent
              586: block: 
               587: block_content: 
                588: expr_stmt: 
                 589: expr: 
                  590: name: vps_ols_mode_idc
                  591: operator: =
                  592: call: 
                   593: name: gf_bs_read_int_log
                   594: argument_list: 
                    595: argument: 
                     596: expr: 
                      597: name: bs
                    598: argument: 
                     599: expr: 
                      600: literal: 2
                    601: argument: 
                     602: expr: 
                      603: literal: "vps_ols_mode_idc"
            604: if_stmt: 
             605: if: 
              606: condition: 
               607: expr: 
                608: name: vps_ols_mode_idc
                609: operator: ==
                610: literal: 2
              611: block: 
               612: block_content: 
                613: decl_stmt: 
                 614: decl: 
                  615: type: 
                   616: name: u8
                  617: name: vps_num_output_layer_sets
                  618: init: 
                   619: expr: 
                    620: literal: 2
                    621: operator: +
                    622: call: 
                     623: name: gf_bs_read_int_log
                     624: argument_list: 
                      625: argument: 
                       626: expr: 
                        627: name: bs
                      628: argument: 
                       629: expr: 
                        630: literal: 8
                      631: argument: 
                       632: expr: 
                        633: literal: "vps_num_output_layer_sets_minus2"
                634: for: 
                 635: control: 
                  636: init: 
                   637: expr: 
                    638: name: i
                    639: operator: =
                    640: literal: 0
                  641: condition: 
                   642: expr: 
                    643: name: i
                    644: operator: <
                    645: name: vps_num_output_layer_sets
                  646: incr: 
                   647: expr: 
                    648: name: i
                    649: operator: ++
                 650: block: 
                  651: block_content: 
                   652: for: 
                    653: control: 
                     654: init: 
                      655: expr: 
                       656: name: j
                       657: operator: =
                       658: literal: 0
                     659: condition: 
                      660: expr: 
                       661: name: j
                       662: operator: <
                       663: name: 
                        664: name: vps
                        665: operator: ->
                        666: name: max_layers
                     667: incr: 
                      668: expr: 
                       669: name: j
                       670: operator: ++
                    671: block: 
                     672: block_content: 
                      673: expr_stmt: 
                       674: expr: 
                        675: call: 
                         676: name: gf_bs_read_int_log_idx2
                         677: argument_list: 
                          678: argument: 
                           679: expr: 
                            680: name: bs
                          681: argument: 
                           682: expr: 
                            683: literal: 1
                          684: argument: 
                           685: expr: 
                            686: literal: "vps_ols_output_layer_flag"
                          687: argument: 
                           688: expr: 
                            689: name: i
                          690: argument: 
                           691: expr: 
                            692: name: j
        693: expr_stmt: 
         694: expr: 
          695: name: 
           696: name: vps
           697: operator: ->
           698: name: num_ptl
          699: operator: =
          700: literal: 1
          701: operator: +
          702: call: 
           703: name: gf_bs_read_int_log
           704: argument_list: 
            705: argument: 
             706: expr: 
              707: name: bs
            708: argument: 
             709: expr: 
              710: literal: 8
            711: argument: 
             712: expr: 
              713: literal: "num_ptl_minus1"
    714: expr_stmt: 
     715: expr: 
      716: name: 
       717: name: vps
       718: operator: ->
       719: name: ptl
       720: index: 
        721: expr: 
         722: literal: 0
      723: operator: .
      724: name: pt_present
      725: operator: =
      726: literal: 1
    727: for: 
     728: control: 
      729: init: 
       730: expr: 
        731: name: i
        732: operator: =
        733: literal: 0
      734: condition: 
       735: expr: 
        736: name: i
        737: operator: <
        738: name: 
         739: name: vps
         740: operator: ->
         741: name: num_ptl
      742: incr: 
       743: expr: 
        744: name: i
        745: operator: ++
     746: block: 
      747: block_content: 
       748: if_stmt: 
        749: if: 
         750: condition: 
          751: expr: 
           752: name: i
         753: block: 
          754: block_content: 
           755: expr_stmt: 
            756: expr: 
             757: name: 
              758: name: vps
              759: operator: ->
              760: name: ptl
              761: index: 
               762: expr: 
                763: name: i
             764: operator: .
             765: name: pt_present
             766: operator: =
             767: call: 
              768: name: gf_bs_read_int_log_idx
              769: argument_list: 
               770: argument: 
                771: expr: 
                 772: name: bs
               773: argument: 
                774: expr: 
                 775: literal: 1
               776: argument: 
                777: expr: 
                 778: literal: "pt_present"
               779: argument: 
                780: expr: 
                 781: name: i
       782: if_stmt: 
        783: if: 
         784: condition: 
          785: expr: 
           786: operator: !
           787: name: vps_default_ptl_dpb_hrd_max_tid_flag
         788: block: 
          789: block_content: 
           790: expr_stmt: 
            791: expr: 
             792: name: 
              793: name: vps
              794: operator: ->
              795: name: ptl
              796: index: 
               797: expr: 
                798: name: i
             799: operator: .
             800: name: ptl_max_tid
             801: operator: =
             802: call: 
              803: name: gf_bs_read_int_log_idx
              804: argument_list: 
               805: argument: 
                806: expr: 
                 807: name: bs
               808: argument: 
                809: expr: 
                 810: literal: 3
               811: argument: 
                812: expr: 
                 813: literal: "ptl_max_tid"
               814: argument: 
                815: expr: 
                 816: name: i
        817: else: 
         818: block: 
          819: block_content: 
           820: expr_stmt: 
            821: expr: 
             822: name: 
              823: name: vps
              824: operator: ->
              825: name: ptl
              826: index: 
               827: expr: 
                828: name: i
             829: operator: .
             830: name: ptl_max_tid
             831: operator: =
             832: name: 
              833: name: vps
              834: operator: ->
              835: name: max_sub_layers
             836: operator: -
             837: literal: 1
       838: empty_stmt: 
    839: comment: //align
    840: expr_stmt: 
     841: expr: 
      842: call: 
       843: name: gf_bs_align
       844: argument_list: 
        845: argument: 
         846: expr: 
          847: name: bs
    848: for: 
     849: control: 
      850: init: 
       851: expr: 
        852: name: i
        853: operator: =
        854: literal: 0
      855: condition: 
       856: expr: 
        857: name: i
        858: operator: <
        859: name: 
         860: name: vps
         861: operator: ->
         862: name: num_ptl
      863: incr: 
       864: expr: 
        865: name: i
        866: operator: ++
     867: block: 
      868: block_content: 
       869: expr_stmt: 
        870: expr: 
         871: call: 
          872: name: vvc_profile_tier_level
          873: argument_list: 
           874: argument: 
            875: expr: 
             876: name: bs
           877: argument: 
            878: expr: 
             879: operator: &
             880: name: 
              881: name: vps
              882: operator: ->
              883: name: ptl
              884: index: 
               885: expr: 
                886: name: i
           887: argument: 
            888: expr: 
             889: name: i
    890: comment: //TODO, parse multilayer stuff
    891: return: 
     892: expr: 
      893: name: vps_id
=====
0: function: 
 1: type: 
  2: specifier: static
  3: name: s32
 4: name: gf_media_vvc_read_vps_bs_internal
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: GF_BitStream
     10: modifier: *
    11: name: bs
  12: parameter: 
   13: decl: 
    14: type: 
     15: name: VVCState
     16: modifier: *
    17: name: vvc
  18: parameter: 
   19: decl: 
    20: type: 
     21: name: Bool
    22: name: stop_at_vps_ext
 23: block: 
  24: block_content: 
   25: decl_stmt: 
    26: decl: 
     27: type: 
      28: name: u32
     29: name: i
    30: decl: 
     31: type: 
     32: name: j
   33: decl_stmt: 
    34: decl: 
     35: type: 
      36: name: s32
     37: name: vps_id
   38: decl_stmt: 
    39: decl: 
     40: type: 
      41: name: VVC_VPS
      42: modifier: *
     43: name: vps
   44: decl_stmt: 
    45: decl: 
     46: type: 
      47: name: Bool
     48: name: vps_default_ptl_dpb_hrd_max_tid_flag
     49: init: 
      50: expr: 
       51: literal: 0
   52: comment: //nalu header already parsed
   53: expr_stmt: 
    54: expr: 
     55: name: vps_id
     56: operator: =
     57: call: 
      58: name: gf_bs_read_int_log
      59: argument_list: 
       60: argument: 
        61: expr: 
         62: name: bs
       63: argument: 
        64: expr: 
         65: literal: 4
       66: argument: 
        67: expr: 
         68: literal: "vps_id"
   69: if_stmt: 
    70: if: 
     71: condition: 
      72: expr: 
       73: name: vps_id
       74: operator: >=
       75: literal: 16
     76: block: 
      77: block_content: 
       78: return: 
        79: expr: 
         80: operator: -
         81: literal: 1
   82: if_stmt: 
    83: if: 
     84: condition: 
      85: expr: 
       86: operator: !
       87: name: vps_id
     88: block: 
      89: block_content: 
       90: expr_stmt: 
        91: expr: 
         92: call: 
          93: name: GF_LOG
          94: argument_list: 
           95: argument: 
            96: expr: 
             97: name: GF_LOG_ERROR
           98: argument: 
            99: expr: 
             100: name: GF_LOG_CODING
           101: argument: 
            102: expr: 
             103: operator: (
             104: literal: "[VVC] VPS ID 0 is forbidden\n"
             105: operator: )
       106: return: 
        107: expr: 
         108: operator: -
         109: literal: 1
   110: expr_stmt: 
    111: expr: 
     112: name: vps
     113: operator: =
     114: operator: &
     115: name: 
      116: name: vvc
      117: operator: ->
      118: name: vps
      119: index: 
       120: expr: 
        121: name: vps_id
   122: if_stmt: 
    123: if: 
     124: condition: 
      125: expr: 
       126: operator: !
       127: name: 
        128: name: vps
        129: operator: ->
        130: name: state
     131: block: 
      132: block_content: 
       133: expr_stmt: 
        134: expr: 
         135: name: 
          136: name: vps
          137: operator: ->
          138: name: id
         139: operator: =
         140: name: vps_id
       141: expr_stmt: 
        142: expr: 
         143: name: 
          144: name: vps
          145: operator: ->
          146: name: state
         147: operator: =
         148: literal: 1
   149: expr_stmt: 
    150: expr: 
     151: name: 
      152: name: vps
      153: operator: ->
      154: name: max_layers
     155: operator: =
     156: literal: 1
     157: operator: +
     158: call: 
      159: name: gf_bs_read_int_log
      160: argument_list: 
       161: argument: 
        162: expr: 
         163: name: bs
       164: argument: 
        165: expr: 
         166: literal: 6
       167: argument: 
        168: expr: 
         169: literal: "max_layers"
   170: if_stmt: 
    171: if: 
     172: condition: 
      173: expr: 
       174: name: 
        175: name: vps
        176: operator: ->
        177: name: max_layers
       178: operator: >
       179: name: MAX_LHVC_LAYERS
     180: block: 
      181: block_content: 
       182: expr_stmt: 
        183: expr: 
         184: call: 
          185: name: GF_LOG
          186: argument_list: 
           187: argument: 
            188: expr: 
             189: name: GF_LOG_ERROR
           190: argument: 
            191: expr: 
             192: name: GF_LOG_CODING
           193: argument: 
            194: expr: 
             195: operator: (
             196: literal: "[VVC] sorry, %d layers in VPS but only %d supported\n"
             197: operator: ,
             198: name: 
              199: name: vps
              200: operator: ->
              201: name: max_layers
             202: operator: ,
             203: name: MAX_LHVC_LAYERS
             204: operator: )
       205: return: 
        206: expr: 
         207: operator: -
         208: literal: 1
   209: expr_stmt: 
    210: expr: 
     211: name: 
      212: name: vps
      213: operator: ->
      214: name: max_sub_layers
     215: operator: =
     216: call: 
      217: name: gf_bs_read_int_log
      218: argument_list: 
       219: argument: 
        220: expr: 
         221: name: bs
       222: argument: 
        223: expr: 
         224: literal: 3
       225: argument: 
        226: expr: 
         227: literal: "max_sub_layers_minus1"
     228: operator: +
     229: literal: 1
   230: if_stmt: 
    231: if: 
     232: condition: 
      233: expr: 
       234: operator: (
       235: name: 
        236: name: vps
        237: operator: ->
        238: name: max_layers
       239: operator: >
       240: literal: 1
       241: operator: )
       242: operator: &&
       243: operator: (
       244: name: 
        245: name: vps
        246: operator: ->
        247: name: max_sub_layers
       248: operator: >
       249: literal: 1
       250: operator: )
     251: block: 
      252: block_content: 
       253: expr_stmt: 
        254: expr: 
         255: name: vps_default_ptl_dpb_hrd_max_tid_flag
         256: operator: =
         257: call: 
          258: name: gf_bs_read_int_log
          259: argument_list: 
           260: argument: 
            261: expr: 
             262: name: bs
           263: argument: 
            264: expr: 
             265: literal: 1
           266: argument: 
            267: expr: 
             268: literal: "vps_default_ptl_dpb_hrd_max_tid_flag"
   269: if_stmt: 
    270: if: 
     271: condition: 
      272: expr: 
       273: name: 
        274: name: vps
        275: operator: ->
        276: name: max_layers
       277: operator: >
       278: literal: 1
     279: block: 
      280: block_content: 
       281: expr_stmt: 
        282: expr: 
         283: name: 
          284: name: vps
          285: operator: ->
          286: name: all_layers_independent
         287: operator: =
         288: call: 
          289: name: gf_bs_read_int_log
          290: argument_list: 
           291: argument: 
            292: expr: 
             293: name: bs
           294: argument: 
            295: expr: 
             296: literal: 1
           297: argument: 
            298: expr: 
             299: literal: "all_layers_independent"
   300: for: 
    301: control: 
     302: init: 
      303: expr: 
       304: name: i
       305: operator: =
       306: literal: 0
     307: condition: 
      308: expr: 
       309: name: i
       310: operator: <
       311: name: 
        312: name: vps
        313: operator: ->
        314: name: max_layers
     315: incr: 
      316: expr: 
       317: name: i
       318: operator: ++
    319: block: 
     320: block_content: 
      321: decl_stmt: 
       322: decl: 
        323: type: 
         324: name: u32
        325: name: layer_id
        326: init: 
         327: expr: 
          328: call: 
           329: name: gf_bs_read_int_log_idx
           330: argument_list: 
            331: argument: 
             332: expr: 
              333: name: bs
            334: argument: 
             335: expr: 
              336: literal: 6
            337: argument: 
             338: expr: 
              339: literal: "layer_id"
            340: argument: 
             341: expr: 
              342: name: i
      343: if_stmt: 
       344: if: 
        345: condition: 
         346: expr: 
          347: name: layer_id
          348: operator: >
          349: name: 
           350: name: vps
           351: operator: ->
           352: name: max_layer_id
        353: block: 
         354: block_content: 
          355: expr_stmt: 
           356: expr: 
            357: name: 
             358: name: vps
             359: operator: ->
             360: name: max_layer_id
            361: operator: =
            362: name: layer_id
      363: if_stmt: 
       364: if: 
        365: condition: 
         366: expr: 
          367: name: i
          368: operator: &&
          369: operator: !
          370: name: 
           371: name: vps
           372: operator: ->
           373: name: all_layers_independent
        374: block: 
         375: block_content: 
          376: decl_stmt: 
           377: decl: 
            378: type: 
             379: name: Bool
            380: name: layer_indep
            381: init: 
             382: expr: 
              383: call: 
               384: name: gf_bs_read_int_log_idx
               385: argument_list: 
                386: argument: 
                 387: expr: 
                  388: name: bs
                389: argument: 
                 390: expr: 
                  391: literal: 1
                392: argument: 
                 393: expr: 
                  394: literal: "layer_independent"
                395: argument: 
                 396: expr: 
                  397: name: i
          398: if_stmt: 
           399: if: 
            400: condition: 
             401: expr: 
              402: operator: !
              403: name: layer_indep
            404: block: 
             405: block_content: 
              406: decl_stmt: 
               407: decl: 
                408: type: 
                 409: name: Bool
                410: name: vps_max_tid_ref_present_flag
                411: init: 
                 412: expr: 
                  413: call: 
                   414: name: gf_bs_read_int_log_idx
                   415: argument_list: 
                    416: argument: 
                     417: expr: 
                      418: name: bs
                    419: argument: 
                     420: expr: 
                      421: literal: 1
                    422: argument: 
                     423: expr: 
                      424: literal: "vps_max_tid_ref_present_flag"
                    425: argument: 
                     426: expr: 
                      427: name: i
              428: for: 
               429: control: 
                430: init: 
                 431: expr: 
                  432: name: j
                  433: operator: =
                  434: literal: 0
                435: condition: 
                 436: expr: 
                  437: name: j
                  438: operator: <
                  439: name: i
                440: incr: 
                 441: expr: 
                  442: name: j
                  443: operator: ++
               444: block: 
                445: block_content: 
                 446: decl_stmt: 
                  447: decl: 
                   448: type: 
                    449: name: Bool
                   450: name: vps_direct_ref_layer_flag
                   451: init: 
                    452: expr: 
                     453: call: 
                      454: name: gf_bs_read_int_log_idx2
                      455: argument_list: 
                       456: argument: 
                        457: expr: 
                         458: name: bs
                       459: argument: 
                        460: expr: 
                         461: literal: 1
                       462: argument: 
                        463: expr: 
                         464: literal: "vps_direct_ref_layer_flag"
                       465: argument: 
                        466: expr: 
                         467: name: i
                       468: argument: 
                        469: expr: 
                         470: name: j
                 471: if_stmt: 
                  472: if: 
                   473: condition: 
                    474: expr: 
                     475: name: vps_max_tid_ref_present_flag
                     476: operator: &&
                     477: name: vps_direct_ref_layer_flag
                   478: block: 
                    479: block_content: 
                     480: expr_stmt: 
                      481: expr: 
                       482: call: 
                        483: name: gf_bs_read_int_log_idx2
                        484: argument_list: 
                         485: argument: 
                          486: expr: 
                           487: name: bs
                         488: argument: 
                          489: expr: 
                           490: literal: 3
                         491: argument: 
                          492: expr: 
                           493: literal: "vps_max_tid_il_ref_pics_plus1"
                         494: argument: 
                          495: expr: 
                           496: name: i
                         497: argument: 
                          498: expr: 
                           499: name: j
   500: expr_stmt: 
    501: expr: 
     502: name: 
      503: name: vps
      504: operator: ->
      505: name: num_ptl
     506: operator: =
     507: literal: 1
   508: if_stmt: 
    509: if: 
     510: condition: 
      511: expr: 
       512: name: 
        513: name: vps
        514: operator: ->
        515: name: max_layers
       516: operator: >
       517: literal: 1
     518: block: 
      519: block_content: 
       520: if_stmt: 
        521: if: 
         522: condition: 
          523: expr: 
           524: name: 
            525: name: vps
            526: operator: ->
            527: name: all_layers_independent
         528: block: 
          529: block_content: 
           530: expr_stmt: 
            531: expr: 
             532: name: 
              533: name: vps
              534: operator: ->
              535: name: each_layer_is_ols
             536: operator: =
             537: call: 
              538: name: gf_bs_read_int_log
              539: argument_list: 
               540: argument: 
                541: expr: 
                 542: name: bs
               543: argument: 
                544: expr: 
                 545: literal: 1
               546: argument: 
                547: expr: 
                 548: literal: "each_layer_is_ols"
       549: if_stmt: 
        550: if: 
         551: condition: 
          552: expr: 
           553: operator: !
           554: name: 
            555: name: vps
            556: operator: ->
            557: name: each_layer_is_ols
         558: block: 
          559: block_content: 
           560: decl_stmt: 
            561: decl: 
             562: type: 
              563: name: u32
             564: name: vps_ols_mode_idc
             565: init: 
              566: expr: 
               567: literal: 2
           568: if_stmt: 
            569: if: 
             570: condition: 
              571: expr: 
               572: operator: !
               573: name: 
                574: name: vps
                575: operator: ->
                576: name: all_layers_independent
             577: block: 
              578: block_content: 
               579: expr_stmt: 
                580: expr: 
                 581: name: vps_ols_mode_idc
                 582: operator: =
                 583: call: 
                  584: name: gf_bs_read_int_log
                  585: argument_list: 
                   586: argument: 
                    587: expr: 
                     588: name: bs
                   589: argument: 
                    590: expr: 
                     591: literal: 2
                   592: argument: 
                    593: expr: 
                     594: literal: "vps_ols_mode_idc"
           595: if_stmt: 
            596: if: 
             597: condition: 
              598: expr: 
               599: name: vps_ols_mode_idc
               600: operator: ==
               601: literal: 2
             602: block: 
              603: block_content: 
               604: decl_stmt: 
                605: decl: 
                 606: type: 
                  607: name: u8
                 608: name: vps_num_output_layer_sets
                 609: init: 
                  610: expr: 
                   611: literal: 2
                   612: operator: +
                   613: call: 
                    614: name: gf_bs_read_int_log
                    615: argument_list: 
                     616: argument: 
                      617: expr: 
                       618: name: bs
                     619: argument: 
                      620: expr: 
                       621: literal: 8
                     622: argument: 
                      623: expr: 
                       624: literal: "vps_num_output_layer_sets_minus2"
               625: for: 
                626: control: 
                 627: init: 
                  628: expr: 
                   629: name: i
                   630: operator: =
                   631: literal: 0
                 632: condition: 
                  633: expr: 
                   634: name: i
                   635: operator: <
                   636: name: vps_num_output_layer_sets
                 637: incr: 
                  638: expr: 
                   639: name: i
                   640: operator: ++
                641: block: 
                 642: block_content: 
                  643: for: 
                   644: control: 
                    645: init: 
                     646: expr: 
                      647: name: j
                      648: operator: =
                      649: literal: 0
                    650: condition: 
                     651: expr: 
                      652: name: j
                      653: operator: <
                      654: name: 
                       655: name: vps
                       656: operator: ->
                       657: name: max_layers
                    658: incr: 
                     659: expr: 
                      660: name: j
                      661: operator: ++
                   662: block: 
                    663: block_content: 
                     664: expr_stmt: 
                      665: expr: 
                       666: call: 
                        667: name: gf_bs_read_int_log_idx2
                        668: argument_list: 
                         669: argument: 
                          670: expr: 
                           671: name: bs
                         672: argument: 
                          673: expr: 
                           674: literal: 1
                         675: argument: 
                          676: expr: 
                           677: literal: "vps_ols_output_layer_flag"
                         678: argument: 
                          679: expr: 
                           680: name: i
                         681: argument: 
                          682: expr: 
                           683: name: j
       684: expr_stmt: 
        685: expr: 
         686: name: 
          687: name: vps
          688: operator: ->
          689: name: num_ptl
         690: operator: =
         691: literal: 1
         692: operator: +
         693: call: 
          694: name: gf_bs_read_int_log
          695: argument_list: 
           696: argument: 
            697: expr: 
             698: name: bs
           699: argument: 
            700: expr: 
             701: literal: 8
           702: argument: 
            703: expr: 
             704: literal: "num_ptl_minus1"
   705: expr_stmt: 
    706: expr: 
     707: name: 
      708: name: vps
      709: operator: ->
      710: name: ptl
      711: index: 
       712: expr: 
        713: literal: 0
     714: operator: .
     715: name: pt_present
     716: operator: =
     717: literal: 1
   718: for: 
    719: control: 
     720: init: 
      721: expr: 
       722: name: i
       723: operator: =
       724: literal: 0
     725: condition: 
      726: expr: 
       727: name: i
       728: operator: <
       729: name: 
        730: name: vps
        731: operator: ->
        732: name: num_ptl
     733: incr: 
      734: expr: 
       735: name: i
       736: operator: ++
    737: block: 
     738: block_content: 
      739: if_stmt: 
       740: if: 
        741: condition: 
         742: expr: 
          743: name: i
        744: block: 
         745: block_content: 
          746: expr_stmt: 
           747: expr: 
            748: name: 
             749: name: vps
             750: operator: ->
             751: name: ptl
             752: index: 
              753: expr: 
               754: name: i
            755: operator: .
            756: name: pt_present
            757: operator: =
            758: call: 
             759: name: gf_bs_read_int_log_idx
             760: argument_list: 
              761: argument: 
               762: expr: 
                763: name: bs
              764: argument: 
               765: expr: 
                766: literal: 1
              767: argument: 
               768: expr: 
                769: literal: "pt_present"
              770: argument: 
               771: expr: 
                772: name: i
      773: if_stmt: 
       774: if: 
        775: condition: 
         776: expr: 
          777: operator: !
          778: name: vps_default_ptl_dpb_hrd_max_tid_flag
        779: block: 
         780: block_content: 
          781: expr_stmt: 
           782: expr: 
            783: name: 
             784: name: vps
             785: operator: ->
             786: name: ptl
             787: index: 
              788: expr: 
               789: name: i
            790: operator: .
            791: name: ptl_max_tid
            792: operator: =
            793: call: 
             794: name: gf_bs_read_int_log_idx
             795: argument_list: 
              796: argument: 
               797: expr: 
                798: name: bs
              799: argument: 
               800: expr: 
                801: literal: 3
              802: argument: 
               803: expr: 
                804: literal: "ptl_max_tid"
              805: argument: 
               806: expr: 
                807: name: i
       808: else: 
        809: block: 
         810: block_content: 
          811: expr_stmt: 
           812: expr: 
            813: name: 
             814: name: vps
             815: operator: ->
             816: name: ptl
             817: index: 
              818: expr: 
               819: name: i
            820: operator: .
            821: name: ptl_max_tid
            822: operator: =
            823: name: 
             824: name: vps
             825: operator: ->
             826: name: max_sub_layers
            827: operator: -
            828: literal: 1
      829: empty_stmt: 
   830: comment: //align
   831: expr_stmt: 
    832: expr: 
     833: call: 
      834: name: gf_bs_align
      835: argument_list: 
       836: argument: 
        837: expr: 
         838: name: bs
   839: for: 
    840: control: 
     841: init: 
      842: expr: 
       843: name: i
       844: operator: =
       845: literal: 0
     846: condition: 
      847: expr: 
       848: name: i
       849: operator: <
       850: name: 
        851: name: vps
        852: operator: ->
        853: name: num_ptl
     854: incr: 
      855: expr: 
       856: name: i
       857: operator: ++
    858: block: 
     859: block_content: 
      860: expr_stmt: 
       861: expr: 
        862: call: 
         863: name: vvc_profile_tier_level
         864: argument_list: 
          865: argument: 
           866: expr: 
            867: name: bs
          868: argument: 
           869: expr: 
            870: operator: &
            871: name: 
             872: name: vps
             873: operator: ->
             874: name: ptl
             875: index: 
              876: expr: 
               877: name: i
          878: argument: 
           879: expr: 
            880: name: i
   881: comment: //TODO, parse multilayer stuff
   882: return: 
    883: expr: 
     884: name: vps_id

----------------------------------------
0: function: 
 1: type: 
  2: specifier: static
  3: name: s32
 4: name: gf_media_vvc_read_vps_bs_internal
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: GF_BitStream
     10: modifier: *
    11: name: bs
  12: parameter: 
   13: decl: 
    14: type: 
     15: name: VVCState
     16: modifier: *
    17: name: vvc
  18: parameter: 
   19: decl: 
    20: type: 
     21: name: Bool
    22: name: stop_at_vps_ext
 23: block: 
  24: block_content: 
   25: decl_stmt: 
    26: decl: 
     27: type: 
      28: name: u32
     29: name: i
    30: decl: 
     31: type: 
     32: name: j
   33: decl_stmt: 
    34: decl: 
     35: type: 
      36: name: s32
     37: name: vps_id
   38: decl_stmt: 
    39: decl: 
     40: type: 
      41: name: VVC_VPS
      42: modifier: *
     43: name: vps
   44: decl_stmt: 
    45: decl: 
     46: type: 
      47: name: Bool
     48: name: vps_default_ptl_dpb_hrd_max_tid_flag
     49: init: 
      50: expr: 
       51: literal: 0
   52: comment: //nalu header already parsed
   53: expr_stmt: 
    54: expr: 
     55: name: vps_id
     56: operator: =
     57: call: 
      58: name: gf_bs_read_int_log
      59: argument_list: 
       60: argument: 
        61: expr: 
         62: name: bs
       63: argument: 
        64: expr: 
         65: literal: 4
       66: argument: 
        67: expr: 
         68: literal: "vps_id"
   69: if_stmt: 
    70: if: 
     71: condition: 
      72: expr: 
       73: operator: (
       74: name: vps_id
       75: operator: <
       76: literal: 0
       77: operator: )
       78: operator: ||
       79: operator: (
       80: name: vps_id
       81: operator: >=
       82: literal: 16
       83: operator: )
     84: block: 
      85: block_content: 
       86: return: 
        87: expr: 
         88: operator: -
         89: literal: 1
   90: if_stmt: 
    91: if: 
     92: condition: 
      93: expr: 
       94: operator: !
       95: name: vps_id
     96: block: 
      97: block_content: 
       98: expr_stmt: 
        99: expr: 
         100: call: 
          101: name: GF_LOG
          102: argument_list: 
           103: argument: 
            104: expr: 
             105: name: GF_LOG_ERROR
           106: argument: 
            107: expr: 
             108: name: GF_LOG_CODING
           109: argument: 
            110: expr: 
             111: operator: (
             112: literal: "[VVC] VPS ID 0 is forbidden\n"
             113: operator: )
       114: return: 
        115: expr: 
         116: operator: -
         117: literal: 1
   118: expr_stmt: 
    119: expr: 
     120: name: vps
     121: operator: =
     122: operator: &
     123: name: 
      124: name: vvc
      125: operator: ->
      126: name: vps
      127: index: 
       128: expr: 
        129: name: vps_id
   130: if_stmt: 
    131: if: 
     132: condition: 
      133: expr: 
       134: operator: !
       135: name: 
        136: name: vps
        137: operator: ->
        138: name: state
     139: block: 
      140: block_content: 
       141: expr_stmt: 
        142: expr: 
         143: name: 
          144: name: vps
          145: operator: ->
          146: name: id
         147: operator: =
         148: name: vps_id
       149: expr_stmt: 
        150: expr: 
         151: name: 
          152: name: vps
          153: operator: ->
          154: name: state
         155: operator: =
         156: literal: 1
   157: expr_stmt: 
    158: expr: 
     159: name: 
      160: name: vps
      161: operator: ->
      162: name: max_layers
     163: operator: =
     164: literal: 1
     165: operator: +
     166: call: 
      167: name: gf_bs_read_int_log
      168: argument_list: 
       169: argument: 
        170: expr: 
         171: name: bs
       172: argument: 
        173: expr: 
         174: literal: 6
       175: argument: 
        176: expr: 
         177: literal: "max_layers"
   178: if_stmt: 
    179: if: 
     180: condition: 
      181: expr: 
       182: name: 
        183: name: vps
        184: operator: ->
        185: name: max_layers
       186: operator: >
       187: name: MAX_LHVC_LAYERS
     188: block: 
      189: block_content: 
       190: expr_stmt: 
        191: expr: 
         192: call: 
          193: name: GF_LOG
          194: argument_list: 
           195: argument: 
            196: expr: 
             197: name: GF_LOG_ERROR
           198: argument: 
            199: expr: 
             200: name: GF_LOG_CODING
           201: argument: 
            202: expr: 
             203: operator: (
             204: literal: "[VVC] sorry, %d layers in VPS but only %d supported\n"
             205: operator: ,
             206: name: 
              207: name: vps
              208: operator: ->
              209: name: max_layers
             210: operator: ,
             211: name: MAX_LHVC_LAYERS
             212: operator: )
       213: return: 
        214: expr: 
         215: operator: -
         216: literal: 1
   217: expr_stmt: 
    218: expr: 
     219: name: 
      220: name: vps
      221: operator: ->
      222: name: max_sub_layers
     223: operator: =
     224: call: 
      225: name: gf_bs_read_int_log
      226: argument_list: 
       227: argument: 
        228: expr: 
         229: name: bs
       230: argument: 
        231: expr: 
         232: literal: 3
       233: argument: 
        234: expr: 
         235: literal: "max_sub_layers_minus1"
     236: operator: +
     237: literal: 1
   238: if_stmt: 
    239: if: 
     240: condition: 
      241: expr: 
       242: operator: (
       243: name: 
        244: name: vps
        245: operator: ->
        246: name: max_layers
       247: operator: >
       248: literal: 1
       249: operator: )
       250: operator: &&
       251: operator: (
       252: name: 
        253: name: vps
        254: operator: ->
        255: name: max_sub_layers
       256: operator: >
       257: literal: 1
       258: operator: )
     259: block: 
      260: block_content: 
       261: expr_stmt: 
        262: expr: 
         263: name: vps_default_ptl_dpb_hrd_max_tid_flag
         264: operator: =
         265: call: 
          266: name: gf_bs_read_int_log
          267: argument_list: 
           268: argument: 
            269: expr: 
             270: name: bs
           271: argument: 
            272: expr: 
             273: literal: 1
           274: argument: 
            275: expr: 
             276: literal: "vps_default_ptl_dpb_hrd_max_tid_flag"
   277: if_stmt: 
    278: if: 
     279: condition: 
      280: expr: 
       281: name: 
        282: name: vps
        283: operator: ->
        284: name: max_layers
       285: operator: >
       286: literal: 1
     287: block: 
      288: block_content: 
       289: expr_stmt: 
        290: expr: 
         291: name: 
          292: name: vps
          293: operator: ->
          294: name: all_layers_independent
         295: operator: =
         296: call: 
          297: name: gf_bs_read_int_log
          298: argument_list: 
           299: argument: 
            300: expr: 
             301: name: bs
           302: argument: 
            303: expr: 
             304: literal: 1
           305: argument: 
            306: expr: 
             307: literal: "all_layers_independent"
   308: for: 
    309: control: 
     310: init: 
      311: expr: 
       312: name: i
       313: operator: =
       314: literal: 0
     315: condition: 
      316: expr: 
       317: name: i
       318: operator: <
       319: name: 
        320: name: vps
        321: operator: ->
        322: name: max_layers
     323: incr: 
      324: expr: 
       325: name: i
       326: operator: ++
    327: block: 
     328: block_content: 
      329: decl_stmt: 
       330: decl: 
        331: type: 
         332: name: u32
        333: name: layer_id
        334: init: 
         335: expr: 
          336: call: 
           337: name: gf_bs_read_int_log_idx
           338: argument_list: 
            339: argument: 
             340: expr: 
              341: name: bs
            342: argument: 
             343: expr: 
              344: literal: 6
            345: argument: 
             346: expr: 
              347: literal: "layer_id"
            348: argument: 
             349: expr: 
              350: name: i
      351: if_stmt: 
       352: if: 
        353: condition: 
         354: expr: 
          355: name: layer_id
          356: operator: >
          357: name: 
           358: name: vps
           359: operator: ->
           360: name: max_layer_id
        361: block: 
         362: block_content: 
          363: expr_stmt: 
           364: expr: 
            365: name: 
             366: name: vps
             367: operator: ->
             368: name: max_layer_id
            369: operator: =
            370: name: layer_id
      371: if_stmt: 
       372: if: 
        373: condition: 
         374: expr: 
          375: name: i
          376: operator: &&
          377: operator: !
          378: name: 
           379: name: vps
           380: operator: ->
           381: name: all_layers_independent
        382: block: 
         383: block_content: 
          384: decl_stmt: 
           385: decl: 
            386: type: 
             387: name: Bool
            388: name: layer_indep
            389: init: 
             390: expr: 
              391: call: 
               392: name: gf_bs_read_int_log_idx
               393: argument_list: 
                394: argument: 
                 395: expr: 
                  396: name: bs
                397: argument: 
                 398: expr: 
                  399: literal: 1
                400: argument: 
                 401: expr: 
                  402: literal: "layer_independent"
                403: argument: 
                 404: expr: 
                  405: name: i
          406: if_stmt: 
           407: if: 
            408: condition: 
             409: expr: 
              410: operator: !
              411: name: layer_indep
            412: block: 
             413: block_content: 
              414: decl_stmt: 
               415: decl: 
                416: type: 
                 417: name: Bool
                418: name: vps_max_tid_ref_present_flag
                419: init: 
                 420: expr: 
                  421: call: 
                   422: name: gf_bs_read_int_log_idx
                   423: argument_list: 
                    424: argument: 
                     425: expr: 
                      426: name: bs
                    427: argument: 
                     428: expr: 
                      429: literal: 1
                    430: argument: 
                     431: expr: 
                      432: literal: "vps_max_tid_ref_present_flag"
                    433: argument: 
                     434: expr: 
                      435: name: i
              436: for: 
               437: control: 
                438: init: 
                 439: expr: 
                  440: name: j
                  441: operator: =
                  442: literal: 0
                443: condition: 
                 444: expr: 
                  445: name: j
                  446: operator: <
                  447: name: i
                448: incr: 
                 449: expr: 
                  450: name: j
                  451: operator: ++
               452: block: 
                453: block_content: 
                 454: decl_stmt: 
                  455: decl: 
                   456: type: 
                    457: name: Bool
                   458: name: vps_direct_ref_layer_flag
                   459: init: 
                    460: expr: 
                     461: call: 
                      462: name: gf_bs_read_int_log_idx2
                      463: argument_list: 
                       464: argument: 
                        465: expr: 
                         466: name: bs
                       467: argument: 
                        468: expr: 
                         469: literal: 1
                       470: argument: 
                        471: expr: 
                         472: literal: "vps_direct_ref_layer_flag"
                       473: argument: 
                        474: expr: 
                         475: name: i
                       476: argument: 
                        477: expr: 
                         478: name: j
                 479: if_stmt: 
                  480: if: 
                   481: condition: 
                    482: expr: 
                     483: name: vps_max_tid_ref_present_flag
                     484: operator: &&
                     485: name: vps_direct_ref_layer_flag
                   486: block: 
                    487: block_content: 
                     488: expr_stmt: 
                      489: expr: 
                       490: call: 
                        491: name: gf_bs_read_int_log_idx2
                        492: argument_list: 
                         493: argument: 
                          494: expr: 
                           495: name: bs
                         496: argument: 
                          497: expr: 
                           498: literal: 3
                         499: argument: 
                          500: expr: 
                           501: literal: "vps_max_tid_il_ref_pics_plus1"
                         502: argument: 
                          503: expr: 
                           504: name: i
                         505: argument: 
                          506: expr: 
                           507: name: j
   508: expr_stmt: 
    509: expr: 
     510: name: 
      511: name: vps
      512: operator: ->
      513: name: num_ptl
     514: operator: =
     515: literal: 1
   516: if_stmt: 
    517: if: 
     518: condition: 
      519: expr: 
       520: name: 
        521: name: vps
        522: operator: ->
        523: name: max_layers
       524: operator: >
       525: literal: 1
     526: block: 
      527: block_content: 
       528: if_stmt: 
        529: if: 
         530: condition: 
          531: expr: 
           532: name: 
            533: name: vps
            534: operator: ->
            535: name: all_layers_independent
         536: block: 
          537: block_content: 
           538: expr_stmt: 
            539: expr: 
             540: name: 
              541: name: vps
              542: operator: ->
              543: name: each_layer_is_ols
             544: operator: =
             545: call: 
              546: name: gf_bs_read_int_log
              547: argument_list: 
               548: argument: 
                549: expr: 
                 550: name: bs
               551: argument: 
                552: expr: 
                 553: literal: 1
               554: argument: 
                555: expr: 
                 556: literal: "each_layer_is_ols"
       557: if_stmt: 
        558: if: 
         559: condition: 
          560: expr: 
           561: operator: !
           562: name: 
            563: name: vps
            564: operator: ->
            565: name: each_layer_is_ols
         566: block: 
          567: block_content: 
           568: decl_stmt: 
            569: decl: 
             570: type: 
              571: name: u32
             572: name: vps_ols_mode_idc
             573: init: 
              574: expr: 
               575: literal: 2
           576: if_stmt: 
            577: if: 
             578: condition: 
              579: expr: 
               580: operator: !
               581: name: 
                582: name: vps
                583: operator: ->
                584: name: all_layers_independent
             585: block: 
              586: block_content: 
               587: expr_stmt: 
                588: expr: 
                 589: name: vps_ols_mode_idc
                 590: operator: =
                 591: call: 
                  592: name: gf_bs_read_int_log
                  593: argument_list: 
                   594: argument: 
                    595: expr: 
                     596: name: bs
                   597: argument: 
                    598: expr: 
                     599: literal: 2
                   600: argument: 
                    601: expr: 
                     602: literal: "vps_ols_mode_idc"
           603: if_stmt: 
            604: if: 
             605: condition: 
              606: expr: 
               607: name: vps_ols_mode_idc
               608: operator: ==
               609: literal: 2
             610: block: 
              611: block_content: 
               612: decl_stmt: 
                613: decl: 
                 614: type: 
                  615: name: u8
                 616: name: vps_num_output_layer_sets
                 617: init: 
                  618: expr: 
                   619: literal: 2
                   620: operator: +
                   621: call: 
                    622: name: gf_bs_read_int_log
                    623: argument_list: 
                     624: argument: 
                      625: expr: 
                       626: name: bs
                     627: argument: 
                      628: expr: 
                       629: literal: 8
                     630: argument: 
                      631: expr: 
                       632: literal: "vps_num_output_layer_sets_minus2"
               633: for: 
                634: control: 
                 635: init: 
                  636: expr: 
                   637: name: i
                   638: operator: =
                   639: literal: 0
                 640: condition: 
                  641: expr: 
                   642: name: i
                   643: operator: <
                   644: name: vps_num_output_layer_sets
                 645: incr: 
                  646: expr: 
                   647: name: i
                   648: operator: ++
                649: block: 
                 650: block_content: 
                  651: for: 
                   652: control: 
                    653: init: 
                     654: expr: 
                      655: name: j
                      656: operator: =
                      657: literal: 0
                    658: condition: 
                     659: expr: 
                      660: name: j
                      661: operator: <
                      662: name: 
                       663: name: vps
                       664: operator: ->
                       665: name: max_layers
                    666: incr: 
                     667: expr: 
                      668: name: j
                      669: operator: ++
                   670: block: 
                    671: block_content: 
                     672: expr_stmt: 
                      673: expr: 
                       674: call: 
                        675: name: gf_bs_read_int_log_idx2
                        676: argument_list: 
                         677: argument: 
                          678: expr: 
                           679: name: bs
                         680: argument: 
                          681: expr: 
                           682: literal: 1
                         683: argument: 
                          684: expr: 
                           685: literal: "vps_ols_output_layer_flag"
                         686: argument: 
                          687: expr: 
                           688: name: i
                         689: argument: 
                          690: expr: 
                           691: name: j
       692: expr_stmt: 
        693: expr: 
         694: name: 
          695: name: vps
          696: operator: ->
          697: name: num_ptl
         698: operator: =
         699: literal: 1
         700: operator: +
         701: call: 
          702: name: gf_bs_read_int_log
          703: argument_list: 
           704: argument: 
            705: expr: 
             706: name: bs
           707: argument: 
            708: expr: 
             709: literal: 8
           710: argument: 
            711: expr: 
             712: literal: "num_ptl_minus1"
   713: expr_stmt: 
    714: expr: 
     715: name: 
      716: name: vps
      717: operator: ->
      718: name: ptl
      719: index: 
       720: expr: 
        721: literal: 0
     722: operator: .
     723: name: pt_present
     724: operator: =
     725: literal: 1
   726: for: 
    727: control: 
     728: init: 
      729: expr: 
       730: name: i
       731: operator: =
       732: literal: 0
     733: condition: 
      734: expr: 
       735: name: i
       736: operator: <
       737: name: 
        738: name: vps
        739: operator: ->
        740: name: num_ptl
     741: incr: 
      742: expr: 
       743: name: i
       744: operator: ++
    745: block: 
     746: block_content: 
      747: if_stmt: 
       748: if: 
        749: condition: 
         750: expr: 
          751: name: i
        752: block: 
         753: block_content: 
          754: expr_stmt: 
           755: expr: 
            756: name: 
             757: name: vps
             758: operator: ->
             759: name: ptl
             760: index: 
              761: expr: 
               762: name: i
            763: operator: .
            764: name: pt_present
            765: operator: =
            766: call: 
             767: name: gf_bs_read_int_log_idx
             768: argument_list: 
              769: argument: 
               770: expr: 
                771: name: bs
              772: argument: 
               773: expr: 
                774: literal: 1
              775: argument: 
               776: expr: 
                777: literal: "pt_present"
              778: argument: 
               779: expr: 
                780: name: i
      781: if_stmt: 
       782: if: 
        783: condition: 
         784: expr: 
          785: operator: !
          786: name: vps_default_ptl_dpb_hrd_max_tid_flag
        787: block: 
         788: block_content: 
          789: expr_stmt: 
           790: expr: 
            791: name: 
             792: name: vps
             793: operator: ->
             794: name: ptl
             795: index: 
              796: expr: 
               797: name: i
            798: operator: .
            799: name: ptl_max_tid
            800: operator: =
            801: call: 
             802: name: gf_bs_read_int_log_idx
             803: argument_list: 
              804: argument: 
               805: expr: 
                806: name: bs
              807: argument: 
               808: expr: 
                809: literal: 3
              810: argument: 
               811: expr: 
                812: literal: "ptl_max_tid"
              813: argument: 
               814: expr: 
                815: name: i
       816: else: 
        817: block: 
         818: block_content: 
          819: expr_stmt: 
           820: expr: 
            821: name: 
             822: name: vps
             823: operator: ->
             824: name: ptl
             825: index: 
              826: expr: 
               827: name: i
            828: operator: .
            829: name: ptl_max_tid
            830: operator: =
            831: name: 
             832: name: vps
             833: operator: ->
             834: name: max_sub_layers
            835: operator: -
            836: literal: 1
      837: empty_stmt: 
   838: comment: //align
   839: expr_stmt: 
    840: expr: 
     841: call: 
      842: name: gf_bs_align
      843: argument_list: 
       844: argument: 
        845: expr: 
         846: name: bs
   847: for: 
    848: control: 
     849: init: 
      850: expr: 
       851: name: i
       852: operator: =
       853: literal: 0
     854: condition: 
      855: expr: 
       856: name: i
       857: operator: <
       858: name: 
        859: name: vps
        860: operator: ->
        861: name: num_ptl
     862: incr: 
      863: expr: 
       864: name: i
       865: operator: ++
    866: block: 
     867: block_content: 
      868: expr_stmt: 
       869: expr: 
        870: call: 
         871: name: vvc_profile_tier_level
         872: argument_list: 
          873: argument: 
           874: expr: 
            875: name: bs
          876: argument: 
           877: expr: 
            878: operator: &
            879: name: 
             880: name: vps
             881: operator: ->
             882: name: ptl
             883: index: 
              884: expr: 
               885: name: i
          886: argument: 
           887: expr: 
            888: name: i
   889: comment: //TODO, parse multilayer stuff
   890: return: 
    891: expr: 
     892: name: vps_id
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: u32
    6: name: i
   7: decl: 
    8: type: 
    9: name: j
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: s32
    14: name: vps_id
  15: decl_stmt: 
   16: decl: 
    17: type: 
     18: name: VVC_VPS
     19: modifier: *
    20: name: vps
  21: decl_stmt: 
   22: decl: 
    23: type: 
     24: name: Bool
    25: name: vps_default_ptl_dpb_hrd_max_tid_flag
    26: init: 
     27: expr: 
      28: literal: 0
  29: comment: //nalu header already parsed
  30: expr_stmt: 
   31: expr: 
    32: name: vps_id
    33: operator: =
    34: call: 
     35: name: gf_bs_read_int_log
     36: argument_list: 
      37: argument: 
       38: expr: 
        39: name: bs
      40: argument: 
       41: expr: 
        42: literal: 4
      43: argument: 
       44: expr: 
        45: literal: "vps_id"
  46: if_stmt: 
   47: if: 
    48: condition: 
     49: expr: 
      50: name: vps_id
      51: operator: >=
      52: literal: 16
    53: block: 
     54: block_content: 
      55: return: 
       56: expr: 
        57: operator: -
        58: literal: 1
  59: if_stmt: 
   60: if: 
    61: condition: 
     62: expr: 
      63: operator: !
      64: name: vps_id
    65: block: 
     66: block_content: 
      67: expr_stmt: 
       68: expr: 
        69: call: 
         70: name: GF_LOG
         71: argument_list: 
          72: argument: 
           73: expr: 
            74: name: GF_LOG_ERROR
          75: argument: 
           76: expr: 
            77: name: GF_LOG_CODING
          78: argument: 
           79: expr: 
            80: operator: (
            81: literal: "[VVC] VPS ID 0 is forbidden\n"
            82: operator: )
      83: return: 
       84: expr: 
        85: operator: -
        86: literal: 1
  87: expr_stmt: 
   88: expr: 
    89: name: vps
    90: operator: =
    91: operator: &
    92: name: 
     93: name: vvc
     94: operator: ->
     95: name: vps
     96: index: 
      97: expr: 
       98: name: vps_id
  99: if_stmt: 
   100: if: 
    101: condition: 
     102: expr: 
      103: operator: !
      104: name: 
       105: name: vps
       106: operator: ->
       107: name: state
    108: block: 
     109: block_content: 
      110: expr_stmt: 
       111: expr: 
        112: name: 
         113: name: vps
         114: operator: ->
         115: name: id
        116: operator: =
        117: name: vps_id
      118: expr_stmt: 
       119: expr: 
        120: name: 
         121: name: vps
         122: operator: ->
         123: name: state
        124: operator: =
        125: literal: 1
  126: expr_stmt: 
   127: expr: 
    128: name: 
     129: name: vps
     130: operator: ->
     131: name: max_layers
    132: operator: =
    133: literal: 1
    134: operator: +
    135: call: 
     136: name: gf_bs_read_int_log
     137: argument_list: 
      138: argument: 
       139: expr: 
        140: name: bs
      141: argument: 
       142: expr: 
        143: literal: 6
      144: argument: 
       145: expr: 
        146: literal: "max_layers"
  147: if_stmt: 
   148: if: 
    149: condition: 
     150: expr: 
      151: name: 
       152: name: vps
       153: operator: ->
       154: name: max_layers
      155: operator: >
      156: name: MAX_LHVC_LAYERS
    157: block: 
     158: block_content: 
      159: expr_stmt: 
       160: expr: 
        161: call: 
         162: name: GF_LOG
         163: argument_list: 
          164: argument: 
           165: expr: 
            166: name: GF_LOG_ERROR
          167: argument: 
           168: expr: 
            169: name: GF_LOG_CODING
          170: argument: 
           171: expr: 
            172: operator: (
            173: literal: "[VVC] sorry, %d layers in VPS but only %d supported\n"
            174: operator: ,
            175: name: 
             176: name: vps
             177: operator: ->
             178: name: max_layers
            179: operator: ,
            180: name: MAX_LHVC_LAYERS
            181: operator: )
      182: return: 
       183: expr: 
        184: operator: -
        185: literal: 1
  186: expr_stmt: 
   187: expr: 
    188: name: 
     189: name: vps
     190: operator: ->
     191: name: max_sub_layers
    192: operator: =
    193: call: 
     194: name: gf_bs_read_int_log
     195: argument_list: 
      196: argument: 
       197: expr: 
        198: name: bs
      199: argument: 
       200: expr: 
        201: literal: 3
      202: argument: 
       203: expr: 
        204: literal: "max_sub_layers_minus1"
    205: operator: +
    206: literal: 1
  207: if_stmt: 
   208: if: 
    209: condition: 
     210: expr: 
      211: operator: (
      212: name: 
       213: name: vps
       214: operator: ->
       215: name: max_layers
      216: operator: >
      217: literal: 1
      218: operator: )
      219: operator: &&
      220: operator: (
      221: name: 
       222: name: vps
       223: operator: ->
       224: name: max_sub_layers
      225: operator: >
      226: literal: 1
      227: operator: )
    228: block: 
     229: block_content: 
      230: expr_stmt: 
       231: expr: 
        232: name: vps_default_ptl_dpb_hrd_max_tid_flag
        233: operator: =
        234: call: 
         235: name: gf_bs_read_int_log
         236: argument_list: 
          237: argument: 
           238: expr: 
            239: name: bs
          240: argument: 
           241: expr: 
            242: literal: 1
          243: argument: 
           244: expr: 
            245: literal: "vps_default_ptl_dpb_hrd_max_tid_flag"
  246: if_stmt: 
   247: if: 
    248: condition: 
     249: expr: 
      250: name: 
       251: name: vps
       252: operator: ->
       253: name: max_layers
      254: operator: >
      255: literal: 1
    256: block: 
     257: block_content: 
      258: expr_stmt: 
       259: expr: 
        260: name: 
         261: name: vps
         262: operator: ->
         263: name: all_layers_independent
        264: operator: =
        265: call: 
         266: name: gf_bs_read_int_log
         267: argument_list: 
          268: argument: 
           269: expr: 
            270: name: bs
          271: argument: 
           272: expr: 
            273: literal: 1
          274: argument: 
           275: expr: 
            276: literal: "all_layers_independent"
  277: for: 
   278: control: 
    279: init: 
     280: expr: 
      281: name: i
      282: operator: =
      283: literal: 0
    284: condition: 
     285: expr: 
      286: name: i
      287: operator: <
      288: name: 
       289: name: vps
       290: operator: ->
       291: name: max_layers
    292: incr: 
     293: expr: 
      294: name: i
      295: operator: ++
   296: block: 
    297: block_content: 
     298: decl_stmt: 
      299: decl: 
       300: type: 
        301: name: u32
       302: name: layer_id
       303: init: 
        304: expr: 
         305: call: 
          306: name: gf_bs_read_int_log_idx
          307: argument_list: 
           308: argument: 
            309: expr: 
             310: name: bs
           311: argument: 
            312: expr: 
             313: literal: 6
           314: argument: 
            315: expr: 
             316: literal: "layer_id"
           317: argument: 
            318: expr: 
             319: name: i
     320: if_stmt: 
      321: if: 
       322: condition: 
        323: expr: 
         324: name: layer_id
         325: operator: >
         326: name: 
          327: name: vps
          328: operator: ->
          329: name: max_layer_id
       330: block: 
        331: block_content: 
         332: expr_stmt: 
          333: expr: 
           334: name: 
            335: name: vps
            336: operator: ->
            337: name: max_layer_id
           338: operator: =
           339: name: layer_id
     340: if_stmt: 
      341: if: 
       342: condition: 
        343: expr: 
         344: name: i
         345: operator: &&
         346: operator: !
         347: name: 
          348: name: vps
          349: operator: ->
          350: name: all_layers_independent
       351: block: 
        352: block_content: 
         353: decl_stmt: 
          354: decl: 
           355: type: 
            356: name: Bool
           357: name: layer_indep
           358: init: 
            359: expr: 
             360: call: 
              361: name: gf_bs_read_int_log_idx
              362: argument_list: 
               363: argument: 
                364: expr: 
                 365: name: bs
               366: argument: 
                367: expr: 
                 368: literal: 1
               369: argument: 
                370: expr: 
                 371: literal: "layer_independent"
               372: argument: 
                373: expr: 
                 374: name: i
         375: if_stmt: 
          376: if: 
           377: condition: 
            378: expr: 
             379: operator: !
             380: name: layer_indep
           381: block: 
            382: block_content: 
             383: decl_stmt: 
              384: decl: 
               385: type: 
                386: name: Bool
               387: name: vps_max_tid_ref_present_flag
               388: init: 
                389: expr: 
                 390: call: 
                  391: name: gf_bs_read_int_log_idx
                  392: argument_list: 
                   393: argument: 
                    394: expr: 
                     395: name: bs
                   396: argument: 
                    397: expr: 
                     398: literal: 1
                   399: argument: 
                    400: expr: 
                     401: literal: "vps_max_tid_ref_present_flag"
                   402: argument: 
                    403: expr: 
                     404: name: i
             405: for: 
              406: control: 
               407: init: 
                408: expr: 
                 409: name: j
                 410: operator: =
                 411: literal: 0
               412: condition: 
                413: expr: 
                 414: name: j
                 415: operator: <
                 416: name: i
               417: incr: 
                418: expr: 
                 419: name: j
                 420: operator: ++
              421: block: 
               422: block_content: 
                423: decl_stmt: 
                 424: decl: 
                  425: type: 
                   426: name: Bool
                  427: name: vps_direct_ref_layer_flag
                  428: init: 
                   429: expr: 
                    430: call: 
                     431: name: gf_bs_read_int_log_idx2
                     432: argument_list: 
                      433: argument: 
                       434: expr: 
                        435: name: bs
                      436: argument: 
                       437: expr: 
                        438: literal: 1
                      439: argument: 
                       440: expr: 
                        441: literal: "vps_direct_ref_layer_flag"
                      442: argument: 
                       443: expr: 
                        444: name: i
                      445: argument: 
                       446: expr: 
                        447: name: j
                448: if_stmt: 
                 449: if: 
                  450: condition: 
                   451: expr: 
                    452: name: vps_max_tid_ref_present_flag
                    453: operator: &&
                    454: name: vps_direct_ref_layer_flag
                  455: block: 
                   456: block_content: 
                    457: expr_stmt: 
                     458: expr: 
                      459: call: 
                       460: name: gf_bs_read_int_log_idx2
                       461: argument_list: 
                        462: argument: 
                         463: expr: 
                          464: name: bs
                        465: argument: 
                         466: expr: 
                          467: literal: 3
                        468: argument: 
                         469: expr: 
                          470: literal: "vps_max_tid_il_ref_pics_plus1"
                        471: argument: 
                         472: expr: 
                          473: name: i
                        474: argument: 
                         475: expr: 
                          476: name: j
  477: expr_stmt: 
   478: expr: 
    479: name: 
     480: name: vps
     481: operator: ->
     482: name: num_ptl
    483: operator: =
    484: literal: 1
  485: if_stmt: 
   486: if: 
    487: condition: 
     488: expr: 
      489: name: 
       490: name: vps
       491: operator: ->
       492: name: max_layers
      493: operator: >
      494: literal: 1
    495: block: 
     496: block_content: 
      497: if_stmt: 
       498: if: 
        499: condition: 
         500: expr: 
          501: name: 
           502: name: vps
           503: operator: ->
           504: name: all_layers_independent
        505: block: 
         506: block_content: 
          507: expr_stmt: 
           508: expr: 
            509: name: 
             510: name: vps
             511: operator: ->
             512: name: each_layer_is_ols
            513: operator: =
            514: call: 
             515: name: gf_bs_read_int_log
             516: argument_list: 
              517: argument: 
               518: expr: 
                519: name: bs
              520: argument: 
               521: expr: 
                522: literal: 1
              523: argument: 
               524: expr: 
                525: literal: "each_layer_is_ols"
      526: if_stmt: 
       527: if: 
        528: condition: 
         529: expr: 
          530: operator: !
          531: name: 
           532: name: vps
           533: operator: ->
           534: name: each_layer_is_ols
        535: block: 
         536: block_content: 
          537: decl_stmt: 
           538: decl: 
            539: type: 
             540: name: u32
            541: name: vps_ols_mode_idc
            542: init: 
             543: expr: 
              544: literal: 2
          545: if_stmt: 
           546: if: 
            547: condition: 
             548: expr: 
              549: operator: !
              550: name: 
               551: name: vps
               552: operator: ->
               553: name: all_layers_independent
            554: block: 
             555: block_content: 
              556: expr_stmt: 
               557: expr: 
                558: name: vps_ols_mode_idc
                559: operator: =
                560: call: 
                 561: name: gf_bs_read_int_log
                 562: argument_list: 
                  563: argument: 
                   564: expr: 
                    565: name: bs
                  566: argument: 
                   567: expr: 
                    568: literal: 2
                  569: argument: 
                   570: expr: 
                    571: literal: "vps_ols_mode_idc"
          572: if_stmt: 
           573: if: 
            574: condition: 
             575: expr: 
              576: name: vps_ols_mode_idc
              577: operator: ==
              578: literal: 2
            579: block: 
             580: block_content: 
              581: decl_stmt: 
               582: decl: 
                583: type: 
                 584: name: u8
                585: name: vps_num_output_layer_sets
                586: init: 
                 587: expr: 
                  588: literal: 2
                  589: operator: +
                  590: call: 
                   591: name: gf_bs_read_int_log
                   592: argument_list: 
                    593: argument: 
                     594: expr: 
                      595: name: bs
                    596: argument: 
                     597: expr: 
                      598: literal: 8
                    599: argument: 
                     600: expr: 
                      601: literal: "vps_num_output_layer_sets_minus2"
              602: for: 
               603: control: 
                604: init: 
                 605: expr: 
                  606: name: i
                  607: operator: =
                  608: literal: 0
                609: condition: 
                 610: expr: 
                  611: name: i
                  612: operator: <
                  613: name: vps_num_output_layer_sets
                614: incr: 
                 615: expr: 
                  616: name: i
                  617: operator: ++
               618: block: 
                619: block_content: 
                 620: for: 
                  621: control: 
                   622: init: 
                    623: expr: 
                     624: name: j
                     625: operator: =
                     626: literal: 0
                   627: condition: 
                    628: expr: 
                     629: name: j
                     630: operator: <
                     631: name: 
                      632: name: vps
                      633: operator: ->
                      634: name: max_layers
                   635: incr: 
                    636: expr: 
                     637: name: j
                     638: operator: ++
                  639: block: 
                   640: block_content: 
                    641: expr_stmt: 
                     642: expr: 
                      643: call: 
                       644: name: gf_bs_read_int_log_idx2
                       645: argument_list: 
                        646: argument: 
                         647: expr: 
                          648: name: bs
                        649: argument: 
                         650: expr: 
                          651: literal: 1
                        652: argument: 
                         653: expr: 
                          654: literal: "vps_ols_output_layer_flag"
                        655: argument: 
                         656: expr: 
                          657: name: i
                        658: argument: 
                         659: expr: 
                          660: name: j
      661: expr_stmt: 
       662: expr: 
        663: name: 
         664: name: vps
         665: operator: ->
         666: name: num_ptl
        667: operator: =
        668: literal: 1
        669: operator: +
        670: call: 
         671: name: gf_bs_read_int_log
         672: argument_list: 
          673: argument: 
           674: expr: 
            675: name: bs
          676: argument: 
           677: expr: 
            678: literal: 8
          679: argument: 
           680: expr: 
            681: literal: "num_ptl_minus1"
  682: expr_stmt: 
   683: expr: 
    684: name: 
     685: name: vps
     686: operator: ->
     687: name: ptl
     688: index: 
      689: expr: 
       690: literal: 0
    691: operator: .
    692: name: pt_present
    693: operator: =
    694: literal: 1
  695: for: 
   696: control: 
    697: init: 
     698: expr: 
      699: name: i
      700: operator: =
      701: literal: 0
    702: condition: 
     703: expr: 
      704: name: i
      705: operator: <
      706: name: 
       707: name: vps
       708: operator: ->
       709: name: num_ptl
    710: incr: 
     711: expr: 
      712: name: i
      713: operator: ++
   714: block: 
    715: block_content: 
     716: if_stmt: 
      717: if: 
       718: condition: 
        719: expr: 
         720: name: i
       721: block: 
        722: block_content: 
         723: expr_stmt: 
          724: expr: 
           725: name: 
            726: name: vps
            727: operator: ->
            728: name: ptl
            729: index: 
             730: expr: 
              731: name: i
           732: operator: .
           733: name: pt_present
           734: operator: =
           735: call: 
            736: name: gf_bs_read_int_log_idx
            737: argument_list: 
             738: argument: 
              739: expr: 
               740: name: bs
             741: argument: 
              742: expr: 
               743: literal: 1
             744: argument: 
              745: expr: 
               746: literal: "pt_present"
             747: argument: 
              748: expr: 
               749: name: i
     750: if_stmt: 
      751: if: 
       752: condition: 
        753: expr: 
         754: operator: !
         755: name: vps_default_ptl_dpb_hrd_max_tid_flag
       756: block: 
        757: block_content: 
         758: expr_stmt: 
          759: expr: 
           760: name: 
            761: name: vps
            762: operator: ->
            763: name: ptl
            764: index: 
             765: expr: 
              766: name: i
           767: operator: .
           768: name: ptl_max_tid
           769: operator: =
           770: call: 
            771: name: gf_bs_read_int_log_idx
            772: argument_list: 
             773: argument: 
              774: expr: 
               775: name: bs
             776: argument: 
              777: expr: 
               778: literal: 3
             779: argument: 
              780: expr: 
               781: literal: "ptl_max_tid"
             782: argument: 
              783: expr: 
               784: name: i
      785: else: 
       786: block: 
        787: block_content: 
         788: expr_stmt: 
          789: expr: 
           790: name: 
            791: name: vps
            792: operator: ->
            793: name: ptl
            794: index: 
             795: expr: 
              796: name: i
           797: operator: .
           798: name: ptl_max_tid
           799: operator: =
           800: name: 
            801: name: vps
            802: operator: ->
            803: name: max_sub_layers
           804: operator: -
           805: literal: 1
     806: empty_stmt: 
  807: comment: //align
  808: expr_stmt: 
   809: expr: 
    810: call: 
     811: name: gf_bs_align
     812: argument_list: 
      813: argument: 
       814: expr: 
        815: name: bs
  816: for: 
   817: control: 
    818: init: 
     819: expr: 
      820: name: i
      821: operator: =
      822: literal: 0
    823: condition: 
     824: expr: 
      825: name: i
      826: operator: <
      827: name: 
       828: name: vps
       829: operator: ->
       830: name: num_ptl
    831: incr: 
     832: expr: 
      833: name: i
      834: operator: ++
   835: block: 
    836: block_content: 
     837: expr_stmt: 
      838: expr: 
       839: call: 
        840: name: vvc_profile_tier_level
        841: argument_list: 
         842: argument: 
          843: expr: 
           844: name: bs
         845: argument: 
          846: expr: 
           847: operator: &
           848: name: 
            849: name: vps
            850: operator: ->
            851: name: ptl
            852: index: 
             853: expr: 
              854: name: i
         855: argument: 
          856: expr: 
           857: name: i
  858: comment: //TODO, parse multilayer stuff
  859: return: 
   860: expr: 
    861: name: vps_id

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: u32
    6: name: i
   7: decl: 
    8: type: 
    9: name: j
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: s32
    14: name: vps_id
  15: decl_stmt: 
   16: decl: 
    17: type: 
     18: name: VVC_VPS
     19: modifier: *
    20: name: vps
  21: decl_stmt: 
   22: decl: 
    23: type: 
     24: name: Bool
    25: name: vps_default_ptl_dpb_hrd_max_tid_flag
    26: init: 
     27: expr: 
      28: literal: 0
  29: comment: //nalu header already parsed
  30: expr_stmt: 
   31: expr: 
    32: name: vps_id
    33: operator: =
    34: call: 
     35: name: gf_bs_read_int_log
     36: argument_list: 
      37: argument: 
       38: expr: 
        39: name: bs
      40: argument: 
       41: expr: 
        42: literal: 4
      43: argument: 
       44: expr: 
        45: literal: "vps_id"
  46: if_stmt: 
   47: if: 
    48: condition: 
     49: expr: 
      50: operator: (
      51: name: vps_id
      52: operator: <
      53: literal: 0
      54: operator: )
      55: operator: ||
      56: operator: (
      57: name: vps_id
      58: operator: >=
      59: literal: 16
      60: operator: )
    61: block: 
     62: block_content: 
      63: return: 
       64: expr: 
        65: operator: -
        66: literal: 1
  67: if_stmt: 
   68: if: 
    69: condition: 
     70: expr: 
      71: operator: !
      72: name: vps_id
    73: block: 
     74: block_content: 
      75: expr_stmt: 
       76: expr: 
        77: call: 
         78: name: GF_LOG
         79: argument_list: 
          80: argument: 
           81: expr: 
            82: name: GF_LOG_ERROR
          83: argument: 
           84: expr: 
            85: name: GF_LOG_CODING
          86: argument: 
           87: expr: 
            88: operator: (
            89: literal: "[VVC] VPS ID 0 is forbidden\n"
            90: operator: )
      91: return: 
       92: expr: 
        93: operator: -
        94: literal: 1
  95: expr_stmt: 
   96: expr: 
    97: name: vps
    98: operator: =
    99: operator: &
    100: name: 
     101: name: vvc
     102: operator: ->
     103: name: vps
     104: index: 
      105: expr: 
       106: name: vps_id
  107: if_stmt: 
   108: if: 
    109: condition: 
     110: expr: 
      111: operator: !
      112: name: 
       113: name: vps
       114: operator: ->
       115: name: state
    116: block: 
     117: block_content: 
      118: expr_stmt: 
       119: expr: 
        120: name: 
         121: name: vps
         122: operator: ->
         123: name: id
        124: operator: =
        125: name: vps_id
      126: expr_stmt: 
       127: expr: 
        128: name: 
         129: name: vps
         130: operator: ->
         131: name: state
        132: operator: =
        133: literal: 1
  134: expr_stmt: 
   135: expr: 
    136: name: 
     137: name: vps
     138: operator: ->
     139: name: max_layers
    140: operator: =
    141: literal: 1
    142: operator: +
    143: call: 
     144: name: gf_bs_read_int_log
     145: argument_list: 
      146: argument: 
       147: expr: 
        148: name: bs
      149: argument: 
       150: expr: 
        151: literal: 6
      152: argument: 
       153: expr: 
        154: literal: "max_layers"
  155: if_stmt: 
   156: if: 
    157: condition: 
     158: expr: 
      159: name: 
       160: name: vps
       161: operator: ->
       162: name: max_layers
      163: operator: >
      164: name: MAX_LHVC_LAYERS
    165: block: 
     166: block_content: 
      167: expr_stmt: 
       168: expr: 
        169: call: 
         170: name: GF_LOG
         171: argument_list: 
          172: argument: 
           173: expr: 
            174: name: GF_LOG_ERROR
          175: argument: 
           176: expr: 
            177: name: GF_LOG_CODING
          178: argument: 
           179: expr: 
            180: operator: (
            181: literal: "[VVC] sorry, %d layers in VPS but only %d supported\n"
            182: operator: ,
            183: name: 
             184: name: vps
             185: operator: ->
             186: name: max_layers
            187: operator: ,
            188: name: MAX_LHVC_LAYERS
            189: operator: )
      190: return: 
       191: expr: 
        192: operator: -
        193: literal: 1
  194: expr_stmt: 
   195: expr: 
    196: name: 
     197: name: vps
     198: operator: ->
     199: name: max_sub_layers
    200: operator: =
    201: call: 
     202: name: gf_bs_read_int_log
     203: argument_list: 
      204: argument: 
       205: expr: 
        206: name: bs
      207: argument: 
       208: expr: 
        209: literal: 3
      210: argument: 
       211: expr: 
        212: literal: "max_sub_layers_minus1"
    213: operator: +
    214: literal: 1
  215: if_stmt: 
   216: if: 
    217: condition: 
     218: expr: 
      219: operator: (
      220: name: 
       221: name: vps
       222: operator: ->
       223: name: max_layers
      224: operator: >
      225: literal: 1
      226: operator: )
      227: operator: &&
      228: operator: (
      229: name: 
       230: name: vps
       231: operator: ->
       232: name: max_sub_layers
      233: operator: >
      234: literal: 1
      235: operator: )
    236: block: 
     237: block_content: 
      238: expr_stmt: 
       239: expr: 
        240: name: vps_default_ptl_dpb_hrd_max_tid_flag
        241: operator: =
        242: call: 
         243: name: gf_bs_read_int_log
         244: argument_list: 
          245: argument: 
           246: expr: 
            247: name: bs
          248: argument: 
           249: expr: 
            250: literal: 1
          251: argument: 
           252: expr: 
            253: literal: "vps_default_ptl_dpb_hrd_max_tid_flag"
  254: if_stmt: 
   255: if: 
    256: condition: 
     257: expr: 
      258: name: 
       259: name: vps
       260: operator: ->
       261: name: max_layers
      262: operator: >
      263: literal: 1
    264: block: 
     265: block_content: 
      266: expr_stmt: 
       267: expr: 
        268: name: 
         269: name: vps
         270: operator: ->
         271: name: all_layers_independent
        272: operator: =
        273: call: 
         274: name: gf_bs_read_int_log
         275: argument_list: 
          276: argument: 
           277: expr: 
            278: name: bs
          279: argument: 
           280: expr: 
            281: literal: 1
          282: argument: 
           283: expr: 
            284: literal: "all_layers_independent"
  285: for: 
   286: control: 
    287: init: 
     288: expr: 
      289: name: i
      290: operator: =
      291: literal: 0
    292: condition: 
     293: expr: 
      294: name: i
      295: operator: <
      296: name: 
       297: name: vps
       298: operator: ->
       299: name: max_layers
    300: incr: 
     301: expr: 
      302: name: i
      303: operator: ++
   304: block: 
    305: block_content: 
     306: decl_stmt: 
      307: decl: 
       308: type: 
        309: name: u32
       310: name: layer_id
       311: init: 
        312: expr: 
         313: call: 
          314: name: gf_bs_read_int_log_idx
          315: argument_list: 
           316: argument: 
            317: expr: 
             318: name: bs
           319: argument: 
            320: expr: 
             321: literal: 6
           322: argument: 
            323: expr: 
             324: literal: "layer_id"
           325: argument: 
            326: expr: 
             327: name: i
     328: if_stmt: 
      329: if: 
       330: condition: 
        331: expr: 
         332: name: layer_id
         333: operator: >
         334: name: 
          335: name: vps
          336: operator: ->
          337: name: max_layer_id
       338: block: 
        339: block_content: 
         340: expr_stmt: 
          341: expr: 
           342: name: 
            343: name: vps
            344: operator: ->
            345: name: max_layer_id
           346: operator: =
           347: name: layer_id
     348: if_stmt: 
      349: if: 
       350: condition: 
        351: expr: 
         352: name: i
         353: operator: &&
         354: operator: !
         355: name: 
          356: name: vps
          357: operator: ->
          358: name: all_layers_independent
       359: block: 
        360: block_content: 
         361: decl_stmt: 
          362: decl: 
           363: type: 
            364: name: Bool
           365: name: layer_indep
           366: init: 
            367: expr: 
             368: call: 
              369: name: gf_bs_read_int_log_idx
              370: argument_list: 
               371: argument: 
                372: expr: 
                 373: name: bs
               374: argument: 
                375: expr: 
                 376: literal: 1
               377: argument: 
                378: expr: 
                 379: literal: "layer_independent"
               380: argument: 
                381: expr: 
                 382: name: i
         383: if_stmt: 
          384: if: 
           385: condition: 
            386: expr: 
             387: operator: !
             388: name: layer_indep
           389: block: 
            390: block_content: 
             391: decl_stmt: 
              392: decl: 
               393: type: 
                394: name: Bool
               395: name: vps_max_tid_ref_present_flag
               396: init: 
                397: expr: 
                 398: call: 
                  399: name: gf_bs_read_int_log_idx
                  400: argument_list: 
                   401: argument: 
                    402: expr: 
                     403: name: bs
                   404: argument: 
                    405: expr: 
                     406: literal: 1
                   407: argument: 
                    408: expr: 
                     409: literal: "vps_max_tid_ref_present_flag"
                   410: argument: 
                    411: expr: 
                     412: name: i
             413: for: 
              414: control: 
               415: init: 
                416: expr: 
                 417: name: j
                 418: operator: =
                 419: literal: 0
               420: condition: 
                421: expr: 
                 422: name: j
                 423: operator: <
                 424: name: i
               425: incr: 
                426: expr: 
                 427: name: j
                 428: operator: ++
              429: block: 
               430: block_content: 
                431: decl_stmt: 
                 432: decl: 
                  433: type: 
                   434: name: Bool
                  435: name: vps_direct_ref_layer_flag
                  436: init: 
                   437: expr: 
                    438: call: 
                     439: name: gf_bs_read_int_log_idx2
                     440: argument_list: 
                      441: argument: 
                       442: expr: 
                        443: name: bs
                      444: argument: 
                       445: expr: 
                        446: literal: 1
                      447: argument: 
                       448: expr: 
                        449: literal: "vps_direct_ref_layer_flag"
                      450: argument: 
                       451: expr: 
                        452: name: i
                      453: argument: 
                       454: expr: 
                        455: name: j
                456: if_stmt: 
                 457: if: 
                  458: condition: 
                   459: expr: 
                    460: name: vps_max_tid_ref_present_flag
                    461: operator: &&
                    462: name: vps_direct_ref_layer_flag
                  463: block: 
                   464: block_content: 
                    465: expr_stmt: 
                     466: expr: 
                      467: call: 
                       468: name: gf_bs_read_int_log_idx2
                       469: argument_list: 
                        470: argument: 
                         471: expr: 
                          472: name: bs
                        473: argument: 
                         474: expr: 
                          475: literal: 3
                        476: argument: 
                         477: expr: 
                          478: literal: "vps_max_tid_il_ref_pics_plus1"
                        479: argument: 
                         480: expr: 
                          481: name: i
                        482: argument: 
                         483: expr: 
                          484: name: j
  485: expr_stmt: 
   486: expr: 
    487: name: 
     488: name: vps
     489: operator: ->
     490: name: num_ptl
    491: operator: =
    492: literal: 1
  493: if_stmt: 
   494: if: 
    495: condition: 
     496: expr: 
      497: name: 
       498: name: vps
       499: operator: ->
       500: name: max_layers
      501: operator: >
      502: literal: 1
    503: block: 
     504: block_content: 
      505: if_stmt: 
       506: if: 
        507: condition: 
         508: expr: 
          509: name: 
           510: name: vps
           511: operator: ->
           512: name: all_layers_independent
        513: block: 
         514: block_content: 
          515: expr_stmt: 
           516: expr: 
            517: name: 
             518: name: vps
             519: operator: ->
             520: name: each_layer_is_ols
            521: operator: =
            522: call: 
             523: name: gf_bs_read_int_log
             524: argument_list: 
              525: argument: 
               526: expr: 
                527: name: bs
              528: argument: 
               529: expr: 
                530: literal: 1
              531: argument: 
               532: expr: 
                533: literal: "each_layer_is_ols"
      534: if_stmt: 
       535: if: 
        536: condition: 
         537: expr: 
          538: operator: !
          539: name: 
           540: name: vps
           541: operator: ->
           542: name: each_layer_is_ols
        543: block: 
         544: block_content: 
          545: decl_stmt: 
           546: decl: 
            547: type: 
             548: name: u32
            549: name: vps_ols_mode_idc
            550: init: 
             551: expr: 
              552: literal: 2
          553: if_stmt: 
           554: if: 
            555: condition: 
             556: expr: 
              557: operator: !
              558: name: 
               559: name: vps
               560: operator: ->
               561: name: all_layers_independent
            562: block: 
             563: block_content: 
              564: expr_stmt: 
               565: expr: 
                566: name: vps_ols_mode_idc
                567: operator: =
                568: call: 
                 569: name: gf_bs_read_int_log
                 570: argument_list: 
                  571: argument: 
                   572: expr: 
                    573: name: bs
                  574: argument: 
                   575: expr: 
                    576: literal: 2
                  577: argument: 
                   578: expr: 
                    579: literal: "vps_ols_mode_idc"
          580: if_stmt: 
           581: if: 
            582: condition: 
             583: expr: 
              584: name: vps_ols_mode_idc
              585: operator: ==
              586: literal: 2
            587: block: 
             588: block_content: 
              589: decl_stmt: 
               590: decl: 
                591: type: 
                 592: name: u8
                593: name: vps_num_output_layer_sets
                594: init: 
                 595: expr: 
                  596: literal: 2
                  597: operator: +
                  598: call: 
                   599: name: gf_bs_read_int_log
                   600: argument_list: 
                    601: argument: 
                     602: expr: 
                      603: name: bs
                    604: argument: 
                     605: expr: 
                      606: literal: 8
                    607: argument: 
                     608: expr: 
                      609: literal: "vps_num_output_layer_sets_minus2"
              610: for: 
               611: control: 
                612: init: 
                 613: expr: 
                  614: name: i
                  615: operator: =
                  616: literal: 0
                617: condition: 
                 618: expr: 
                  619: name: i
                  620: operator: <
                  621: name: vps_num_output_layer_sets
                622: incr: 
                 623: expr: 
                  624: name: i
                  625: operator: ++
               626: block: 
                627: block_content: 
                 628: for: 
                  629: control: 
                   630: init: 
                    631: expr: 
                     632: name: j
                     633: operator: =
                     634: literal: 0
                   635: condition: 
                    636: expr: 
                     637: name: j
                     638: operator: <
                     639: name: 
                      640: name: vps
                      641: operator: ->
                      642: name: max_layers
                   643: incr: 
                    644: expr: 
                     645: name: j
                     646: operator: ++
                  647: block: 
                   648: block_content: 
                    649: expr_stmt: 
                     650: expr: 
                      651: call: 
                       652: name: gf_bs_read_int_log_idx2
                       653: argument_list: 
                        654: argument: 
                         655: expr: 
                          656: name: bs
                        657: argument: 
                         658: expr: 
                          659: literal: 1
                        660: argument: 
                         661: expr: 
                          662: literal: "vps_ols_output_layer_flag"
                        663: argument: 
                         664: expr: 
                          665: name: i
                        666: argument: 
                         667: expr: 
                          668: name: j
      669: expr_stmt: 
       670: expr: 
        671: name: 
         672: name: vps
         673: operator: ->
         674: name: num_ptl
        675: operator: =
        676: literal: 1
        677: operator: +
        678: call: 
         679: name: gf_bs_read_int_log
         680: argument_list: 
          681: argument: 
           682: expr: 
            683: name: bs
          684: argument: 
           685: expr: 
            686: literal: 8
          687: argument: 
           688: expr: 
            689: literal: "num_ptl_minus1"
  690: expr_stmt: 
   691: expr: 
    692: name: 
     693: name: vps
     694: operator: ->
     695: name: ptl
     696: index: 
      697: expr: 
       698: literal: 0
    699: operator: .
    700: name: pt_present
    701: operator: =
    702: literal: 1
  703: for: 
   704: control: 
    705: init: 
     706: expr: 
      707: name: i
      708: operator: =
      709: literal: 0
    710: condition: 
     711: expr: 
      712: name: i
      713: operator: <
      714: name: 
       715: name: vps
       716: operator: ->
       717: name: num_ptl
    718: incr: 
     719: expr: 
      720: name: i
      721: operator: ++
   722: block: 
    723: block_content: 
     724: if_stmt: 
      725: if: 
       726: condition: 
        727: expr: 
         728: name: i
       729: block: 
        730: block_content: 
         731: expr_stmt: 
          732: expr: 
           733: name: 
            734: name: vps
            735: operator: ->
            736: name: ptl
            737: index: 
             738: expr: 
              739: name: i
           740: operator: .
           741: name: pt_present
           742: operator: =
           743: call: 
            744: name: gf_bs_read_int_log_idx
            745: argument_list: 
             746: argument: 
              747: expr: 
               748: name: bs
             749: argument: 
              750: expr: 
               751: literal: 1
             752: argument: 
              753: expr: 
               754: literal: "pt_present"
             755: argument: 
              756: expr: 
               757: name: i
     758: if_stmt: 
      759: if: 
       760: condition: 
        761: expr: 
         762: operator: !
         763: name: vps_default_ptl_dpb_hrd_max_tid_flag
       764: block: 
        765: block_content: 
         766: expr_stmt: 
          767: expr: 
           768: name: 
            769: name: vps
            770: operator: ->
            771: name: ptl
            772: index: 
             773: expr: 
              774: name: i
           775: operator: .
           776: name: ptl_max_tid
           777: operator: =
           778: call: 
            779: name: gf_bs_read_int_log_idx
            780: argument_list: 
             781: argument: 
              782: expr: 
               783: name: bs
             784: argument: 
              785: expr: 
               786: literal: 3
             787: argument: 
              788: expr: 
               789: literal: "ptl_max_tid"
             790: argument: 
              791: expr: 
               792: name: i
      793: else: 
       794: block: 
        795: block_content: 
         796: expr_stmt: 
          797: expr: 
           798: name: 
            799: name: vps
            800: operator: ->
            801: name: ptl
            802: index: 
             803: expr: 
              804: name: i
           805: operator: .
           806: name: ptl_max_tid
           807: operator: =
           808: name: 
            809: name: vps
            810: operator: ->
            811: name: max_sub_layers
           812: operator: -
           813: literal: 1
     814: empty_stmt: 
  815: comment: //align
  816: expr_stmt: 
   817: expr: 
    818: call: 
     819: name: gf_bs_align
     820: argument_list: 
      821: argument: 
       822: expr: 
        823: name: bs
  824: for: 
   825: control: 
    826: init: 
     827: expr: 
      828: name: i
      829: operator: =
      830: literal: 0
    831: condition: 
     832: expr: 
      833: name: i
      834: operator: <
      835: name: 
       836: name: vps
       837: operator: ->
       838: name: num_ptl
    839: incr: 
     840: expr: 
      841: name: i
      842: operator: ++
   843: block: 
    844: block_content: 
     845: expr_stmt: 
      846: expr: 
       847: call: 
        848: name: vvc_profile_tier_level
        849: argument_list: 
         850: argument: 
          851: expr: 
           852: name: bs
         853: argument: 
          854: expr: 
           855: operator: &
           856: name: 
            857: name: vps
            858: operator: ->
            859: name: ptl
            860: index: 
             861: expr: 
              862: name: i
         863: argument: 
          864: expr: 
           865: name: i
  866: comment: //TODO, parse multilayer stuff
  867: return: 
   868: expr: 
    869: name: vps_id
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: u32
   5: name: i
  6: decl: 
   7: type: 
   8: name: j
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: s32
   13: name: vps_id
 14: decl_stmt: 
  15: decl: 
   16: type: 
    17: name: VVC_VPS
    18: modifier: *
   19: name: vps
 20: decl_stmt: 
  21: decl: 
   22: type: 
    23: name: Bool
   24: name: vps_default_ptl_dpb_hrd_max_tid_flag
   25: init: 
    26: expr: 
     27: literal: 0
 28: comment: //nalu header already parsed
 29: expr_stmt: 
  30: expr: 
   31: name: vps_id
   32: operator: =
   33: call: 
    34: name: gf_bs_read_int_log
    35: argument_list: 
     36: argument: 
      37: expr: 
       38: name: bs
     39: argument: 
      40: expr: 
       41: literal: 4
     42: argument: 
      43: expr: 
       44: literal: "vps_id"
 45: if_stmt: 
  46: if: 
   47: condition: 
    48: expr: 
     49: name: vps_id
     50: operator: >=
     51: literal: 16
   52: block: 
    53: block_content: 
     54: return: 
      55: expr: 
       56: operator: -
       57: literal: 1
 58: if_stmt: 
  59: if: 
   60: condition: 
    61: expr: 
     62: operator: !
     63: name: vps_id
   64: block: 
    65: block_content: 
     66: expr_stmt: 
      67: expr: 
       68: call: 
        69: name: GF_LOG
        70: argument_list: 
         71: argument: 
          72: expr: 
           73: name: GF_LOG_ERROR
         74: argument: 
          75: expr: 
           76: name: GF_LOG_CODING
         77: argument: 
          78: expr: 
           79: operator: (
           80: literal: "[VVC] VPS ID 0 is forbidden\n"
           81: operator: )
     82: return: 
      83: expr: 
       84: operator: -
       85: literal: 1
 86: expr_stmt: 
  87: expr: 
   88: name: vps
   89: operator: =
   90: operator: &
   91: name: 
    92: name: vvc
    93: operator: ->
    94: name: vps
    95: index: 
     96: expr: 
      97: name: vps_id
 98: if_stmt: 
  99: if: 
   100: condition: 
    101: expr: 
     102: operator: !
     103: name: 
      104: name: vps
      105: operator: ->
      106: name: state
   107: block: 
    108: block_content: 
     109: expr_stmt: 
      110: expr: 
       111: name: 
        112: name: vps
        113: operator: ->
        114: name: id
       115: operator: =
       116: name: vps_id
     117: expr_stmt: 
      118: expr: 
       119: name: 
        120: name: vps
        121: operator: ->
        122: name: state
       123: operator: =
       124: literal: 1
 125: expr_stmt: 
  126: expr: 
   127: name: 
    128: name: vps
    129: operator: ->
    130: name: max_layers
   131: operator: =
   132: literal: 1
   133: operator: +
   134: call: 
    135: name: gf_bs_read_int_log
    136: argument_list: 
     137: argument: 
      138: expr: 
       139: name: bs
     140: argument: 
      141: expr: 
       142: literal: 6
     143: argument: 
      144: expr: 
       145: literal: "max_layers"
 146: if_stmt: 
  147: if: 
   148: condition: 
    149: expr: 
     150: name: 
      151: name: vps
      152: operator: ->
      153: name: max_layers
     154: operator: >
     155: name: MAX_LHVC_LAYERS
   156: block: 
    157: block_content: 
     158: expr_stmt: 
      159: expr: 
       160: call: 
        161: name: GF_LOG
        162: argument_list: 
         163: argument: 
          164: expr: 
           165: name: GF_LOG_ERROR
         166: argument: 
          167: expr: 
           168: name: GF_LOG_CODING
         169: argument: 
          170: expr: 
           171: operator: (
           172: literal: "[VVC] sorry, %d layers in VPS but only %d supported\n"
           173: operator: ,
           174: name: 
            175: name: vps
            176: operator: ->
            177: name: max_layers
           178: operator: ,
           179: name: MAX_LHVC_LAYERS
           180: operator: )
     181: return: 
      182: expr: 
       183: operator: -
       184: literal: 1
 185: expr_stmt: 
  186: expr: 
   187: name: 
    188: name: vps
    189: operator: ->
    190: name: max_sub_layers
   191: operator: =
   192: call: 
    193: name: gf_bs_read_int_log
    194: argument_list: 
     195: argument: 
      196: expr: 
       197: name: bs
     198: argument: 
      199: expr: 
       200: literal: 3
     201: argument: 
      202: expr: 
       203: literal: "max_sub_layers_minus1"
   204: operator: +
   205: literal: 1
 206: if_stmt: 
  207: if: 
   208: condition: 
    209: expr: 
     210: operator: (
     211: name: 
      212: name: vps
      213: operator: ->
      214: name: max_layers
     215: operator: >
     216: literal: 1
     217: operator: )
     218: operator: &&
     219: operator: (
     220: name: 
      221: name: vps
      222: operator: ->
      223: name: max_sub_layers
     224: operator: >
     225: literal: 1
     226: operator: )
   227: block: 
    228: block_content: 
     229: expr_stmt: 
      230: expr: 
       231: name: vps_default_ptl_dpb_hrd_max_tid_flag
       232: operator: =
       233: call: 
        234: name: gf_bs_read_int_log
        235: argument_list: 
         236: argument: 
          237: expr: 
           238: name: bs
         239: argument: 
          240: expr: 
           241: literal: 1
         242: argument: 
          243: expr: 
           244: literal: "vps_default_ptl_dpb_hrd_max_tid_flag"
 245: if_stmt: 
  246: if: 
   247: condition: 
    248: expr: 
     249: name: 
      250: name: vps
      251: operator: ->
      252: name: max_layers
     253: operator: >
     254: literal: 1
   255: block: 
    256: block_content: 
     257: expr_stmt: 
      258: expr: 
       259: name: 
        260: name: vps
        261: operator: ->
        262: name: all_layers_independent
       263: operator: =
       264: call: 
        265: name: gf_bs_read_int_log
        266: argument_list: 
         267: argument: 
          268: expr: 
           269: name: bs
         270: argument: 
          271: expr: 
           272: literal: 1
         273: argument: 
          274: expr: 
           275: literal: "all_layers_independent"
 276: for: 
  277: control: 
   278: init: 
    279: expr: 
     280: name: i
     281: operator: =
     282: literal: 0
   283: condition: 
    284: expr: 
     285: name: i
     286: operator: <
     287: name: 
      288: name: vps
      289: operator: ->
      290: name: max_layers
   291: incr: 
    292: expr: 
     293: name: i
     294: operator: ++
  295: block: 
   296: block_content: 
    297: decl_stmt: 
     298: decl: 
      299: type: 
       300: name: u32
      301: name: layer_id
      302: init: 
       303: expr: 
        304: call: 
         305: name: gf_bs_read_int_log_idx
         306: argument_list: 
          307: argument: 
           308: expr: 
            309: name: bs
          310: argument: 
           311: expr: 
            312: literal: 6
          313: argument: 
           314: expr: 
            315: literal: "layer_id"
          316: argument: 
           317: expr: 
            318: name: i
    319: if_stmt: 
     320: if: 
      321: condition: 
       322: expr: 
        323: name: layer_id
        324: operator: >
        325: name: 
         326: name: vps
         327: operator: ->
         328: name: max_layer_id
      329: block: 
       330: block_content: 
        331: expr_stmt: 
         332: expr: 
          333: name: 
           334: name: vps
           335: operator: ->
           336: name: max_layer_id
          337: operator: =
          338: name: layer_id
    339: if_stmt: 
     340: if: 
      341: condition: 
       342: expr: 
        343: name: i
        344: operator: &&
        345: operator: !
        346: name: 
         347: name: vps
         348: operator: ->
         349: name: all_layers_independent
      350: block: 
       351: block_content: 
        352: decl_stmt: 
         353: decl: 
          354: type: 
           355: name: Bool
          356: name: layer_indep
          357: init: 
           358: expr: 
            359: call: 
             360: name: gf_bs_read_int_log_idx
             361: argument_list: 
              362: argument: 
               363: expr: 
                364: name: bs
              365: argument: 
               366: expr: 
                367: literal: 1
              368: argument: 
               369: expr: 
                370: literal: "layer_independent"
              371: argument: 
               372: expr: 
                373: name: i
        374: if_stmt: 
         375: if: 
          376: condition: 
           377: expr: 
            378: operator: !
            379: name: layer_indep
          380: block: 
           381: block_content: 
            382: decl_stmt: 
             383: decl: 
              384: type: 
               385: name: Bool
              386: name: vps_max_tid_ref_present_flag
              387: init: 
               388: expr: 
                389: call: 
                 390: name: gf_bs_read_int_log_idx
                 391: argument_list: 
                  392: argument: 
                   393: expr: 
                    394: name: bs
                  395: argument: 
                   396: expr: 
                    397: literal: 1
                  398: argument: 
                   399: expr: 
                    400: literal: "vps_max_tid_ref_present_flag"
                  401: argument: 
                   402: expr: 
                    403: name: i
            404: for: 
             405: control: 
              406: init: 
               407: expr: 
                408: name: j
                409: operator: =
                410: literal: 0
              411: condition: 
               412: expr: 
                413: name: j
                414: operator: <
                415: name: i
              416: incr: 
               417: expr: 
                418: name: j
                419: operator: ++
             420: block: 
              421: block_content: 
               422: decl_stmt: 
                423: decl: 
                 424: type: 
                  425: name: Bool
                 426: name: vps_direct_ref_layer_flag
                 427: init: 
                  428: expr: 
                   429: call: 
                    430: name: gf_bs_read_int_log_idx2
                    431: argument_list: 
                     432: argument: 
                      433: expr: 
                       434: name: bs
                     435: argument: 
                      436: expr: 
                       437: literal: 1
                     438: argument: 
                      439: expr: 
                       440: literal: "vps_direct_ref_layer_flag"
                     441: argument: 
                      442: expr: 
                       443: name: i
                     444: argument: 
                      445: expr: 
                       446: name: j
               447: if_stmt: 
                448: if: 
                 449: condition: 
                  450: expr: 
                   451: name: vps_max_tid_ref_present_flag
                   452: operator: &&
                   453: name: vps_direct_ref_layer_flag
                 454: block: 
                  455: block_content: 
                   456: expr_stmt: 
                    457: expr: 
                     458: call: 
                      459: name: gf_bs_read_int_log_idx2
                      460: argument_list: 
                       461: argument: 
                        462: expr: 
                         463: name: bs
                       464: argument: 
                        465: expr: 
                         466: literal: 3
                       467: argument: 
                        468: expr: 
                         469: literal: "vps_max_tid_il_ref_pics_plus1"
                       470: argument: 
                        471: expr: 
                         472: name: i
                       473: argument: 
                        474: expr: 
                         475: name: j
 476: expr_stmt: 
  477: expr: 
   478: name: 
    479: name: vps
    480: operator: ->
    481: name: num_ptl
   482: operator: =
   483: literal: 1
 484: if_stmt: 
  485: if: 
   486: condition: 
    487: expr: 
     488: name: 
      489: name: vps
      490: operator: ->
      491: name: max_layers
     492: operator: >
     493: literal: 1
   494: block: 
    495: block_content: 
     496: if_stmt: 
      497: if: 
       498: condition: 
        499: expr: 
         500: name: 
          501: name: vps
          502: operator: ->
          503: name: all_layers_independent
       504: block: 
        505: block_content: 
         506: expr_stmt: 
          507: expr: 
           508: name: 
            509: name: vps
            510: operator: ->
            511: name: each_layer_is_ols
           512: operator: =
           513: call: 
            514: name: gf_bs_read_int_log
            515: argument_list: 
             516: argument: 
              517: expr: 
               518: name: bs
             519: argument: 
              520: expr: 
               521: literal: 1
             522: argument: 
              523: expr: 
               524: literal: "each_layer_is_ols"
     525: if_stmt: 
      526: if: 
       527: condition: 
        528: expr: 
         529: operator: !
         530: name: 
          531: name: vps
          532: operator: ->
          533: name: each_layer_is_ols
       534: block: 
        535: block_content: 
         536: decl_stmt: 
          537: decl: 
           538: type: 
            539: name: u32
           540: name: vps_ols_mode_idc
           541: init: 
            542: expr: 
             543: literal: 2
         544: if_stmt: 
          545: if: 
           546: condition: 
            547: expr: 
             548: operator: !
             549: name: 
              550: name: vps
              551: operator: ->
              552: name: all_layers_independent
           553: block: 
            554: block_content: 
             555: expr_stmt: 
              556: expr: 
               557: name: vps_ols_mode_idc
               558: operator: =
               559: call: 
                560: name: gf_bs_read_int_log
                561: argument_list: 
                 562: argument: 
                  563: expr: 
                   564: name: bs
                 565: argument: 
                  566: expr: 
                   567: literal: 2
                 568: argument: 
                  569: expr: 
                   570: literal: "vps_ols_mode_idc"
         571: if_stmt: 
          572: if: 
           573: condition: 
            574: expr: 
             575: name: vps_ols_mode_idc
             576: operator: ==
             577: literal: 2
           578: block: 
            579: block_content: 
             580: decl_stmt: 
              581: decl: 
               582: type: 
                583: name: u8
               584: name: vps_num_output_layer_sets
               585: init: 
                586: expr: 
                 587: literal: 2
                 588: operator: +
                 589: call: 
                  590: name: gf_bs_read_int_log
                  591: argument_list: 
                   592: argument: 
                    593: expr: 
                     594: name: bs
                   595: argument: 
                    596: expr: 
                     597: literal: 8
                   598: argument: 
                    599: expr: 
                     600: literal: "vps_num_output_layer_sets_minus2"
             601: for: 
              602: control: 
               603: init: 
                604: expr: 
                 605: name: i
                 606: operator: =
                 607: literal: 0
               608: condition: 
                609: expr: 
                 610: name: i
                 611: operator: <
                 612: name: vps_num_output_layer_sets
               613: incr: 
                614: expr: 
                 615: name: i
                 616: operator: ++
              617: block: 
               618: block_content: 
                619: for: 
                 620: control: 
                  621: init: 
                   622: expr: 
                    623: name: j
                    624: operator: =
                    625: literal: 0
                  626: condition: 
                   627: expr: 
                    628: name: j
                    629: operator: <
                    630: name: 
                     631: name: vps
                     632: operator: ->
                     633: name: max_layers
                  634: incr: 
                   635: expr: 
                    636: name: j
                    637: operator: ++
                 638: block: 
                  639: block_content: 
                   640: expr_stmt: 
                    641: expr: 
                     642: call: 
                      643: name: gf_bs_read_int_log_idx2
                      644: argument_list: 
                       645: argument: 
                        646: expr: 
                         647: name: bs
                       648: argument: 
                        649: expr: 
                         650: literal: 1
                       651: argument: 
                        652: expr: 
                         653: literal: "vps_ols_output_layer_flag"
                       654: argument: 
                        655: expr: 
                         656: name: i
                       657: argument: 
                        658: expr: 
                         659: name: j
     660: expr_stmt: 
      661: expr: 
       662: name: 
        663: name: vps
        664: operator: ->
        665: name: num_ptl
       666: operator: =
       667: literal: 1
       668: operator: +
       669: call: 
        670: name: gf_bs_read_int_log
        671: argument_list: 
         672: argument: 
          673: expr: 
           674: name: bs
         675: argument: 
          676: expr: 
           677: literal: 8
         678: argument: 
          679: expr: 
           680: literal: "num_ptl_minus1"
 681: expr_stmt: 
  682: expr: 
   683: name: 
    684: name: vps
    685: operator: ->
    686: name: ptl
    687: index: 
     688: expr: 
      689: literal: 0
   690: operator: .
   691: name: pt_present
   692: operator: =
   693: literal: 1
 694: for: 
  695: control: 
   696: init: 
    697: expr: 
     698: name: i
     699: operator: =
     700: literal: 0
   701: condition: 
    702: expr: 
     703: name: i
     704: operator: <
     705: name: 
      706: name: vps
      707: operator: ->
      708: name: num_ptl
   709: incr: 
    710: expr: 
     711: name: i
     712: operator: ++
  713: block: 
   714: block_content: 
    715: if_stmt: 
     716: if: 
      717: condition: 
       718: expr: 
        719: name: i
      720: block: 
       721: block_content: 
        722: expr_stmt: 
         723: expr: 
          724: name: 
           725: name: vps
           726: operator: ->
           727: name: ptl
           728: index: 
            729: expr: 
             730: name: i
          731: operator: .
          732: name: pt_present
          733: operator: =
          734: call: 
           735: name: gf_bs_read_int_log_idx
           736: argument_list: 
            737: argument: 
             738: expr: 
              739: name: bs
            740: argument: 
             741: expr: 
              742: literal: 1
            743: argument: 
             744: expr: 
              745: literal: "pt_present"
            746: argument: 
             747: expr: 
              748: name: i
    749: if_stmt: 
     750: if: 
      751: condition: 
       752: expr: 
        753: operator: !
        754: name: vps_default_ptl_dpb_hrd_max_tid_flag
      755: block: 
       756: block_content: 
        757: expr_stmt: 
         758: expr: 
          759: name: 
           760: name: vps
           761: operator: ->
           762: name: ptl
           763: index: 
            764: expr: 
             765: name: i
          766: operator: .
          767: name: ptl_max_tid
          768: operator: =
          769: call: 
           770: name: gf_bs_read_int_log_idx
           771: argument_list: 
            772: argument: 
             773: expr: 
              774: name: bs
            775: argument: 
             776: expr: 
              777: literal: 3
            778: argument: 
             779: expr: 
              780: literal: "ptl_max_tid"
            781: argument: 
             782: expr: 
              783: name: i
     784: else: 
      785: block: 
       786: block_content: 
        787: expr_stmt: 
         788: expr: 
          789: name: 
           790: name: vps
           791: operator: ->
           792: name: ptl
           793: index: 
            794: expr: 
             795: name: i
          796: operator: .
          797: name: ptl_max_tid
          798: operator: =
          799: name: 
           800: name: vps
           801: operator: ->
           802: name: max_sub_layers
          803: operator: -
          804: literal: 1
    805: empty_stmt: 
 806: comment: //align
 807: expr_stmt: 
  808: expr: 
   809: call: 
    810: name: gf_bs_align
    811: argument_list: 
     812: argument: 
      813: expr: 
       814: name: bs
 815: for: 
  816: control: 
   817: init: 
    818: expr: 
     819: name: i
     820: operator: =
     821: literal: 0
   822: condition: 
    823: expr: 
     824: name: i
     825: operator: <
     826: name: 
      827: name: vps
      828: operator: ->
      829: name: num_ptl
   830: incr: 
    831: expr: 
     832: name: i
     833: operator: ++
  834: block: 
   835: block_content: 
    836: expr_stmt: 
     837: expr: 
      838: call: 
       839: name: vvc_profile_tier_level
       840: argument_list: 
        841: argument: 
         842: expr: 
          843: name: bs
        844: argument: 
         845: expr: 
          846: operator: &
          847: name: 
           848: name: vps
           849: operator: ->
           850: name: ptl
           851: index: 
            852: expr: 
             853: name: i
        854: argument: 
         855: expr: 
          856: name: i
 857: comment: //TODO, parse multilayer stuff
 858: return: 
  859: expr: 
   860: name: vps_id

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: u32
   5: name: i
  6: decl: 
   7: type: 
   8: name: j
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: s32
   13: name: vps_id
 14: decl_stmt: 
  15: decl: 
   16: type: 
    17: name: VVC_VPS
    18: modifier: *
   19: name: vps
 20: decl_stmt: 
  21: decl: 
   22: type: 
    23: name: Bool
   24: name: vps_default_ptl_dpb_hrd_max_tid_flag
   25: init: 
    26: expr: 
     27: literal: 0
 28: comment: //nalu header already parsed
 29: expr_stmt: 
  30: expr: 
   31: name: vps_id
   32: operator: =
   33: call: 
    34: name: gf_bs_read_int_log
    35: argument_list: 
     36: argument: 
      37: expr: 
       38: name: bs
     39: argument: 
      40: expr: 
       41: literal: 4
     42: argument: 
      43: expr: 
       44: literal: "vps_id"
 45: if_stmt: 
  46: if: 
   47: condition: 
    48: expr: 
     49: operator: (
     50: name: vps_id
     51: operator: <
     52: literal: 0
     53: operator: )
     54: operator: ||
     55: operator: (
     56: name: vps_id
     57: operator: >=
     58: literal: 16
     59: operator: )
   60: block: 
    61: block_content: 
     62: return: 
      63: expr: 
       64: operator: -
       65: literal: 1
 66: if_stmt: 
  67: if: 
   68: condition: 
    69: expr: 
     70: operator: !
     71: name: vps_id
   72: block: 
    73: block_content: 
     74: expr_stmt: 
      75: expr: 
       76: call: 
        77: name: GF_LOG
        78: argument_list: 
         79: argument: 
          80: expr: 
           81: name: GF_LOG_ERROR
         82: argument: 
          83: expr: 
           84: name: GF_LOG_CODING
         85: argument: 
          86: expr: 
           87: operator: (
           88: literal: "[VVC] VPS ID 0 is forbidden\n"
           89: operator: )
     90: return: 
      91: expr: 
       92: operator: -
       93: literal: 1
 94: expr_stmt: 
  95: expr: 
   96: name: vps
   97: operator: =
   98: operator: &
   99: name: 
    100: name: vvc
    101: operator: ->
    102: name: vps
    103: index: 
     104: expr: 
      105: name: vps_id
 106: if_stmt: 
  107: if: 
   108: condition: 
    109: expr: 
     110: operator: !
     111: name: 
      112: name: vps
      113: operator: ->
      114: name: state
   115: block: 
    116: block_content: 
     117: expr_stmt: 
      118: expr: 
       119: name: 
        120: name: vps
        121: operator: ->
        122: name: id
       123: operator: =
       124: name: vps_id
     125: expr_stmt: 
      126: expr: 
       127: name: 
        128: name: vps
        129: operator: ->
        130: name: state
       131: operator: =
       132: literal: 1
 133: expr_stmt: 
  134: expr: 
   135: name: 
    136: name: vps
    137: operator: ->
    138: name: max_layers
   139: operator: =
   140: literal: 1
   141: operator: +
   142: call: 
    143: name: gf_bs_read_int_log
    144: argument_list: 
     145: argument: 
      146: expr: 
       147: name: bs
     148: argument: 
      149: expr: 
       150: literal: 6
     151: argument: 
      152: expr: 
       153: literal: "max_layers"
 154: if_stmt: 
  155: if: 
   156: condition: 
    157: expr: 
     158: name: 
      159: name: vps
      160: operator: ->
      161: name: max_layers
     162: operator: >
     163: name: MAX_LHVC_LAYERS
   164: block: 
    165: block_content: 
     166: expr_stmt: 
      167: expr: 
       168: call: 
        169: name: GF_LOG
        170: argument_list: 
         171: argument: 
          172: expr: 
           173: name: GF_LOG_ERROR
         174: argument: 
          175: expr: 
           176: name: GF_LOG_CODING
         177: argument: 
          178: expr: 
           179: operator: (
           180: literal: "[VVC] sorry, %d layers in VPS but only %d supported\n"
           181: operator: ,
           182: name: 
            183: name: vps
            184: operator: ->
            185: name: max_layers
           186: operator: ,
           187: name: MAX_LHVC_LAYERS
           188: operator: )
     189: return: 
      190: expr: 
       191: operator: -
       192: literal: 1
 193: expr_stmt: 
  194: expr: 
   195: name: 
    196: name: vps
    197: operator: ->
    198: name: max_sub_layers
   199: operator: =
   200: call: 
    201: name: gf_bs_read_int_log
    202: argument_list: 
     203: argument: 
      204: expr: 
       205: name: bs
     206: argument: 
      207: expr: 
       208: literal: 3
     209: argument: 
      210: expr: 
       211: literal: "max_sub_layers_minus1"
   212: operator: +
   213: literal: 1
 214: if_stmt: 
  215: if: 
   216: condition: 
    217: expr: 
     218: operator: (
     219: name: 
      220: name: vps
      221: operator: ->
      222: name: max_layers
     223: operator: >
     224: literal: 1
     225: operator: )
     226: operator: &&
     227: operator: (
     228: name: 
      229: name: vps
      230: operator: ->
      231: name: max_sub_layers
     232: operator: >
     233: literal: 1
     234: operator: )
   235: block: 
    236: block_content: 
     237: expr_stmt: 
      238: expr: 
       239: name: vps_default_ptl_dpb_hrd_max_tid_flag
       240: operator: =
       241: call: 
        242: name: gf_bs_read_int_log
        243: argument_list: 
         244: argument: 
          245: expr: 
           246: name: bs
         247: argument: 
          248: expr: 
           249: literal: 1
         250: argument: 
          251: expr: 
           252: literal: "vps_default_ptl_dpb_hrd_max_tid_flag"
 253: if_stmt: 
  254: if: 
   255: condition: 
    256: expr: 
     257: name: 
      258: name: vps
      259: operator: ->
      260: name: max_layers
     261: operator: >
     262: literal: 1
   263: block: 
    264: block_content: 
     265: expr_stmt: 
      266: expr: 
       267: name: 
        268: name: vps
        269: operator: ->
        270: name: all_layers_independent
       271: operator: =
       272: call: 
        273: name: gf_bs_read_int_log
        274: argument_list: 
         275: argument: 
          276: expr: 
           277: name: bs
         278: argument: 
          279: expr: 
           280: literal: 1
         281: argument: 
          282: expr: 
           283: literal: "all_layers_independent"
 284: for: 
  285: control: 
   286: init: 
    287: expr: 
     288: name: i
     289: operator: =
     290: literal: 0
   291: condition: 
    292: expr: 
     293: name: i
     294: operator: <
     295: name: 
      296: name: vps
      297: operator: ->
      298: name: max_layers
   299: incr: 
    300: expr: 
     301: name: i
     302: operator: ++
  303: block: 
   304: block_content: 
    305: decl_stmt: 
     306: decl: 
      307: type: 
       308: name: u32
      309: name: layer_id
      310: init: 
       311: expr: 
        312: call: 
         313: name: gf_bs_read_int_log_idx
         314: argument_list: 
          315: argument: 
           316: expr: 
            317: name: bs
          318: argument: 
           319: expr: 
            320: literal: 6
          321: argument: 
           322: expr: 
            323: literal: "layer_id"
          324: argument: 
           325: expr: 
            326: name: i
    327: if_stmt: 
     328: if: 
      329: condition: 
       330: expr: 
        331: name: layer_id
        332: operator: >
        333: name: 
         334: name: vps
         335: operator: ->
         336: name: max_layer_id
      337: block: 
       338: block_content: 
        339: expr_stmt: 
         340: expr: 
          341: name: 
           342: name: vps
           343: operator: ->
           344: name: max_layer_id
          345: operator: =
          346: name: layer_id
    347: if_stmt: 
     348: if: 
      349: condition: 
       350: expr: 
        351: name: i
        352: operator: &&
        353: operator: !
        354: name: 
         355: name: vps
         356: operator: ->
         357: name: all_layers_independent
      358: block: 
       359: block_content: 
        360: decl_stmt: 
         361: decl: 
          362: type: 
           363: name: Bool
          364: name: layer_indep
          365: init: 
           366: expr: 
            367: call: 
             368: name: gf_bs_read_int_log_idx
             369: argument_list: 
              370: argument: 
               371: expr: 
                372: name: bs
              373: argument: 
               374: expr: 
                375: literal: 1
              376: argument: 
               377: expr: 
                378: literal: "layer_independent"
              379: argument: 
               380: expr: 
                381: name: i
        382: if_stmt: 
         383: if: 
          384: condition: 
           385: expr: 
            386: operator: !
            387: name: layer_indep
          388: block: 
           389: block_content: 
            390: decl_stmt: 
             391: decl: 
              392: type: 
               393: name: Bool
              394: name: vps_max_tid_ref_present_flag
              395: init: 
               396: expr: 
                397: call: 
                 398: name: gf_bs_read_int_log_idx
                 399: argument_list: 
                  400: argument: 
                   401: expr: 
                    402: name: bs
                  403: argument: 
                   404: expr: 
                    405: literal: 1
                  406: argument: 
                   407: expr: 
                    408: literal: "vps_max_tid_ref_present_flag"
                  409: argument: 
                   410: expr: 
                    411: name: i
            412: for: 
             413: control: 
              414: init: 
               415: expr: 
                416: name: j
                417: operator: =
                418: literal: 0
              419: condition: 
               420: expr: 
                421: name: j
                422: operator: <
                423: name: i
              424: incr: 
               425: expr: 
                426: name: j
                427: operator: ++
             428: block: 
              429: block_content: 
               430: decl_stmt: 
                431: decl: 
                 432: type: 
                  433: name: Bool
                 434: name: vps_direct_ref_layer_flag
                 435: init: 
                  436: expr: 
                   437: call: 
                    438: name: gf_bs_read_int_log_idx2
                    439: argument_list: 
                     440: argument: 
                      441: expr: 
                       442: name: bs
                     443: argument: 
                      444: expr: 
                       445: literal: 1
                     446: argument: 
                      447: expr: 
                       448: literal: "vps_direct_ref_layer_flag"
                     449: argument: 
                      450: expr: 
                       451: name: i
                     452: argument: 
                      453: expr: 
                       454: name: j
               455: if_stmt: 
                456: if: 
                 457: condition: 
                  458: expr: 
                   459: name: vps_max_tid_ref_present_flag
                   460: operator: &&
                   461: name: vps_direct_ref_layer_flag
                 462: block: 
                  463: block_content: 
                   464: expr_stmt: 
                    465: expr: 
                     466: call: 
                      467: name: gf_bs_read_int_log_idx2
                      468: argument_list: 
                       469: argument: 
                        470: expr: 
                         471: name: bs
                       472: argument: 
                        473: expr: 
                         474: literal: 3
                       475: argument: 
                        476: expr: 
                         477: literal: "vps_max_tid_il_ref_pics_plus1"
                       478: argument: 
                        479: expr: 
                         480: name: i
                       481: argument: 
                        482: expr: 
                         483: name: j
 484: expr_stmt: 
  485: expr: 
   486: name: 
    487: name: vps
    488: operator: ->
    489: name: num_ptl
   490: operator: =
   491: literal: 1
 492: if_stmt: 
  493: if: 
   494: condition: 
    495: expr: 
     496: name: 
      497: name: vps
      498: operator: ->
      499: name: max_layers
     500: operator: >
     501: literal: 1
   502: block: 
    503: block_content: 
     504: if_stmt: 
      505: if: 
       506: condition: 
        507: expr: 
         508: name: 
          509: name: vps
          510: operator: ->
          511: name: all_layers_independent
       512: block: 
        513: block_content: 
         514: expr_stmt: 
          515: expr: 
           516: name: 
            517: name: vps
            518: operator: ->
            519: name: each_layer_is_ols
           520: operator: =
           521: call: 
            522: name: gf_bs_read_int_log
            523: argument_list: 
             524: argument: 
              525: expr: 
               526: name: bs
             527: argument: 
              528: expr: 
               529: literal: 1
             530: argument: 
              531: expr: 
               532: literal: "each_layer_is_ols"
     533: if_stmt: 
      534: if: 
       535: condition: 
        536: expr: 
         537: operator: !
         538: name: 
          539: name: vps
          540: operator: ->
          541: name: each_layer_is_ols
       542: block: 
        543: block_content: 
         544: decl_stmt: 
          545: decl: 
           546: type: 
            547: name: u32
           548: name: vps_ols_mode_idc
           549: init: 
            550: expr: 
             551: literal: 2
         552: if_stmt: 
          553: if: 
           554: condition: 
            555: expr: 
             556: operator: !
             557: name: 
              558: name: vps
              559: operator: ->
              560: name: all_layers_independent
           561: block: 
            562: block_content: 
             563: expr_stmt: 
              564: expr: 
               565: name: vps_ols_mode_idc
               566: operator: =
               567: call: 
                568: name: gf_bs_read_int_log
                569: argument_list: 
                 570: argument: 
                  571: expr: 
                   572: name: bs
                 573: argument: 
                  574: expr: 
                   575: literal: 2
                 576: argument: 
                  577: expr: 
                   578: literal: "vps_ols_mode_idc"
         579: if_stmt: 
          580: if: 
           581: condition: 
            582: expr: 
             583: name: vps_ols_mode_idc
             584: operator: ==
             585: literal: 2
           586: block: 
            587: block_content: 
             588: decl_stmt: 
              589: decl: 
               590: type: 
                591: name: u8
               592: name: vps_num_output_layer_sets
               593: init: 
                594: expr: 
                 595: literal: 2
                 596: operator: +
                 597: call: 
                  598: name: gf_bs_read_int_log
                  599: argument_list: 
                   600: argument: 
                    601: expr: 
                     602: name: bs
                   603: argument: 
                    604: expr: 
                     605: literal: 8
                   606: argument: 
                    607: expr: 
                     608: literal: "vps_num_output_layer_sets_minus2"
             609: for: 
              610: control: 
               611: init: 
                612: expr: 
                 613: name: i
                 614: operator: =
                 615: literal: 0
               616: condition: 
                617: expr: 
                 618: name: i
                 619: operator: <
                 620: name: vps_num_output_layer_sets
               621: incr: 
                622: expr: 
                 623: name: i
                 624: operator: ++
              625: block: 
               626: block_content: 
                627: for: 
                 628: control: 
                  629: init: 
                   630: expr: 
                    631: name: j
                    632: operator: =
                    633: literal: 0
                  634: condition: 
                   635: expr: 
                    636: name: j
                    637: operator: <
                    638: name: 
                     639: name: vps
                     640: operator: ->
                     641: name: max_layers
                  642: incr: 
                   643: expr: 
                    644: name: j
                    645: operator: ++
                 646: block: 
                  647: block_content: 
                   648: expr_stmt: 
                    649: expr: 
                     650: call: 
                      651: name: gf_bs_read_int_log_idx2
                      652: argument_list: 
                       653: argument: 
                        654: expr: 
                         655: name: bs
                       656: argument: 
                        657: expr: 
                         658: literal: 1
                       659: argument: 
                        660: expr: 
                         661: literal: "vps_ols_output_layer_flag"
                       662: argument: 
                        663: expr: 
                         664: name: i
                       665: argument: 
                        666: expr: 
                         667: name: j
     668: expr_stmt: 
      669: expr: 
       670: name: 
        671: name: vps
        672: operator: ->
        673: name: num_ptl
       674: operator: =
       675: literal: 1
       676: operator: +
       677: call: 
        678: name: gf_bs_read_int_log
        679: argument_list: 
         680: argument: 
          681: expr: 
           682: name: bs
         683: argument: 
          684: expr: 
           685: literal: 8
         686: argument: 
          687: expr: 
           688: literal: "num_ptl_minus1"
 689: expr_stmt: 
  690: expr: 
   691: name: 
    692: name: vps
    693: operator: ->
    694: name: ptl
    695: index: 
     696: expr: 
      697: literal: 0
   698: operator: .
   699: name: pt_present
   700: operator: =
   701: literal: 1
 702: for: 
  703: control: 
   704: init: 
    705: expr: 
     706: name: i
     707: operator: =
     708: literal: 0
   709: condition: 
    710: expr: 
     711: name: i
     712: operator: <
     713: name: 
      714: name: vps
      715: operator: ->
      716: name: num_ptl
   717: incr: 
    718: expr: 
     719: name: i
     720: operator: ++
  721: block: 
   722: block_content: 
    723: if_stmt: 
     724: if: 
      725: condition: 
       726: expr: 
        727: name: i
      728: block: 
       729: block_content: 
        730: expr_stmt: 
         731: expr: 
          732: name: 
           733: name: vps
           734: operator: ->
           735: name: ptl
           736: index: 
            737: expr: 
             738: name: i
          739: operator: .
          740: name: pt_present
          741: operator: =
          742: call: 
           743: name: gf_bs_read_int_log_idx
           744: argument_list: 
            745: argument: 
             746: expr: 
              747: name: bs
            748: argument: 
             749: expr: 
              750: literal: 1
            751: argument: 
             752: expr: 
              753: literal: "pt_present"
            754: argument: 
             755: expr: 
              756: name: i
    757: if_stmt: 
     758: if: 
      759: condition: 
       760: expr: 
        761: operator: !
        762: name: vps_default_ptl_dpb_hrd_max_tid_flag
      763: block: 
       764: block_content: 
        765: expr_stmt: 
         766: expr: 
          767: name: 
           768: name: vps
           769: operator: ->
           770: name: ptl
           771: index: 
            772: expr: 
             773: name: i
          774: operator: .
          775: name: ptl_max_tid
          776: operator: =
          777: call: 
           778: name: gf_bs_read_int_log_idx
           779: argument_list: 
            780: argument: 
             781: expr: 
              782: name: bs
            783: argument: 
             784: expr: 
              785: literal: 3
            786: argument: 
             787: expr: 
              788: literal: "ptl_max_tid"
            789: argument: 
             790: expr: 
              791: name: i
     792: else: 
      793: block: 
       794: block_content: 
        795: expr_stmt: 
         796: expr: 
          797: name: 
           798: name: vps
           799: operator: ->
           800: name: ptl
           801: index: 
            802: expr: 
             803: name: i
          804: operator: .
          805: name: ptl_max_tid
          806: operator: =
          807: name: 
           808: name: vps
           809: operator: ->
           810: name: max_sub_layers
          811: operator: -
          812: literal: 1
    813: empty_stmt: 
 814: comment: //align
 815: expr_stmt: 
  816: expr: 
   817: call: 
    818: name: gf_bs_align
    819: argument_list: 
     820: argument: 
      821: expr: 
       822: name: bs
 823: for: 
  824: control: 
   825: init: 
    826: expr: 
     827: name: i
     828: operator: =
     829: literal: 0
   830: condition: 
    831: expr: 
     832: name: i
     833: operator: <
     834: name: 
      835: name: vps
      836: operator: ->
      837: name: num_ptl
   838: incr: 
    839: expr: 
     840: name: i
     841: operator: ++
  842: block: 
   843: block_content: 
    844: expr_stmt: 
     845: expr: 
      846: call: 
       847: name: vvc_profile_tier_level
       848: argument_list: 
        849: argument: 
         850: expr: 
          851: name: bs
        852: argument: 
         853: expr: 
          854: operator: &
          855: name: 
           856: name: vps
           857: operator: ->
           858: name: ptl
           859: index: 
            860: expr: 
             861: name: i
        862: argument: 
         863: expr: 
          864: name: i
 865: comment: //TODO, parse multilayer stuff
 866: return: 
  867: expr: 
   868: name: vps_id
=====
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: vps_id
    5: operator: >=
    6: literal: 16
  7: block: 
   8: block_content: 
    9: return: 
     10: expr: 
      11: operator: -
      12: literal: 1

----------------------------------------
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: operator: (
    5: name: vps_id
    6: operator: <
    7: literal: 0
    8: operator: )
    9: operator: ||
    10: operator: (
    11: name: vps_id
    12: operator: >=
    13: literal: 16
    14: operator: )
  15: block: 
   16: block_content: 
    17: return: 
     18: expr: 
      19: operator: -
      20: literal: 1
=====
0: if: 
 1: condition: 
  2: expr: 
   3: name: vps_id
   4: operator: >=
   5: literal: 16
 6: block: 
  7: block_content: 
   8: return: 
    9: expr: 
     10: operator: -
     11: literal: 1

----------------------------------------
0: if: 
 1: condition: 
  2: expr: 
   3: operator: (
   4: name: vps_id
   5: operator: <
   6: literal: 0
   7: operator: )
   8: operator: ||
   9: operator: (
   10: name: vps_id
   11: operator: >=
   12: literal: 16
   13: operator: )
 14: block: 
  15: block_content: 
   16: return: 
    17: expr: 
     18: operator: -
     19: literal: 1
=====
0: condition: 
 1: expr: 
  2: name: vps_id
  3: operator: >=
  4: literal: 16

----------------------------------------
0: condition: 
 1: expr: 
  2: operator: (
  3: name: vps_id
  4: operator: <
  5: literal: 0
  6: operator: )
  7: operator: ||
  8: operator: (
  9: name: vps_id
  10: operator: >=
  11: literal: 16
  12: operator: )
=====
0: expr: 
 1: name: vps_id
 2: operator: >=
 3: literal: 16

----------------------------------------
0: expr: 
 1: operator: (
 2: name: vps_id
 3: operator: <
 4: literal: 0
 5: operator: )
 6: operator: ||
 7: operator: (
 8: name: vps_id
 9: operator: >=
 10: literal: 16
 11: operator: )
=====
