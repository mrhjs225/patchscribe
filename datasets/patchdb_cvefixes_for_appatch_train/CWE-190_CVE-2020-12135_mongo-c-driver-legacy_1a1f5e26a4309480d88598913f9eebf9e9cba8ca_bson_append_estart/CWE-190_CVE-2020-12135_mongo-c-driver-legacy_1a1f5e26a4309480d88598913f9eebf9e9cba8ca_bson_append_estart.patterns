0: unit: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: int
  5: name: bson_append_estart
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: bson
      11: modifier: *
     12: name: b
   13: parameter: 
    14: decl: 
     15: type: 
      16: name: int
     17: name: type
   18: parameter: 
    19: decl: 
     20: type: 
      21: specifier: const
      22: name: char
      23: modifier: *
     24: name: name
   25: parameter: 
    26: decl: 
     27: type: 
      28: specifier: const
      29: name: int
     30: name: dataSize
  31: block: 
   32: block_content: 
    33: decl_stmt: 
     34: decl: 
      35: type: 
       36: specifier: const
       37: name: int
      38: name: len
      39: init: 
       40: expr: 
        41: call: 
         42: name: strlen
         43: argument_list: 
          44: argument: 
           45: expr: 
            46: name: name
        47: operator: +
        48: literal: 1
    49: if_stmt: 
     50: if: 
      51: condition: 
       52: expr: 
        53: name: 
         54: name: b
         55: operator: ->
         56: name: finished
      57: block: 
       58: block_content: 
        59: expr_stmt: 
         60: expr: 
          61: name: 
           62: name: b
           63: operator: ->
           64: name: err
          65: operator: |=
          66: name: BSON_ALREADY_FINISHED
        67: return: 
         68: expr: 
          69: name: BSON_ERROR
    70: if_stmt: 
     71: if: 
      72: condition: 
       73: expr: 
        74: call: 
         75: name: bson_ensure_space
         76: argument_list: 
          77: argument: 
           78: expr: 
            79: name: b
          80: argument: 
           81: expr: 
            82: literal: 1
            83: operator: +
            84: name: len
            85: operator: +
            86: name: dataSize
        87: operator: ==
        88: name: BSON_ERROR
      89: block: 
       90: block_content: 
        91: return: 
         92: expr: 
          93: name: BSON_ERROR
    94: if_stmt: 
     95: if: 
      96: condition: 
       97: expr: 
        98: call: 
         99: name: bson_check_field_name
         100: argument_list: 
          101: argument: 
           102: expr: 
            103: name: b
          104: argument: 
           105: expr: 
            106: operator: (
            107: specifier: const
            108: name: char
            109: operator: *
            110: operator: )
            111: name: name
          112: argument: 
           113: expr: 
            114: name: len
            115: operator: -
            116: literal: 1
        117: operator: ==
        118: name: BSON_ERROR
      119: block: 
       120: block_content: 
        121: expr_stmt: 
         122: expr: 
          123: call: 
           124: name: bson_builder_error
           125: argument_list: 
            126: argument: 
             127: expr: 
              128: name: b
        129: return: 
         130: expr: 
          131: name: BSON_ERROR
    132: expr_stmt: 
     133: expr: 
      134: call: 
       135: name: bson_append_byte
       136: argument_list: 
        137: argument: 
         138: expr: 
          139: name: b
        140: argument: 
         141: expr: 
          142: operator: (
          143: name: char
          144: operator: )
          145: name: type
    146: expr_stmt: 
     147: expr: 
      148: call: 
       149: name: bson_append
       150: argument_list: 
        151: argument: 
         152: expr: 
          153: name: b
        154: argument: 
         155: expr: 
          156: name: name
        157: argument: 
         158: expr: 
          159: name: len
    160: return: 
     161: expr: 
      162: name: BSON_OK

----------------------------------------
0: unit: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: int
  5: name: bson_append_estart
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: bson
      11: modifier: *
     12: name: b
   13: parameter: 
    14: decl: 
     15: type: 
      16: name: int
     17: name: type
   18: parameter: 
    19: decl: 
     20: type: 
      21: specifier: const
      22: name: char
      23: modifier: *
     24: name: name
   25: parameter: 
    26: decl: 
     27: type: 
      28: specifier: const
      29: name: size_t
     30: name: dataSize
  31: block: 
   32: block_content: 
    33: decl_stmt: 
     34: decl: 
      35: type: 
       36: specifier: const
       37: name: int
      38: name: len
      39: init: 
       40: expr: 
        41: call: 
         42: name: strlen
         43: argument_list: 
          44: argument: 
           45: expr: 
            46: name: name
        47: operator: +
        48: literal: 1
    49: if_stmt: 
     50: if: 
      51: condition: 
       52: expr: 
        53: name: 
         54: name: b
         55: operator: ->
         56: name: finished
      57: block: 
       58: block_content: 
        59: expr_stmt: 
         60: expr: 
          61: name: 
           62: name: b
           63: operator: ->
           64: name: err
          65: operator: |=
          66: name: BSON_ALREADY_FINISHED
        67: return: 
         68: expr: 
          69: name: BSON_ERROR
    70: if_stmt: 
     71: if: 
      72: condition: 
       73: expr: 
        74: call: 
         75: name: bson_ensure_space
         76: argument_list: 
          77: argument: 
           78: expr: 
            79: name: b
          80: argument: 
           81: expr: 
            82: literal: 1
            83: operator: +
            84: name: len
            85: operator: +
            86: name: dataSize
        87: operator: ==
        88: name: BSON_ERROR
      89: block: 
       90: block_content: 
        91: return: 
         92: expr: 
          93: name: BSON_ERROR
    94: if_stmt: 
     95: if: 
      96: condition: 
       97: expr: 
        98: call: 
         99: name: bson_check_field_name
         100: argument_list: 
          101: argument: 
           102: expr: 
            103: name: b
          104: argument: 
           105: expr: 
            106: operator: (
            107: specifier: const
            108: name: char
            109: operator: *
            110: operator: )
            111: name: name
          112: argument: 
           113: expr: 
            114: name: len
            115: operator: -
            116: literal: 1
        117: operator: ==
        118: name: BSON_ERROR
      119: block: 
       120: block_content: 
        121: expr_stmt: 
         122: expr: 
          123: call: 
           124: name: bson_builder_error
           125: argument_list: 
            126: argument: 
             127: expr: 
              128: name: b
        129: return: 
         130: expr: 
          131: name: BSON_ERROR
    132: expr_stmt: 
     133: expr: 
      134: call: 
       135: name: bson_append_byte
       136: argument_list: 
        137: argument: 
         138: expr: 
          139: name: b
        140: argument: 
         141: expr: 
          142: operator: (
          143: name: char
          144: operator: )
          145: name: type
    146: expr_stmt: 
     147: expr: 
      148: call: 
       149: name: bson_append
       150: argument_list: 
        151: argument: 
         152: expr: 
          153: name: b
        154: argument: 
         155: expr: 
          156: name: name
        157: argument: 
         158: expr: 
          159: name: len
    160: return: 
     161: expr: 
      162: name: BSON_OK
=====
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: bson_append_estart
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: bson
     10: modifier: *
    11: name: b
  12: parameter: 
   13: decl: 
    14: type: 
     15: name: int
    16: name: type
  17: parameter: 
   18: decl: 
    19: type: 
     20: specifier: const
     21: name: char
     22: modifier: *
    23: name: name
  24: parameter: 
   25: decl: 
    26: type: 
     27: specifier: const
     28: name: int
    29: name: dataSize
 30: block: 
  31: block_content: 
   32: decl_stmt: 
    33: decl: 
     34: type: 
      35: specifier: const
      36: name: int
     37: name: len
     38: init: 
      39: expr: 
       40: call: 
        41: name: strlen
        42: argument_list: 
         43: argument: 
          44: expr: 
           45: name: name
       46: operator: +
       47: literal: 1
   48: if_stmt: 
    49: if: 
     50: condition: 
      51: expr: 
       52: name: 
        53: name: b
        54: operator: ->
        55: name: finished
     56: block: 
      57: block_content: 
       58: expr_stmt: 
        59: expr: 
         60: name: 
          61: name: b
          62: operator: ->
          63: name: err
         64: operator: |=
         65: name: BSON_ALREADY_FINISHED
       66: return: 
        67: expr: 
         68: name: BSON_ERROR
   69: if_stmt: 
    70: if: 
     71: condition: 
      72: expr: 
       73: call: 
        74: name: bson_ensure_space
        75: argument_list: 
         76: argument: 
          77: expr: 
           78: name: b
         79: argument: 
          80: expr: 
           81: literal: 1
           82: operator: +
           83: name: len
           84: operator: +
           85: name: dataSize
       86: operator: ==
       87: name: BSON_ERROR
     88: block: 
      89: block_content: 
       90: return: 
        91: expr: 
         92: name: BSON_ERROR
   93: if_stmt: 
    94: if: 
     95: condition: 
      96: expr: 
       97: call: 
        98: name: bson_check_field_name
        99: argument_list: 
         100: argument: 
          101: expr: 
           102: name: b
         103: argument: 
          104: expr: 
           105: operator: (
           106: specifier: const
           107: name: char
           108: operator: *
           109: operator: )
           110: name: name
         111: argument: 
          112: expr: 
           113: name: len
           114: operator: -
           115: literal: 1
       116: operator: ==
       117: name: BSON_ERROR
     118: block: 
      119: block_content: 
       120: expr_stmt: 
        121: expr: 
         122: call: 
          123: name: bson_builder_error
          124: argument_list: 
           125: argument: 
            126: expr: 
             127: name: b
       128: return: 
        129: expr: 
         130: name: BSON_ERROR
   131: expr_stmt: 
    132: expr: 
     133: call: 
      134: name: bson_append_byte
      135: argument_list: 
       136: argument: 
        137: expr: 
         138: name: b
       139: argument: 
        140: expr: 
         141: operator: (
         142: name: char
         143: operator: )
         144: name: type
   145: expr_stmt: 
    146: expr: 
     147: call: 
      148: name: bson_append
      149: argument_list: 
       150: argument: 
        151: expr: 
         152: name: b
       153: argument: 
        154: expr: 
         155: name: name
       156: argument: 
        157: expr: 
         158: name: len
   159: return: 
    160: expr: 
     161: name: BSON_OK

----------------------------------------
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: bson_append_estart
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: bson
     10: modifier: *
    11: name: b
  12: parameter: 
   13: decl: 
    14: type: 
     15: name: int
    16: name: type
  17: parameter: 
   18: decl: 
    19: type: 
     20: specifier: const
     21: name: char
     22: modifier: *
    23: name: name
  24: parameter: 
   25: decl: 
    26: type: 
     27: specifier: const
     28: name: size_t
    29: name: dataSize
 30: block: 
  31: block_content: 
   32: decl_stmt: 
    33: decl: 
     34: type: 
      35: specifier: const
      36: name: int
     37: name: len
     38: init: 
      39: expr: 
       40: call: 
        41: name: strlen
        42: argument_list: 
         43: argument: 
          44: expr: 
           45: name: name
       46: operator: +
       47: literal: 1
   48: if_stmt: 
    49: if: 
     50: condition: 
      51: expr: 
       52: name: 
        53: name: b
        54: operator: ->
        55: name: finished
     56: block: 
      57: block_content: 
       58: expr_stmt: 
        59: expr: 
         60: name: 
          61: name: b
          62: operator: ->
          63: name: err
         64: operator: |=
         65: name: BSON_ALREADY_FINISHED
       66: return: 
        67: expr: 
         68: name: BSON_ERROR
   69: if_stmt: 
    70: if: 
     71: condition: 
      72: expr: 
       73: call: 
        74: name: bson_ensure_space
        75: argument_list: 
         76: argument: 
          77: expr: 
           78: name: b
         79: argument: 
          80: expr: 
           81: literal: 1
           82: operator: +
           83: name: len
           84: operator: +
           85: name: dataSize
       86: operator: ==
       87: name: BSON_ERROR
     88: block: 
      89: block_content: 
       90: return: 
        91: expr: 
         92: name: BSON_ERROR
   93: if_stmt: 
    94: if: 
     95: condition: 
      96: expr: 
       97: call: 
        98: name: bson_check_field_name
        99: argument_list: 
         100: argument: 
          101: expr: 
           102: name: b
         103: argument: 
          104: expr: 
           105: operator: (
           106: specifier: const
           107: name: char
           108: operator: *
           109: operator: )
           110: name: name
         111: argument: 
          112: expr: 
           113: name: len
           114: operator: -
           115: literal: 1
       116: operator: ==
       117: name: BSON_ERROR
     118: block: 
      119: block_content: 
       120: expr_stmt: 
        121: expr: 
         122: call: 
          123: name: bson_builder_error
          124: argument_list: 
           125: argument: 
            126: expr: 
             127: name: b
       128: return: 
        129: expr: 
         130: name: BSON_ERROR
   131: expr_stmt: 
    132: expr: 
     133: call: 
      134: name: bson_append_byte
      135: argument_list: 
       136: argument: 
        137: expr: 
         138: name: b
       139: argument: 
        140: expr: 
         141: operator: (
         142: name: char
         143: operator: )
         144: name: type
   145: expr_stmt: 
    146: expr: 
     147: call: 
      148: name: bson_append
      149: argument_list: 
       150: argument: 
        151: expr: 
         152: name: b
       153: argument: 
        154: expr: 
         155: name: name
       156: argument: 
        157: expr: 
         158: name: len
   159: return: 
    160: expr: 
     161: name: BSON_OK
=====
0: parameter_list: 
 1: parameter: 
  2: decl: 
   3: type: 
    4: name: bson
    5: modifier: *
   6: name: b
 7: parameter: 
  8: decl: 
   9: type: 
    10: name: int
   11: name: type
 12: parameter: 
  13: decl: 
   14: type: 
    15: specifier: const
    16: name: char
    17: modifier: *
   18: name: name
 19: parameter: 
  20: decl: 
   21: type: 
    22: specifier: const
    23: name: int
   24: name: dataSize

----------------------------------------
0: parameter_list: 
 1: parameter: 
  2: decl: 
   3: type: 
    4: name: bson
    5: modifier: *
   6: name: b
 7: parameter: 
  8: decl: 
   9: type: 
    10: name: int
   11: name: type
 12: parameter: 
  13: decl: 
   14: type: 
    15: specifier: const
    16: name: char
    17: modifier: *
   18: name: name
 19: parameter: 
  20: decl: 
   21: type: 
    22: specifier: const
    23: name: size_t
   24: name: dataSize
=====
0: parameter: 
 1: decl: 
  2: type: 
   3: specifier: const
   4: name: int
  5: name: dataSize

----------------------------------------
0: parameter: 
 1: decl: 
  2: type: 
   3: specifier: const
   4: name: size_t
  5: name: dataSize
=====
0: decl: 
 1: type: 
  2: specifier: const
  3: name: int
 4: name: dataSize

----------------------------------------
0: decl: 
 1: type: 
  2: specifier: const
  3: name: size_t
 4: name: dataSize
=====
0: type: 
 1: specifier: const
 2: name: int

----------------------------------------
0: type: 
 1: specifier: const
 2: name: size_t
=====
0: name: int

----------------------------------------
0: name: size_t
=====
