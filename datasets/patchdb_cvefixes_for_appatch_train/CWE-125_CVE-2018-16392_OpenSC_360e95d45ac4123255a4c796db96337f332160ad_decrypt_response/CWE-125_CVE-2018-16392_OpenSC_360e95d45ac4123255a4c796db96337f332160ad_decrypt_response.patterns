0: unit: 
 1: macro: 
  2: name: decrypt_response
  3: argument_list: 
   4: argument: 
   5: argument: 
   6: argument: 
   7: argument: 
   8: argument: 
 9: block: 
  10: block_content: 
   11: decl_stmt: 
    12: decl: 
     13: type: 
      14: name: size_t
     15: name: cipher_len
   16: decl_stmt: 
    17: decl: 
     18: type: 
      19: name: size_t
     20: name: i
   21: decl_stmt: 
    22: decl: 
     23: type: 
      24: name: unsigned
      25: name: char
     26: name: 
      27: name: iv
      28: index: 
       29: expr: 
        30: literal: 16
     31: init: 
      32: expr: 
       33: block: 
        34: expr: 
         35: literal: 0
   36: decl_stmt: 
    37: decl: 
     38: type: 
      39: name: unsigned
      40: name: char
     41: name: 
      42: name: plaintext
      43: index: 
       44: expr: 
        45: literal: 4096
     46: init: 
      47: expr: 
       48: block: 
        49: expr: 
         50: literal: 0
   51: decl_stmt: 
    52: decl: 
     53: type: 
      54: name: epass2003_exdata
      55: modifier: *
     56: name: exdata
     57: init: 
      58: expr: 
       59: name: NULL
   60: if_stmt: 
    61: if: 
     62: condition: 
      63: expr: 
       64: operator: !
       65: name: 
        66: name: card
        67: operator: ->
        68: name: drv_data
     69: block: 
      70: block_content: 
       71: return: 
        72: expr: 
         73: name: SC_ERROR_INVALID_ARGUMENTS
   74: expr_stmt: 
    75: expr: 
     76: name: exdata
     77: operator: =
     78: operator: (
     79: name: epass2003_exdata
     80: operator: *
     81: operator: )
     82: name: 
      83: name: card
      84: operator: ->
      85: name: drv_data
   86: comment: /* no cipher */
   87: if_stmt: 
    88: if: 
     89: condition: 
      90: expr: 
       91: name: 
        92: name: in
        93: index: 
         94: expr: 
          95: literal: 0
       96: operator: ==
       97: literal: 0x99
     98: block: 
      99: block_content: 
       100: return: 
        101: expr: 
         102: literal: 0
   103: comment: /* parse cipher length */
   104: if_stmt: 
    105: if: 
     106: condition: 
      107: expr: 
       108: literal: 0x01
       109: operator: ==
       110: name: 
        111: name: in
        112: index: 
         113: expr: 
          114: literal: 2
       115: operator: &&
       116: literal: 0x82
       117: operator: !=
       118: name: 
        119: name: in
        120: index: 
         121: expr: 
          122: literal: 1
     123: block: 
      124: block_content: 
       125: expr_stmt: 
        126: expr: 
         127: name: cipher_len
         128: operator: =
         129: name: 
          130: name: in
          131: index: 
           132: expr: 
            133: literal: 1
       134: expr_stmt: 
        135: expr: 
         136: name: i
         137: operator: =
         138: literal: 3
    139: if: 
     140: condition: 
      141: expr: 
       142: literal: 0x01
       143: operator: ==
       144: name: 
        145: name: in
        146: index: 
         147: expr: 
          148: literal: 3
       149: operator: &&
       150: literal: 0x81
       151: operator: ==
       152: name: 
        153: name: in
        154: index: 
         155: expr: 
          156: literal: 1
     157: block: 
      158: block_content: 
       159: expr_stmt: 
        160: expr: 
         161: name: cipher_len
         162: operator: =
         163: name: 
          164: name: in
          165: index: 
           166: expr: 
            167: literal: 2
       168: expr_stmt: 
        169: expr: 
         170: name: i
         171: operator: =
         172: literal: 4
    173: if: 
     174: condition: 
      175: expr: 
       176: literal: 0x01
       177: operator: ==
       178: name: 
        179: name: in
        180: index: 
         181: expr: 
          182: literal: 4
       183: operator: &&
       184: literal: 0x82
       185: operator: ==
       186: name: 
        187: name: in
        188: index: 
         189: expr: 
          190: literal: 1
     191: block: 
      192: block_content: 
       193: expr_stmt: 
        194: expr: 
         195: name: cipher_len
         196: operator: =
         197: name: 
          198: name: in
          199: index: 
           200: expr: 
            201: literal: 2
         202: operator: *
         203: literal: 0x100
       204: expr_stmt: 
        205: expr: 
         206: name: cipher_len
         207: operator: +=
         208: name: 
          209: name: in
          210: index: 
           211: expr: 
            212: literal: 3
       213: expr_stmt: 
        214: expr: 
         215: name: i
         216: operator: =
         217: literal: 5
    218: else: 
     219: block: 
      220: block_content: 
       221: return: 
        222: expr: 
         223: operator: -
         224: literal: 1
   225: if_stmt: 
    226: if: 
     227: condition: 
      228: expr: 
       229: name: 
        230: name: cipher_len
        231: argument_list: 
         232: argument: 
          233: expr: 
           234: literal: 2
           235: operator: ||
           236: name: i
           237: operator: +
           238: name: cipher_len
       239: name: inlen
       240: operator: ||
       241: name: cipher_len
       242: operator: >
       243: sizeof: 
        244: name: plaintext
     245: block: 
      246: block_content: 
       247: return: 
        248: expr: 
         249: operator: -
         250: literal: 1
   251: comment: /* decrypt */
   252: if_stmt: 
    253: if: 
     254: condition: 
      255: expr: 
       256: name: KEY_TYPE_AES
       257: operator: ==
       258: name: 
        259: name: exdata
        260: operator: ->
        261: name: smtype
     262: block: 
      263: block_content: 
       264: expr_stmt: 
        265: expr: 
         266: call: 
          267: name: aes128_decrypt_cbc
          268: argument_list: 
           269: argument: 
            270: expr: 
             271: name: 
              272: name: exdata
              273: operator: ->
              274: name: sk_enc
           275: argument: 
            276: expr: 
             277: literal: 16
           278: argument: 
            279: expr: 
             280: name: iv
           281: argument: 
            282: expr: 
             283: operator: &
             284: name: 
              285: name: in
              286: index: 
               287: expr: 
                288: name: i
           289: argument: 
            290: expr: 
             291: name: cipher_len
             292: operator: -
             293: literal: 1
           294: argument: 
            295: expr: 
             296: name: plaintext
    297: else: 
     298: block: 
      299: block_content: 
       300: expr_stmt: 
        301: expr: 
         302: call: 
          303: name: des3_decrypt_cbc
          304: argument_list: 
           305: argument: 
            306: expr: 
             307: name: 
              308: name: exdata
              309: operator: ->
              310: name: sk_enc
           311: argument: 
            312: expr: 
             313: literal: 16
           314: argument: 
            315: expr: 
             316: name: iv
           317: argument: 
            318: expr: 
             319: operator: &
             320: name: 
              321: name: in
              322: index: 
               323: expr: 
                324: name: i
           325: argument: 
            326: expr: 
             327: name: cipher_len
             328: operator: -
             329: literal: 1
           330: argument: 
            331: expr: 
             332: name: plaintext
   333: comment: /* unpadding */
   334: while: 
    335: condition: 
     336: expr: 
      337: literal: 0x80
      338: operator: !=
      339: name: 
       340: name: plaintext
       341: index: 
        342: expr: 
         343: name: cipher_len
         344: operator: -
         345: literal: 2
      346: operator: &&
      347: operator: (
      348: name: cipher_len
      349: operator: -
      350: literal: 2
      351: operator: >
      352: literal: 0
      353: operator: )
    354: block: 
     355: block_content: 
      356: expr_stmt: 
       357: expr: 
        358: name: cipher_len
        359: operator: --
   360: if_stmt: 
    361: if: 
     362: condition: 
      363: expr: 
       364: literal: 2
       365: operator: ==
       366: name: cipher_len
     367: block: 
      368: block_content: 
       369: return: 
        370: expr: 
         371: operator: -
         372: literal: 1
   373: expr_stmt: 
    374: expr: 
     375: call: 
      376: name: memcpy
      377: argument_list: 
       378: argument: 
        379: expr: 
         380: name: out
       381: argument: 
        382: expr: 
         383: name: plaintext
       384: argument: 
        385: expr: 
         386: name: cipher_len
         387: operator: -
         388: literal: 2
   389: expr_stmt: 
    390: expr: 
     391: operator: *
     392: name: out_len
     393: operator: =
     394: name: cipher_len
     395: operator: -
     396: literal: 2
   397: return: 
    398: expr: 
     399: literal: 0

----------------------------------------
0: unit: 
 1: macro: 
  2: name: decrypt_response
  3: argument_list: 
   4: argument: 
   5: argument: 
   6: argument: 
   7: argument: 
   8: argument: 
 9: block: 
  10: block_content: 
   11: decl_stmt: 
    12: decl: 
     13: type: 
      14: name: size_t
     15: name: cipher_len
   16: decl_stmt: 
    17: decl: 
     18: type: 
      19: name: size_t
     20: name: i
   21: decl_stmt: 
    22: decl: 
     23: type: 
      24: name: unsigned
      25: name: char
     26: name: 
      27: name: iv
      28: index: 
       29: expr: 
        30: literal: 16
     31: init: 
      32: expr: 
       33: block: 
        34: expr: 
         35: literal: 0
   36: decl_stmt: 
    37: decl: 
     38: type: 
      39: name: unsigned
      40: name: char
     41: name: 
      42: name: plaintext
      43: index: 
       44: expr: 
        45: literal: 4096
     46: init: 
      47: expr: 
       48: block: 
        49: expr: 
         50: literal: 0
   51: decl_stmt: 
    52: decl: 
     53: type: 
      54: name: epass2003_exdata
      55: modifier: *
     56: name: exdata
     57: init: 
      58: expr: 
       59: name: NULL
   60: if_stmt: 
    61: if: 
     62: condition: 
      63: expr: 
       64: operator: !
       65: name: 
        66: name: card
        67: operator: ->
        68: name: drv_data
     69: block: 
      70: block_content: 
       71: return: 
        72: expr: 
         73: name: SC_ERROR_INVALID_ARGUMENTS
   74: expr_stmt: 
    75: expr: 
     76: name: exdata
     77: operator: =
     78: operator: (
     79: name: epass2003_exdata
     80: operator: *
     81: operator: )
     82: name: 
      83: name: card
      84: operator: ->
      85: name: drv_data
   86: comment: /* no cipher */
   87: if_stmt: 
    88: if: 
     89: condition: 
      90: expr: 
       91: name: 
        92: name: in
        93: index: 
         94: expr: 
          95: literal: 0
       96: operator: ==
       97: literal: 0x99
     98: block: 
      99: block_content: 
       100: return: 
        101: expr: 
         102: literal: 0
   103: comment: /* parse cipher length */
   104: if_stmt: 
    105: if: 
     106: condition: 
      107: expr: 
       108: literal: 0x01
       109: operator: ==
       110: name: 
        111: name: in
        112: index: 
         113: expr: 
          114: literal: 2
       115: operator: &&
       116: literal: 0x82
       117: operator: !=
       118: name: 
        119: name: in
        120: index: 
         121: expr: 
          122: literal: 1
     123: block: 
      124: block_content: 
       125: expr_stmt: 
        126: expr: 
         127: name: cipher_len
         128: operator: =
         129: name: 
          130: name: in
          131: index: 
           132: expr: 
            133: literal: 1
       134: expr_stmt: 
        135: expr: 
         136: name: i
         137: operator: =
         138: literal: 3
    139: if: 
     140: condition: 
      141: expr: 
       142: literal: 0x01
       143: operator: ==
       144: name: 
        145: name: in
        146: index: 
         147: expr: 
          148: literal: 3
       149: operator: &&
       150: literal: 0x81
       151: operator: ==
       152: name: 
        153: name: in
        154: index: 
         155: expr: 
          156: literal: 1
     157: block: 
      158: block_content: 
       159: expr_stmt: 
        160: expr: 
         161: name: cipher_len
         162: operator: =
         163: name: 
          164: name: in
          165: index: 
           166: expr: 
            167: literal: 2
       168: expr_stmt: 
        169: expr: 
         170: name: i
         171: operator: =
         172: literal: 4
    173: if: 
     174: condition: 
      175: expr: 
       176: literal: 0x01
       177: operator: ==
       178: name: 
        179: name: in
        180: index: 
         181: expr: 
          182: literal: 4
       183: operator: &&
       184: literal: 0x82
       185: operator: ==
       186: name: 
        187: name: in
        188: index: 
         189: expr: 
          190: literal: 1
     191: block: 
      192: block_content: 
       193: expr_stmt: 
        194: expr: 
         195: name: cipher_len
         196: operator: =
         197: name: 
          198: name: in
          199: index: 
           200: expr: 
            201: literal: 2
         202: operator: *
         203: literal: 0x100
       204: expr_stmt: 
        205: expr: 
         206: name: cipher_len
         207: operator: +=
         208: name: 
          209: name: in
          210: index: 
           211: expr: 
            212: literal: 3
       213: expr_stmt: 
        214: expr: 
         215: name: i
         216: operator: =
         217: literal: 5
    218: else: 
     219: block: 
      220: block_content: 
       221: return: 
        222: expr: 
         223: operator: -
         224: literal: 1
   225: if_stmt: 
    226: if: 
     227: condition: 
      228: expr: 
       229: name: 
        230: name: cipher_len
        231: argument_list: 
         232: argument: 
          233: expr: 
           234: literal: 2
           235: operator: ||
           236: name: i
           237: operator: +
           238: name: cipher_len
       239: name: inlen
       240: operator: ||
       241: name: cipher_len
       242: operator: >
       243: sizeof: 
        244: name: plaintext
     245: block: 
      246: block_content: 
       247: return: 
        248: expr: 
         249: operator: -
         250: literal: 1
   251: comment: /* decrypt */
   252: if_stmt: 
    253: if: 
     254: condition: 
      255: expr: 
       256: name: KEY_TYPE_AES
       257: operator: ==
       258: name: 
        259: name: exdata
        260: operator: ->
        261: name: smtype
     262: block: 
      263: block_content: 
       264: expr_stmt: 
        265: expr: 
         266: call: 
          267: name: aes128_decrypt_cbc
          268: argument_list: 
           269: argument: 
            270: expr: 
             271: name: 
              272: name: exdata
              273: operator: ->
              274: name: sk_enc
           275: argument: 
            276: expr: 
             277: literal: 16
           278: argument: 
            279: expr: 
             280: name: iv
           281: argument: 
            282: expr: 
             283: operator: &
             284: name: 
              285: name: in
              286: index: 
               287: expr: 
                288: name: i
           289: argument: 
            290: expr: 
             291: name: cipher_len
             292: operator: -
             293: literal: 1
           294: argument: 
            295: expr: 
             296: name: plaintext
    297: else: 
     298: block: 
      299: block_content: 
       300: expr_stmt: 
        301: expr: 
         302: call: 
          303: name: des3_decrypt_cbc
          304: argument_list: 
           305: argument: 
            306: expr: 
             307: name: 
              308: name: exdata
              309: operator: ->
              310: name: sk_enc
           311: argument: 
            312: expr: 
             313: literal: 16
           314: argument: 
            315: expr: 
             316: name: iv
           317: argument: 
            318: expr: 
             319: operator: &
             320: name: 
              321: name: in
              322: index: 
               323: expr: 
                324: name: i
           325: argument: 
            326: expr: 
             327: name: cipher_len
             328: operator: -
             329: literal: 1
           330: argument: 
            331: expr: 
             332: name: plaintext
   333: comment: /* unpadding */
   334: while: 
    335: condition: 
     336: expr: 
      337: literal: 0x80
      338: operator: !=
      339: name: 
       340: name: plaintext
       341: index: 
        342: expr: 
         343: name: cipher_len
         344: operator: -
         345: literal: 2
      346: operator: &&
      347: operator: (
      348: name: cipher_len
      349: operator: -
      350: literal: 2
      351: operator: >
      352: literal: 0
      353: operator: )
    354: block: 
     355: block_content: 
      356: expr_stmt: 
       357: expr: 
        358: name: cipher_len
        359: operator: --
   360: if_stmt: 
    361: if: 
     362: condition: 
      363: expr: 
       364: literal: 2
       365: operator: ==
       366: name: cipher_len
       367: operator: ||
       368: operator: *
       369: name: out_len
       370: operator: <
       371: name: cipher_len
       372: operator: -
       373: literal: 2
     374: block: 
      375: block_content: 
       376: return: 
        377: expr: 
         378: operator: -
         379: literal: 1
   380: expr_stmt: 
    381: expr: 
     382: call: 
      383: name: memcpy
      384: argument_list: 
       385: argument: 
        386: expr: 
         387: name: out
       388: argument: 
        389: expr: 
         390: name: plaintext
       391: argument: 
        392: expr: 
         393: name: cipher_len
         394: operator: -
         395: literal: 2
   396: expr_stmt: 
    397: expr: 
     398: operator: *
     399: name: out_len
     400: operator: =
     401: name: cipher_len
     402: operator: -
     403: literal: 2
   404: return: 
    405: expr: 
     406: literal: 0
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: size_t
    6: name: cipher_len
  7: decl_stmt: 
   8: decl: 
    9: type: 
     10: name: size_t
    11: name: i
  12: decl_stmt: 
   13: decl: 
    14: type: 
     15: name: unsigned
     16: name: char
    17: name: 
     18: name: iv
     19: index: 
      20: expr: 
       21: literal: 16
    22: init: 
     23: expr: 
      24: block: 
       25: expr: 
        26: literal: 0
  27: decl_stmt: 
   28: decl: 
    29: type: 
     30: name: unsigned
     31: name: char
    32: name: 
     33: name: plaintext
     34: index: 
      35: expr: 
       36: literal: 4096
    37: init: 
     38: expr: 
      39: block: 
       40: expr: 
        41: literal: 0
  42: decl_stmt: 
   43: decl: 
    44: type: 
     45: name: epass2003_exdata
     46: modifier: *
    47: name: exdata
    48: init: 
     49: expr: 
      50: name: NULL
  51: if_stmt: 
   52: if: 
    53: condition: 
     54: expr: 
      55: operator: !
      56: name: 
       57: name: card
       58: operator: ->
       59: name: drv_data
    60: block: 
     61: block_content: 
      62: return: 
       63: expr: 
        64: name: SC_ERROR_INVALID_ARGUMENTS
  65: expr_stmt: 
   66: expr: 
    67: name: exdata
    68: operator: =
    69: operator: (
    70: name: epass2003_exdata
    71: operator: *
    72: operator: )
    73: name: 
     74: name: card
     75: operator: ->
     76: name: drv_data
  77: comment: /* no cipher */
  78: if_stmt: 
   79: if: 
    80: condition: 
     81: expr: 
      82: name: 
       83: name: in
       84: index: 
        85: expr: 
         86: literal: 0
      87: operator: ==
      88: literal: 0x99
    89: block: 
     90: block_content: 
      91: return: 
       92: expr: 
        93: literal: 0
  94: comment: /* parse cipher length */
  95: if_stmt: 
   96: if: 
    97: condition: 
     98: expr: 
      99: literal: 0x01
      100: operator: ==
      101: name: 
       102: name: in
       103: index: 
        104: expr: 
         105: literal: 2
      106: operator: &&
      107: literal: 0x82
      108: operator: !=
      109: name: 
       110: name: in
       111: index: 
        112: expr: 
         113: literal: 1
    114: block: 
     115: block_content: 
      116: expr_stmt: 
       117: expr: 
        118: name: cipher_len
        119: operator: =
        120: name: 
         121: name: in
         122: index: 
          123: expr: 
           124: literal: 1
      125: expr_stmt: 
       126: expr: 
        127: name: i
        128: operator: =
        129: literal: 3
   130: if: 
    131: condition: 
     132: expr: 
      133: literal: 0x01
      134: operator: ==
      135: name: 
       136: name: in
       137: index: 
        138: expr: 
         139: literal: 3
      140: operator: &&
      141: literal: 0x81
      142: operator: ==
      143: name: 
       144: name: in
       145: index: 
        146: expr: 
         147: literal: 1
    148: block: 
     149: block_content: 
      150: expr_stmt: 
       151: expr: 
        152: name: cipher_len
        153: operator: =
        154: name: 
         155: name: in
         156: index: 
          157: expr: 
           158: literal: 2
      159: expr_stmt: 
       160: expr: 
        161: name: i
        162: operator: =
        163: literal: 4
   164: if: 
    165: condition: 
     166: expr: 
      167: literal: 0x01
      168: operator: ==
      169: name: 
       170: name: in
       171: index: 
        172: expr: 
         173: literal: 4
      174: operator: &&
      175: literal: 0x82
      176: operator: ==
      177: name: 
       178: name: in
       179: index: 
        180: expr: 
         181: literal: 1
    182: block: 
     183: block_content: 
      184: expr_stmt: 
       185: expr: 
        186: name: cipher_len
        187: operator: =
        188: name: 
         189: name: in
         190: index: 
          191: expr: 
           192: literal: 2
        193: operator: *
        194: literal: 0x100
      195: expr_stmt: 
       196: expr: 
        197: name: cipher_len
        198: operator: +=
        199: name: 
         200: name: in
         201: index: 
          202: expr: 
           203: literal: 3
      204: expr_stmt: 
       205: expr: 
        206: name: i
        207: operator: =
        208: literal: 5
   209: else: 
    210: block: 
     211: block_content: 
      212: return: 
       213: expr: 
        214: operator: -
        215: literal: 1
  216: if_stmt: 
   217: if: 
    218: condition: 
     219: expr: 
      220: name: 
       221: name: cipher_len
       222: argument_list: 
        223: argument: 
         224: expr: 
          225: literal: 2
          226: operator: ||
          227: name: i
          228: operator: +
          229: name: cipher_len
      230: name: inlen
      231: operator: ||
      232: name: cipher_len
      233: operator: >
      234: sizeof: 
       235: name: plaintext
    236: block: 
     237: block_content: 
      238: return: 
       239: expr: 
        240: operator: -
        241: literal: 1
  242: comment: /* decrypt */
  243: if_stmt: 
   244: if: 
    245: condition: 
     246: expr: 
      247: name: KEY_TYPE_AES
      248: operator: ==
      249: name: 
       250: name: exdata
       251: operator: ->
       252: name: smtype
    253: block: 
     254: block_content: 
      255: expr_stmt: 
       256: expr: 
        257: call: 
         258: name: aes128_decrypt_cbc
         259: argument_list: 
          260: argument: 
           261: expr: 
            262: name: 
             263: name: exdata
             264: operator: ->
             265: name: sk_enc
          266: argument: 
           267: expr: 
            268: literal: 16
          269: argument: 
           270: expr: 
            271: name: iv
          272: argument: 
           273: expr: 
            274: operator: &
            275: name: 
             276: name: in
             277: index: 
              278: expr: 
               279: name: i
          280: argument: 
           281: expr: 
            282: name: cipher_len
            283: operator: -
            284: literal: 1
          285: argument: 
           286: expr: 
            287: name: plaintext
   288: else: 
    289: block: 
     290: block_content: 
      291: expr_stmt: 
       292: expr: 
        293: call: 
         294: name: des3_decrypt_cbc
         295: argument_list: 
          296: argument: 
           297: expr: 
            298: name: 
             299: name: exdata
             300: operator: ->
             301: name: sk_enc
          302: argument: 
           303: expr: 
            304: literal: 16
          305: argument: 
           306: expr: 
            307: name: iv
          308: argument: 
           309: expr: 
            310: operator: &
            311: name: 
             312: name: in
             313: index: 
              314: expr: 
               315: name: i
          316: argument: 
           317: expr: 
            318: name: cipher_len
            319: operator: -
            320: literal: 1
          321: argument: 
           322: expr: 
            323: name: plaintext
  324: comment: /* unpadding */
  325: while: 
   326: condition: 
    327: expr: 
     328: literal: 0x80
     329: operator: !=
     330: name: 
      331: name: plaintext
      332: index: 
       333: expr: 
        334: name: cipher_len
        335: operator: -
        336: literal: 2
     337: operator: &&
     338: operator: (
     339: name: cipher_len
     340: operator: -
     341: literal: 2
     342: operator: >
     343: literal: 0
     344: operator: )
   345: block: 
    346: block_content: 
     347: expr_stmt: 
      348: expr: 
       349: name: cipher_len
       350: operator: --
  351: if_stmt: 
   352: if: 
    353: condition: 
     354: expr: 
      355: literal: 2
      356: operator: ==
      357: name: cipher_len
    358: block: 
     359: block_content: 
      360: return: 
       361: expr: 
        362: operator: -
        363: literal: 1
  364: expr_stmt: 
   365: expr: 
    366: call: 
     367: name: memcpy
     368: argument_list: 
      369: argument: 
       370: expr: 
        371: name: out
      372: argument: 
       373: expr: 
        374: name: plaintext
      375: argument: 
       376: expr: 
        377: name: cipher_len
        378: operator: -
        379: literal: 2
  380: expr_stmt: 
   381: expr: 
    382: operator: *
    383: name: out_len
    384: operator: =
    385: name: cipher_len
    386: operator: -
    387: literal: 2
  388: return: 
   389: expr: 
    390: literal: 0

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: size_t
    6: name: cipher_len
  7: decl_stmt: 
   8: decl: 
    9: type: 
     10: name: size_t
    11: name: i
  12: decl_stmt: 
   13: decl: 
    14: type: 
     15: name: unsigned
     16: name: char
    17: name: 
     18: name: iv
     19: index: 
      20: expr: 
       21: literal: 16
    22: init: 
     23: expr: 
      24: block: 
       25: expr: 
        26: literal: 0
  27: decl_stmt: 
   28: decl: 
    29: type: 
     30: name: unsigned
     31: name: char
    32: name: 
     33: name: plaintext
     34: index: 
      35: expr: 
       36: literal: 4096
    37: init: 
     38: expr: 
      39: block: 
       40: expr: 
        41: literal: 0
  42: decl_stmt: 
   43: decl: 
    44: type: 
     45: name: epass2003_exdata
     46: modifier: *
    47: name: exdata
    48: init: 
     49: expr: 
      50: name: NULL
  51: if_stmt: 
   52: if: 
    53: condition: 
     54: expr: 
      55: operator: !
      56: name: 
       57: name: card
       58: operator: ->
       59: name: drv_data
    60: block: 
     61: block_content: 
      62: return: 
       63: expr: 
        64: name: SC_ERROR_INVALID_ARGUMENTS
  65: expr_stmt: 
   66: expr: 
    67: name: exdata
    68: operator: =
    69: operator: (
    70: name: epass2003_exdata
    71: operator: *
    72: operator: )
    73: name: 
     74: name: card
     75: operator: ->
     76: name: drv_data
  77: comment: /* no cipher */
  78: if_stmt: 
   79: if: 
    80: condition: 
     81: expr: 
      82: name: 
       83: name: in
       84: index: 
        85: expr: 
         86: literal: 0
      87: operator: ==
      88: literal: 0x99
    89: block: 
     90: block_content: 
      91: return: 
       92: expr: 
        93: literal: 0
  94: comment: /* parse cipher length */
  95: if_stmt: 
   96: if: 
    97: condition: 
     98: expr: 
      99: literal: 0x01
      100: operator: ==
      101: name: 
       102: name: in
       103: index: 
        104: expr: 
         105: literal: 2
      106: operator: &&
      107: literal: 0x82
      108: operator: !=
      109: name: 
       110: name: in
       111: index: 
        112: expr: 
         113: literal: 1
    114: block: 
     115: block_content: 
      116: expr_stmt: 
       117: expr: 
        118: name: cipher_len
        119: operator: =
        120: name: 
         121: name: in
         122: index: 
          123: expr: 
           124: literal: 1
      125: expr_stmt: 
       126: expr: 
        127: name: i
        128: operator: =
        129: literal: 3
   130: if: 
    131: condition: 
     132: expr: 
      133: literal: 0x01
      134: operator: ==
      135: name: 
       136: name: in
       137: index: 
        138: expr: 
         139: literal: 3
      140: operator: &&
      141: literal: 0x81
      142: operator: ==
      143: name: 
       144: name: in
       145: index: 
        146: expr: 
         147: literal: 1
    148: block: 
     149: block_content: 
      150: expr_stmt: 
       151: expr: 
        152: name: cipher_len
        153: operator: =
        154: name: 
         155: name: in
         156: index: 
          157: expr: 
           158: literal: 2
      159: expr_stmt: 
       160: expr: 
        161: name: i
        162: operator: =
        163: literal: 4
   164: if: 
    165: condition: 
     166: expr: 
      167: literal: 0x01
      168: operator: ==
      169: name: 
       170: name: in
       171: index: 
        172: expr: 
         173: literal: 4
      174: operator: &&
      175: literal: 0x82
      176: operator: ==
      177: name: 
       178: name: in
       179: index: 
        180: expr: 
         181: literal: 1
    182: block: 
     183: block_content: 
      184: expr_stmt: 
       185: expr: 
        186: name: cipher_len
        187: operator: =
        188: name: 
         189: name: in
         190: index: 
          191: expr: 
           192: literal: 2
        193: operator: *
        194: literal: 0x100
      195: expr_stmt: 
       196: expr: 
        197: name: cipher_len
        198: operator: +=
        199: name: 
         200: name: in
         201: index: 
          202: expr: 
           203: literal: 3
      204: expr_stmt: 
       205: expr: 
        206: name: i
        207: operator: =
        208: literal: 5
   209: else: 
    210: block: 
     211: block_content: 
      212: return: 
       213: expr: 
        214: operator: -
        215: literal: 1
  216: if_stmt: 
   217: if: 
    218: condition: 
     219: expr: 
      220: name: 
       221: name: cipher_len
       222: argument_list: 
        223: argument: 
         224: expr: 
          225: literal: 2
          226: operator: ||
          227: name: i
          228: operator: +
          229: name: cipher_len
      230: name: inlen
      231: operator: ||
      232: name: cipher_len
      233: operator: >
      234: sizeof: 
       235: name: plaintext
    236: block: 
     237: block_content: 
      238: return: 
       239: expr: 
        240: operator: -
        241: literal: 1
  242: comment: /* decrypt */
  243: if_stmt: 
   244: if: 
    245: condition: 
     246: expr: 
      247: name: KEY_TYPE_AES
      248: operator: ==
      249: name: 
       250: name: exdata
       251: operator: ->
       252: name: smtype
    253: block: 
     254: block_content: 
      255: expr_stmt: 
       256: expr: 
        257: call: 
         258: name: aes128_decrypt_cbc
         259: argument_list: 
          260: argument: 
           261: expr: 
            262: name: 
             263: name: exdata
             264: operator: ->
             265: name: sk_enc
          266: argument: 
           267: expr: 
            268: literal: 16
          269: argument: 
           270: expr: 
            271: name: iv
          272: argument: 
           273: expr: 
            274: operator: &
            275: name: 
             276: name: in
             277: index: 
              278: expr: 
               279: name: i
          280: argument: 
           281: expr: 
            282: name: cipher_len
            283: operator: -
            284: literal: 1
          285: argument: 
           286: expr: 
            287: name: plaintext
   288: else: 
    289: block: 
     290: block_content: 
      291: expr_stmt: 
       292: expr: 
        293: call: 
         294: name: des3_decrypt_cbc
         295: argument_list: 
          296: argument: 
           297: expr: 
            298: name: 
             299: name: exdata
             300: operator: ->
             301: name: sk_enc
          302: argument: 
           303: expr: 
            304: literal: 16
          305: argument: 
           306: expr: 
            307: name: iv
          308: argument: 
           309: expr: 
            310: operator: &
            311: name: 
             312: name: in
             313: index: 
              314: expr: 
               315: name: i
          316: argument: 
           317: expr: 
            318: name: cipher_len
            319: operator: -
            320: literal: 1
          321: argument: 
           322: expr: 
            323: name: plaintext
  324: comment: /* unpadding */
  325: while: 
   326: condition: 
    327: expr: 
     328: literal: 0x80
     329: operator: !=
     330: name: 
      331: name: plaintext
      332: index: 
       333: expr: 
        334: name: cipher_len
        335: operator: -
        336: literal: 2
     337: operator: &&
     338: operator: (
     339: name: cipher_len
     340: operator: -
     341: literal: 2
     342: operator: >
     343: literal: 0
     344: operator: )
   345: block: 
    346: block_content: 
     347: expr_stmt: 
      348: expr: 
       349: name: cipher_len
       350: operator: --
  351: if_stmt: 
   352: if: 
    353: condition: 
     354: expr: 
      355: literal: 2
      356: operator: ==
      357: name: cipher_len
      358: operator: ||
      359: operator: *
      360: name: out_len
      361: operator: <
      362: name: cipher_len
      363: operator: -
      364: literal: 2
    365: block: 
     366: block_content: 
      367: return: 
       368: expr: 
        369: operator: -
        370: literal: 1
  371: expr_stmt: 
   372: expr: 
    373: call: 
     374: name: memcpy
     375: argument_list: 
      376: argument: 
       377: expr: 
        378: name: out
      379: argument: 
       380: expr: 
        381: name: plaintext
      382: argument: 
       383: expr: 
        384: name: cipher_len
        385: operator: -
        386: literal: 2
  387: expr_stmt: 
   388: expr: 
    389: operator: *
    390: name: out_len
    391: operator: =
    392: name: cipher_len
    393: operator: -
    394: literal: 2
  395: return: 
   396: expr: 
    397: literal: 0
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: size_t
   5: name: cipher_len
 6: decl_stmt: 
  7: decl: 
   8: type: 
    9: name: size_t
   10: name: i
 11: decl_stmt: 
  12: decl: 
   13: type: 
    14: name: unsigned
    15: name: char
   16: name: 
    17: name: iv
    18: index: 
     19: expr: 
      20: literal: 16
   21: init: 
    22: expr: 
     23: block: 
      24: expr: 
       25: literal: 0
 26: decl_stmt: 
  27: decl: 
   28: type: 
    29: name: unsigned
    30: name: char
   31: name: 
    32: name: plaintext
    33: index: 
     34: expr: 
      35: literal: 4096
   36: init: 
    37: expr: 
     38: block: 
      39: expr: 
       40: literal: 0
 41: decl_stmt: 
  42: decl: 
   43: type: 
    44: name: epass2003_exdata
    45: modifier: *
   46: name: exdata
   47: init: 
    48: expr: 
     49: name: NULL
 50: if_stmt: 
  51: if: 
   52: condition: 
    53: expr: 
     54: operator: !
     55: name: 
      56: name: card
      57: operator: ->
      58: name: drv_data
   59: block: 
    60: block_content: 
     61: return: 
      62: expr: 
       63: name: SC_ERROR_INVALID_ARGUMENTS
 64: expr_stmt: 
  65: expr: 
   66: name: exdata
   67: operator: =
   68: operator: (
   69: name: epass2003_exdata
   70: operator: *
   71: operator: )
   72: name: 
    73: name: card
    74: operator: ->
    75: name: drv_data
 76: comment: /* no cipher */
 77: if_stmt: 
  78: if: 
   79: condition: 
    80: expr: 
     81: name: 
      82: name: in
      83: index: 
       84: expr: 
        85: literal: 0
     86: operator: ==
     87: literal: 0x99
   88: block: 
    89: block_content: 
     90: return: 
      91: expr: 
       92: literal: 0
 93: comment: /* parse cipher length */
 94: if_stmt: 
  95: if: 
   96: condition: 
    97: expr: 
     98: literal: 0x01
     99: operator: ==
     100: name: 
      101: name: in
      102: index: 
       103: expr: 
        104: literal: 2
     105: operator: &&
     106: literal: 0x82
     107: operator: !=
     108: name: 
      109: name: in
      110: index: 
       111: expr: 
        112: literal: 1
   113: block: 
    114: block_content: 
     115: expr_stmt: 
      116: expr: 
       117: name: cipher_len
       118: operator: =
       119: name: 
        120: name: in
        121: index: 
         122: expr: 
          123: literal: 1
     124: expr_stmt: 
      125: expr: 
       126: name: i
       127: operator: =
       128: literal: 3
  129: if: 
   130: condition: 
    131: expr: 
     132: literal: 0x01
     133: operator: ==
     134: name: 
      135: name: in
      136: index: 
       137: expr: 
        138: literal: 3
     139: operator: &&
     140: literal: 0x81
     141: operator: ==
     142: name: 
      143: name: in
      144: index: 
       145: expr: 
        146: literal: 1
   147: block: 
    148: block_content: 
     149: expr_stmt: 
      150: expr: 
       151: name: cipher_len
       152: operator: =
       153: name: 
        154: name: in
        155: index: 
         156: expr: 
          157: literal: 2
     158: expr_stmt: 
      159: expr: 
       160: name: i
       161: operator: =
       162: literal: 4
  163: if: 
   164: condition: 
    165: expr: 
     166: literal: 0x01
     167: operator: ==
     168: name: 
      169: name: in
      170: index: 
       171: expr: 
        172: literal: 4
     173: operator: &&
     174: literal: 0x82
     175: operator: ==
     176: name: 
      177: name: in
      178: index: 
       179: expr: 
        180: literal: 1
   181: block: 
    182: block_content: 
     183: expr_stmt: 
      184: expr: 
       185: name: cipher_len
       186: operator: =
       187: name: 
        188: name: in
        189: index: 
         190: expr: 
          191: literal: 2
       192: operator: *
       193: literal: 0x100
     194: expr_stmt: 
      195: expr: 
       196: name: cipher_len
       197: operator: +=
       198: name: 
        199: name: in
        200: index: 
         201: expr: 
          202: literal: 3
     203: expr_stmt: 
      204: expr: 
       205: name: i
       206: operator: =
       207: literal: 5
  208: else: 
   209: block: 
    210: block_content: 
     211: return: 
      212: expr: 
       213: operator: -
       214: literal: 1
 215: if_stmt: 
  216: if: 
   217: condition: 
    218: expr: 
     219: name: 
      220: name: cipher_len
      221: argument_list: 
       222: argument: 
        223: expr: 
         224: literal: 2
         225: operator: ||
         226: name: i
         227: operator: +
         228: name: cipher_len
     229: name: inlen
     230: operator: ||
     231: name: cipher_len
     232: operator: >
     233: sizeof: 
      234: name: plaintext
   235: block: 
    236: block_content: 
     237: return: 
      238: expr: 
       239: operator: -
       240: literal: 1
 241: comment: /* decrypt */
 242: if_stmt: 
  243: if: 
   244: condition: 
    245: expr: 
     246: name: KEY_TYPE_AES
     247: operator: ==
     248: name: 
      249: name: exdata
      250: operator: ->
      251: name: smtype
   252: block: 
    253: block_content: 
     254: expr_stmt: 
      255: expr: 
       256: call: 
        257: name: aes128_decrypt_cbc
        258: argument_list: 
         259: argument: 
          260: expr: 
           261: name: 
            262: name: exdata
            263: operator: ->
            264: name: sk_enc
         265: argument: 
          266: expr: 
           267: literal: 16
         268: argument: 
          269: expr: 
           270: name: iv
         271: argument: 
          272: expr: 
           273: operator: &
           274: name: 
            275: name: in
            276: index: 
             277: expr: 
              278: name: i
         279: argument: 
          280: expr: 
           281: name: cipher_len
           282: operator: -
           283: literal: 1
         284: argument: 
          285: expr: 
           286: name: plaintext
  287: else: 
   288: block: 
    289: block_content: 
     290: expr_stmt: 
      291: expr: 
       292: call: 
        293: name: des3_decrypt_cbc
        294: argument_list: 
         295: argument: 
          296: expr: 
           297: name: 
            298: name: exdata
            299: operator: ->
            300: name: sk_enc
         301: argument: 
          302: expr: 
           303: literal: 16
         304: argument: 
          305: expr: 
           306: name: iv
         307: argument: 
          308: expr: 
           309: operator: &
           310: name: 
            311: name: in
            312: index: 
             313: expr: 
              314: name: i
         315: argument: 
          316: expr: 
           317: name: cipher_len
           318: operator: -
           319: literal: 1
         320: argument: 
          321: expr: 
           322: name: plaintext
 323: comment: /* unpadding */
 324: while: 
  325: condition: 
   326: expr: 
    327: literal: 0x80
    328: operator: !=
    329: name: 
     330: name: plaintext
     331: index: 
      332: expr: 
       333: name: cipher_len
       334: operator: -
       335: literal: 2
    336: operator: &&
    337: operator: (
    338: name: cipher_len
    339: operator: -
    340: literal: 2
    341: operator: >
    342: literal: 0
    343: operator: )
  344: block: 
   345: block_content: 
    346: expr_stmt: 
     347: expr: 
      348: name: cipher_len
      349: operator: --
 350: if_stmt: 
  351: if: 
   352: condition: 
    353: expr: 
     354: literal: 2
     355: operator: ==
     356: name: cipher_len
   357: block: 
    358: block_content: 
     359: return: 
      360: expr: 
       361: operator: -
       362: literal: 1
 363: expr_stmt: 
  364: expr: 
   365: call: 
    366: name: memcpy
    367: argument_list: 
     368: argument: 
      369: expr: 
       370: name: out
     371: argument: 
      372: expr: 
       373: name: plaintext
     374: argument: 
      375: expr: 
       376: name: cipher_len
       377: operator: -
       378: literal: 2
 379: expr_stmt: 
  380: expr: 
   381: operator: *
   382: name: out_len
   383: operator: =
   384: name: cipher_len
   385: operator: -
   386: literal: 2
 387: return: 
  388: expr: 
   389: literal: 0

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: size_t
   5: name: cipher_len
 6: decl_stmt: 
  7: decl: 
   8: type: 
    9: name: size_t
   10: name: i
 11: decl_stmt: 
  12: decl: 
   13: type: 
    14: name: unsigned
    15: name: char
   16: name: 
    17: name: iv
    18: index: 
     19: expr: 
      20: literal: 16
   21: init: 
    22: expr: 
     23: block: 
      24: expr: 
       25: literal: 0
 26: decl_stmt: 
  27: decl: 
   28: type: 
    29: name: unsigned
    30: name: char
   31: name: 
    32: name: plaintext
    33: index: 
     34: expr: 
      35: literal: 4096
   36: init: 
    37: expr: 
     38: block: 
      39: expr: 
       40: literal: 0
 41: decl_stmt: 
  42: decl: 
   43: type: 
    44: name: epass2003_exdata
    45: modifier: *
   46: name: exdata
   47: init: 
    48: expr: 
     49: name: NULL
 50: if_stmt: 
  51: if: 
   52: condition: 
    53: expr: 
     54: operator: !
     55: name: 
      56: name: card
      57: operator: ->
      58: name: drv_data
   59: block: 
    60: block_content: 
     61: return: 
      62: expr: 
       63: name: SC_ERROR_INVALID_ARGUMENTS
 64: expr_stmt: 
  65: expr: 
   66: name: exdata
   67: operator: =
   68: operator: (
   69: name: epass2003_exdata
   70: operator: *
   71: operator: )
   72: name: 
    73: name: card
    74: operator: ->
    75: name: drv_data
 76: comment: /* no cipher */
 77: if_stmt: 
  78: if: 
   79: condition: 
    80: expr: 
     81: name: 
      82: name: in
      83: index: 
       84: expr: 
        85: literal: 0
     86: operator: ==
     87: literal: 0x99
   88: block: 
    89: block_content: 
     90: return: 
      91: expr: 
       92: literal: 0
 93: comment: /* parse cipher length */
 94: if_stmt: 
  95: if: 
   96: condition: 
    97: expr: 
     98: literal: 0x01
     99: operator: ==
     100: name: 
      101: name: in
      102: index: 
       103: expr: 
        104: literal: 2
     105: operator: &&
     106: literal: 0x82
     107: operator: !=
     108: name: 
      109: name: in
      110: index: 
       111: expr: 
        112: literal: 1
   113: block: 
    114: block_content: 
     115: expr_stmt: 
      116: expr: 
       117: name: cipher_len
       118: operator: =
       119: name: 
        120: name: in
        121: index: 
         122: expr: 
          123: literal: 1
     124: expr_stmt: 
      125: expr: 
       126: name: i
       127: operator: =
       128: literal: 3
  129: if: 
   130: condition: 
    131: expr: 
     132: literal: 0x01
     133: operator: ==
     134: name: 
      135: name: in
      136: index: 
       137: expr: 
        138: literal: 3
     139: operator: &&
     140: literal: 0x81
     141: operator: ==
     142: name: 
      143: name: in
      144: index: 
       145: expr: 
        146: literal: 1
   147: block: 
    148: block_content: 
     149: expr_stmt: 
      150: expr: 
       151: name: cipher_len
       152: operator: =
       153: name: 
        154: name: in
        155: index: 
         156: expr: 
          157: literal: 2
     158: expr_stmt: 
      159: expr: 
       160: name: i
       161: operator: =
       162: literal: 4
  163: if: 
   164: condition: 
    165: expr: 
     166: literal: 0x01
     167: operator: ==
     168: name: 
      169: name: in
      170: index: 
       171: expr: 
        172: literal: 4
     173: operator: &&
     174: literal: 0x82
     175: operator: ==
     176: name: 
      177: name: in
      178: index: 
       179: expr: 
        180: literal: 1
   181: block: 
    182: block_content: 
     183: expr_stmt: 
      184: expr: 
       185: name: cipher_len
       186: operator: =
       187: name: 
        188: name: in
        189: index: 
         190: expr: 
          191: literal: 2
       192: operator: *
       193: literal: 0x100
     194: expr_stmt: 
      195: expr: 
       196: name: cipher_len
       197: operator: +=
       198: name: 
        199: name: in
        200: index: 
         201: expr: 
          202: literal: 3
     203: expr_stmt: 
      204: expr: 
       205: name: i
       206: operator: =
       207: literal: 5
  208: else: 
   209: block: 
    210: block_content: 
     211: return: 
      212: expr: 
       213: operator: -
       214: literal: 1
 215: if_stmt: 
  216: if: 
   217: condition: 
    218: expr: 
     219: name: 
      220: name: cipher_len
      221: argument_list: 
       222: argument: 
        223: expr: 
         224: literal: 2
         225: operator: ||
         226: name: i
         227: operator: +
         228: name: cipher_len
     229: name: inlen
     230: operator: ||
     231: name: cipher_len
     232: operator: >
     233: sizeof: 
      234: name: plaintext
   235: block: 
    236: block_content: 
     237: return: 
      238: expr: 
       239: operator: -
       240: literal: 1
 241: comment: /* decrypt */
 242: if_stmt: 
  243: if: 
   244: condition: 
    245: expr: 
     246: name: KEY_TYPE_AES
     247: operator: ==
     248: name: 
      249: name: exdata
      250: operator: ->
      251: name: smtype
   252: block: 
    253: block_content: 
     254: expr_stmt: 
      255: expr: 
       256: call: 
        257: name: aes128_decrypt_cbc
        258: argument_list: 
         259: argument: 
          260: expr: 
           261: name: 
            262: name: exdata
            263: operator: ->
            264: name: sk_enc
         265: argument: 
          266: expr: 
           267: literal: 16
         268: argument: 
          269: expr: 
           270: name: iv
         271: argument: 
          272: expr: 
           273: operator: &
           274: name: 
            275: name: in
            276: index: 
             277: expr: 
              278: name: i
         279: argument: 
          280: expr: 
           281: name: cipher_len
           282: operator: -
           283: literal: 1
         284: argument: 
          285: expr: 
           286: name: plaintext
  287: else: 
   288: block: 
    289: block_content: 
     290: expr_stmt: 
      291: expr: 
       292: call: 
        293: name: des3_decrypt_cbc
        294: argument_list: 
         295: argument: 
          296: expr: 
           297: name: 
            298: name: exdata
            299: operator: ->
            300: name: sk_enc
         301: argument: 
          302: expr: 
           303: literal: 16
         304: argument: 
          305: expr: 
           306: name: iv
         307: argument: 
          308: expr: 
           309: operator: &
           310: name: 
            311: name: in
            312: index: 
             313: expr: 
              314: name: i
         315: argument: 
          316: expr: 
           317: name: cipher_len
           318: operator: -
           319: literal: 1
         320: argument: 
          321: expr: 
           322: name: plaintext
 323: comment: /* unpadding */
 324: while: 
  325: condition: 
   326: expr: 
    327: literal: 0x80
    328: operator: !=
    329: name: 
     330: name: plaintext
     331: index: 
      332: expr: 
       333: name: cipher_len
       334: operator: -
       335: literal: 2
    336: operator: &&
    337: operator: (
    338: name: cipher_len
    339: operator: -
    340: literal: 2
    341: operator: >
    342: literal: 0
    343: operator: )
  344: block: 
   345: block_content: 
    346: expr_stmt: 
     347: expr: 
      348: name: cipher_len
      349: operator: --
 350: if_stmt: 
  351: if: 
   352: condition: 
    353: expr: 
     354: literal: 2
     355: operator: ==
     356: name: cipher_len
     357: operator: ||
     358: operator: *
     359: name: out_len
     360: operator: <
     361: name: cipher_len
     362: operator: -
     363: literal: 2
   364: block: 
    365: block_content: 
     366: return: 
      367: expr: 
       368: operator: -
       369: literal: 1
 370: expr_stmt: 
  371: expr: 
   372: call: 
    373: name: memcpy
    374: argument_list: 
     375: argument: 
      376: expr: 
       377: name: out
     378: argument: 
      379: expr: 
       380: name: plaintext
     381: argument: 
      382: expr: 
       383: name: cipher_len
       384: operator: -
       385: literal: 2
 386: expr_stmt: 
  387: expr: 
   388: operator: *
   389: name: out_len
   390: operator: =
   391: name: cipher_len
   392: operator: -
   393: literal: 2
 394: return: 
  395: expr: 
   396: literal: 0
=====
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: literal: 2
    5: operator: ==
    6: name: cipher_len
  7: block: 
   8: block_content: 
    9: return: 
     10: expr: 
      11: operator: -
      12: literal: 1

----------------------------------------
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: literal: 2
    5: operator: ==
    6: name: cipher_len
    7: operator: ||
    8: operator: *
    9: name: out_len
    10: operator: <
    11: name: cipher_len
    12: operator: -
    13: literal: 2
  14: block: 
   15: block_content: 
    16: return: 
     17: expr: 
      18: operator: -
      19: literal: 1
=====
0: if: 
 1: condition: 
  2: expr: 
   3: literal: 2
   4: operator: ==
   5: name: cipher_len
 6: block: 
  7: block_content: 
   8: return: 
    9: expr: 
     10: operator: -
     11: literal: 1

----------------------------------------
0: if: 
 1: condition: 
  2: expr: 
   3: literal: 2
   4: operator: ==
   5: name: cipher_len
   6: operator: ||
   7: operator: *
   8: name: out_len
   9: operator: <
   10: name: cipher_len
   11: operator: -
   12: literal: 2
 13: block: 
  14: block_content: 
   15: return: 
    16: expr: 
     17: operator: -
     18: literal: 1
=====
0: condition: 
 1: expr: 
  2: literal: 2
  3: operator: ==
  4: name: cipher_len

----------------------------------------
0: condition: 
 1: expr: 
  2: literal: 2
  3: operator: ==
  4: name: cipher_len
  5: operator: ||
  6: operator: *
  7: name: out_len
  8: operator: <
  9: name: cipher_len
  10: operator: -
  11: literal: 2
=====
0: expr: 
 1: literal: 2
 2: operator: ==
 3: name: cipher_len

----------------------------------------
0: expr: 
 1: literal: 2
 2: operator: ==
 3: name: cipher_len
 4: operator: ||
 5: operator: *
 6: name: out_len
 7: operator: <
 8: name: cipher_len
 9: operator: -
 10: literal: 2
=====
