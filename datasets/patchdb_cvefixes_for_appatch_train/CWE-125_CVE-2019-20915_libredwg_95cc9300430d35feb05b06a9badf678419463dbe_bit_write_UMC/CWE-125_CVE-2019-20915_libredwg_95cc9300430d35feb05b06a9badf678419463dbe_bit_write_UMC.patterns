0: unit: 
 1: macro: 
  2: name: bit_write_UMC
  3: argument_list: 
   4: argument: 
   5: argument: 
 6: block: 
  7: block_content: 
   8: decl_stmt: 
    9: decl: 
     10: type: 
      11: name: int
     12: name: i
    13: decl: 
     14: type: 
     15: name: j
   16: decl_stmt: 
    17: decl: 
     18: type: 
      19: name: int
     20: name: negative
   21: decl_stmt: 
    22: decl: 
     23: type: 
      24: name: unsigned
      25: name: char
     26: name: 
      27: name: byte
      28: index: 
       29: expr: 
        30: literal: 5
   31: decl_stmt: 
    32: decl: 
     33: type: 
      34: name: BITCODE_UMC
     35: name: mask
   36: decl_stmt: 
    37: decl: 
     38: type: 
      39: name: BITCODE_UMC
     40: name: value
   41: expr_stmt: 
    42: expr: 
     43: name: value
     44: operator: =
     45: name: val
   46: expr_stmt: 
    47: expr: 
     48: name: mask
     49: operator: =
     50: literal: 0x0000007f
   51: for: 
    52: control: 
     53: init: 
      54: expr: 
       55: name: i
       56: operator: =
       57: literal: 4
      58: operator: ,
      59: expr: 
       60: name: j
       61: operator: =
       62: literal: 0
     63: condition: 
      64: expr: 
       65: name: i
       66: operator: >=
       67: literal: 0
     68: incr: 
      69: expr: 
       70: name: i
       71: operator: --
      72: operator: ,
      73: expr: 
       74: name: j
       75: operator: +=
       76: literal: 7
    77: block: 
     78: block_content: 
      79: expr_stmt: 
       80: expr: 
        81: name: 
         82: name: byte
         83: index: 
          84: expr: 
           85: name: i
        86: operator: =
        87: operator: (
        88: name: unsigned
        89: name: char
        90: operator: )
        91: operator: (
        92: operator: (
        93: name: value
        94: operator: &
        95: name: mask
        96: operator: )
        97: operator: >>
        98: name: j
        99: operator: )
      100: expr_stmt: 
       101: expr: 
        102: name: 
         103: name: byte
         104: index: 
          105: expr: 
           106: name: i
        107: operator: |=
        108: literal: 0x80
      109: expr_stmt: 
       110: expr: 
        111: name: mask
        112: operator: =
        113: name: mask
        114: operator: <<
        115: literal: 7
   116: for: 
    117: control: 
     118: init: 
      119: expr: 
       120: name: i
       121: operator: =
       122: literal: 0
     123: condition: 
      124: expr: 
       125: name: i
       126: operator: <
       127: literal: 4
     128: incr: 
      129: expr: 
       130: name: i
       131: operator: ++
    132: block: 
     133: block_content: 
      134: if_stmt: 
       135: if: 
        136: condition: 
         137: expr: 
          138: name: 
           139: name: byte
           140: index: 
            141: expr: 
             142: name: i
          143: operator: &
          144: literal: 0x7f
        145: block: 
         146: block_content: 
          147: break: 
   148: if_stmt: 
    149: if: 
     150: condition: 
      151: expr: 
       152: name: 
        153: name: byte
        154: index: 
         155: expr: 
          156: name: i
       157: operator: &
       158: literal: 0x40
     159: block: 
      160: block_content: 
       161: expr_stmt: 
        162: expr: 
         163: name: i
         164: operator: --
   165: expr_stmt: 
    166: expr: 
     167: name: 
      168: name: byte
      169: index: 
       170: expr: 
        171: name: i
     172: operator: &=
     173: literal: 0x7f
   174: for: 
    175: control: 
     176: init: 
      177: expr: 
       178: name: j
       179: operator: =
       180: literal: 4
     181: condition: 
      182: expr: 
       183: name: j
       184: operator: >=
       185: name: i
     186: incr: 
      187: expr: 
       188: name: j
       189: operator: --
    190: block: 
     191: block_content: 
      192: expr_stmt: 
       193: expr: 
        194: call: 
         195: name: bit_write_RC
         196: argument_list: 
          197: argument: 
           198: expr: 
            199: name: dat
          200: argument: 
           201: expr: 
            202: name: 
             203: name: byte
             204: index: 
              205: expr: 
               206: name: j

----------------------------------------
0: unit: 
 1: macro: 
  2: name: bit_write_UMC
  3: argument_list: 
   4: argument: 
   5: argument: 
 6: block: 
  7: block_content: 
   8: decl_stmt: 
    9: decl: 
     10: type: 
      11: name: int
     12: name: i
    13: decl: 
     14: type: 
     15: name: j
   16: decl_stmt: 
    17: decl: 
     18: type: 
      19: name: int
     20: name: negative
   21: decl_stmt: 
    22: decl: 
     23: type: 
      24: name: unsigned
      25: name: char
     26: name: 
      27: name: byte
      28: index: 
       29: expr: 
        30: literal: 5
   31: decl_stmt: 
    32: decl: 
     33: type: 
      34: name: BITCODE_UMC
     35: name: mask
   36: decl_stmt: 
    37: decl: 
     38: type: 
      39: name: BITCODE_UMC
     40: name: value
   41: expr_stmt: 
    42: expr: 
     43: name: value
     44: operator: =
     45: name: val
   46: expr_stmt: 
    47: expr: 
     48: name: mask
     49: operator: =
     50: literal: 0x0000007f
   51: for: 
    52: control: 
     53: init: 
      54: expr: 
       55: name: i
       56: operator: =
       57: literal: 4
      58: operator: ,
      59: expr: 
       60: name: j
       61: operator: =
       62: literal: 0
     63: condition: 
      64: expr: 
       65: name: i
       66: operator: >=
       67: literal: 0
     68: incr: 
      69: expr: 
       70: name: i
       71: operator: --
      72: operator: ,
      73: expr: 
       74: name: j
       75: operator: +=
       76: literal: 7
    77: block: 
     78: block_content: 
      79: expr_stmt: 
       80: expr: 
        81: name: 
         82: name: byte
         83: index: 
          84: expr: 
           85: name: i
        86: operator: =
        87: operator: (
        88: name: unsigned
        89: name: char
        90: operator: )
        91: operator: (
        92: operator: (
        93: name: value
        94: operator: &
        95: name: mask
        96: operator: )
        97: operator: >>
        98: name: j
        99: operator: )
      100: expr_stmt: 
       101: expr: 
        102: name: 
         103: name: byte
         104: index: 
          105: expr: 
           106: name: i
        107: operator: |=
        108: literal: 0x80
      109: expr_stmt: 
       110: expr: 
        111: name: mask
        112: operator: =
        113: name: mask
        114: operator: <<
        115: literal: 7
   116: for: 
    117: control: 
     118: init: 
      119: expr: 
       120: name: i
       121: operator: =
       122: literal: 0
     123: condition: 
      124: expr: 
       125: name: i
       126: operator: <
       127: literal: 4
     128: incr: 
      129: expr: 
       130: name: i
       131: operator: ++
    132: block: 
     133: block_content: 
      134: if_stmt: 
       135: if: 
        136: condition: 
         137: expr: 
          138: name: 
           139: name: byte
           140: index: 
            141: expr: 
             142: name: i
          143: operator: &
          144: literal: 0x7f
        145: block: 
         146: block_content: 
          147: break: 
   148: if_stmt: 
    149: if: 
     150: condition: 
      151: expr: 
       152: name: 
        153: name: byte
        154: index: 
         155: expr: 
          156: name: i
       157: operator: &
       158: literal: 0x40
       159: operator: &&
       160: name: i
       161: operator: >
       162: literal: 0
     163: block: 
      164: block_content: 
       165: expr_stmt: 
        166: expr: 
         167: name: i
         168: operator: --
   169: expr_stmt: 
    170: expr: 
     171: name: 
      172: name: byte
      173: index: 
       174: expr: 
        175: name: i
     176: operator: &=
     177: literal: 0x7f
   178: for: 
    179: control: 
     180: init: 
      181: expr: 
       182: name: j
       183: operator: =
       184: literal: 4
     185: condition: 
      186: expr: 
       187: name: j
       188: operator: >=
       189: name: i
     190: incr: 
      191: expr: 
       192: name: j
       193: operator: --
    194: block: 
     195: block_content: 
      196: expr_stmt: 
       197: expr: 
        198: call: 
         199: name: bit_write_RC
         200: argument_list: 
          201: argument: 
           202: expr: 
            203: name: dat
          204: argument: 
           205: expr: 
            206: name: 
             207: name: byte
             208: index: 
              209: expr: 
               210: name: j
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: i
   7: decl: 
    8: type: 
    9: name: j
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: int
    14: name: negative
  15: decl_stmt: 
   16: decl: 
    17: type: 
     18: name: unsigned
     19: name: char
    20: name: 
     21: name: byte
     22: index: 
      23: expr: 
       24: literal: 5
  25: decl_stmt: 
   26: decl: 
    27: type: 
     28: name: BITCODE_UMC
    29: name: mask
  30: decl_stmt: 
   31: decl: 
    32: type: 
     33: name: BITCODE_UMC
    34: name: value
  35: expr_stmt: 
   36: expr: 
    37: name: value
    38: operator: =
    39: name: val
  40: expr_stmt: 
   41: expr: 
    42: name: mask
    43: operator: =
    44: literal: 0x0000007f
  45: for: 
   46: control: 
    47: init: 
     48: expr: 
      49: name: i
      50: operator: =
      51: literal: 4
     52: operator: ,
     53: expr: 
      54: name: j
      55: operator: =
      56: literal: 0
    57: condition: 
     58: expr: 
      59: name: i
      60: operator: >=
      61: literal: 0
    62: incr: 
     63: expr: 
      64: name: i
      65: operator: --
     66: operator: ,
     67: expr: 
      68: name: j
      69: operator: +=
      70: literal: 7
   71: block: 
    72: block_content: 
     73: expr_stmt: 
      74: expr: 
       75: name: 
        76: name: byte
        77: index: 
         78: expr: 
          79: name: i
       80: operator: =
       81: operator: (
       82: name: unsigned
       83: name: char
       84: operator: )
       85: operator: (
       86: operator: (
       87: name: value
       88: operator: &
       89: name: mask
       90: operator: )
       91: operator: >>
       92: name: j
       93: operator: )
     94: expr_stmt: 
      95: expr: 
       96: name: 
        97: name: byte
        98: index: 
         99: expr: 
          100: name: i
       101: operator: |=
       102: literal: 0x80
     103: expr_stmt: 
      104: expr: 
       105: name: mask
       106: operator: =
       107: name: mask
       108: operator: <<
       109: literal: 7
  110: for: 
   111: control: 
    112: init: 
     113: expr: 
      114: name: i
      115: operator: =
      116: literal: 0
    117: condition: 
     118: expr: 
      119: name: i
      120: operator: <
      121: literal: 4
    122: incr: 
     123: expr: 
      124: name: i
      125: operator: ++
   126: block: 
    127: block_content: 
     128: if_stmt: 
      129: if: 
       130: condition: 
        131: expr: 
         132: name: 
          133: name: byte
          134: index: 
           135: expr: 
            136: name: i
         137: operator: &
         138: literal: 0x7f
       139: block: 
        140: block_content: 
         141: break: 
  142: if_stmt: 
   143: if: 
    144: condition: 
     145: expr: 
      146: name: 
       147: name: byte
       148: index: 
        149: expr: 
         150: name: i
      151: operator: &
      152: literal: 0x40
    153: block: 
     154: block_content: 
      155: expr_stmt: 
       156: expr: 
        157: name: i
        158: operator: --
  159: expr_stmt: 
   160: expr: 
    161: name: 
     162: name: byte
     163: index: 
      164: expr: 
       165: name: i
    166: operator: &=
    167: literal: 0x7f
  168: for: 
   169: control: 
    170: init: 
     171: expr: 
      172: name: j
      173: operator: =
      174: literal: 4
    175: condition: 
     176: expr: 
      177: name: j
      178: operator: >=
      179: name: i
    180: incr: 
     181: expr: 
      182: name: j
      183: operator: --
   184: block: 
    185: block_content: 
     186: expr_stmt: 
      187: expr: 
       188: call: 
        189: name: bit_write_RC
        190: argument_list: 
         191: argument: 
          192: expr: 
           193: name: dat
         194: argument: 
          195: expr: 
           196: name: 
            197: name: byte
            198: index: 
             199: expr: 
              200: name: j

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: i
   7: decl: 
    8: type: 
    9: name: j
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: int
    14: name: negative
  15: decl_stmt: 
   16: decl: 
    17: type: 
     18: name: unsigned
     19: name: char
    20: name: 
     21: name: byte
     22: index: 
      23: expr: 
       24: literal: 5
  25: decl_stmt: 
   26: decl: 
    27: type: 
     28: name: BITCODE_UMC
    29: name: mask
  30: decl_stmt: 
   31: decl: 
    32: type: 
     33: name: BITCODE_UMC
    34: name: value
  35: expr_stmt: 
   36: expr: 
    37: name: value
    38: operator: =
    39: name: val
  40: expr_stmt: 
   41: expr: 
    42: name: mask
    43: operator: =
    44: literal: 0x0000007f
  45: for: 
   46: control: 
    47: init: 
     48: expr: 
      49: name: i
      50: operator: =
      51: literal: 4
     52: operator: ,
     53: expr: 
      54: name: j
      55: operator: =
      56: literal: 0
    57: condition: 
     58: expr: 
      59: name: i
      60: operator: >=
      61: literal: 0
    62: incr: 
     63: expr: 
      64: name: i
      65: operator: --
     66: operator: ,
     67: expr: 
      68: name: j
      69: operator: +=
      70: literal: 7
   71: block: 
    72: block_content: 
     73: expr_stmt: 
      74: expr: 
       75: name: 
        76: name: byte
        77: index: 
         78: expr: 
          79: name: i
       80: operator: =
       81: operator: (
       82: name: unsigned
       83: name: char
       84: operator: )
       85: operator: (
       86: operator: (
       87: name: value
       88: operator: &
       89: name: mask
       90: operator: )
       91: operator: >>
       92: name: j
       93: operator: )
     94: expr_stmt: 
      95: expr: 
       96: name: 
        97: name: byte
        98: index: 
         99: expr: 
          100: name: i
       101: operator: |=
       102: literal: 0x80
     103: expr_stmt: 
      104: expr: 
       105: name: mask
       106: operator: =
       107: name: mask
       108: operator: <<
       109: literal: 7
  110: for: 
   111: control: 
    112: init: 
     113: expr: 
      114: name: i
      115: operator: =
      116: literal: 0
    117: condition: 
     118: expr: 
      119: name: i
      120: operator: <
      121: literal: 4
    122: incr: 
     123: expr: 
      124: name: i
      125: operator: ++
   126: block: 
    127: block_content: 
     128: if_stmt: 
      129: if: 
       130: condition: 
        131: expr: 
         132: name: 
          133: name: byte
          134: index: 
           135: expr: 
            136: name: i
         137: operator: &
         138: literal: 0x7f
       139: block: 
        140: block_content: 
         141: break: 
  142: if_stmt: 
   143: if: 
    144: condition: 
     145: expr: 
      146: name: 
       147: name: byte
       148: index: 
        149: expr: 
         150: name: i
      151: operator: &
      152: literal: 0x40
      153: operator: &&
      154: name: i
      155: operator: >
      156: literal: 0
    157: block: 
     158: block_content: 
      159: expr_stmt: 
       160: expr: 
        161: name: i
        162: operator: --
  163: expr_stmt: 
   164: expr: 
    165: name: 
     166: name: byte
     167: index: 
      168: expr: 
       169: name: i
    170: operator: &=
    171: literal: 0x7f
  172: for: 
   173: control: 
    174: init: 
     175: expr: 
      176: name: j
      177: operator: =
      178: literal: 4
    179: condition: 
     180: expr: 
      181: name: j
      182: operator: >=
      183: name: i
    184: incr: 
     185: expr: 
      186: name: j
      187: operator: --
   188: block: 
    189: block_content: 
     190: expr_stmt: 
      191: expr: 
       192: call: 
        193: name: bit_write_RC
        194: argument_list: 
         195: argument: 
          196: expr: 
           197: name: dat
         198: argument: 
          199: expr: 
           200: name: 
            201: name: byte
            202: index: 
             203: expr: 
              204: name: j
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: i
  6: decl: 
   7: type: 
   8: name: j
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: int
   13: name: negative
 14: decl_stmt: 
  15: decl: 
   16: type: 
    17: name: unsigned
    18: name: char
   19: name: 
    20: name: byte
    21: index: 
     22: expr: 
      23: literal: 5
 24: decl_stmt: 
  25: decl: 
   26: type: 
    27: name: BITCODE_UMC
   28: name: mask
 29: decl_stmt: 
  30: decl: 
   31: type: 
    32: name: BITCODE_UMC
   33: name: value
 34: expr_stmt: 
  35: expr: 
   36: name: value
   37: operator: =
   38: name: val
 39: expr_stmt: 
  40: expr: 
   41: name: mask
   42: operator: =
   43: literal: 0x0000007f
 44: for: 
  45: control: 
   46: init: 
    47: expr: 
     48: name: i
     49: operator: =
     50: literal: 4
    51: operator: ,
    52: expr: 
     53: name: j
     54: operator: =
     55: literal: 0
   56: condition: 
    57: expr: 
     58: name: i
     59: operator: >=
     60: literal: 0
   61: incr: 
    62: expr: 
     63: name: i
     64: operator: --
    65: operator: ,
    66: expr: 
     67: name: j
     68: operator: +=
     69: literal: 7
  70: block: 
   71: block_content: 
    72: expr_stmt: 
     73: expr: 
      74: name: 
       75: name: byte
       76: index: 
        77: expr: 
         78: name: i
      79: operator: =
      80: operator: (
      81: name: unsigned
      82: name: char
      83: operator: )
      84: operator: (
      85: operator: (
      86: name: value
      87: operator: &
      88: name: mask
      89: operator: )
      90: operator: >>
      91: name: j
      92: operator: )
    93: expr_stmt: 
     94: expr: 
      95: name: 
       96: name: byte
       97: index: 
        98: expr: 
         99: name: i
      100: operator: |=
      101: literal: 0x80
    102: expr_stmt: 
     103: expr: 
      104: name: mask
      105: operator: =
      106: name: mask
      107: operator: <<
      108: literal: 7
 109: for: 
  110: control: 
   111: init: 
    112: expr: 
     113: name: i
     114: operator: =
     115: literal: 0
   116: condition: 
    117: expr: 
     118: name: i
     119: operator: <
     120: literal: 4
   121: incr: 
    122: expr: 
     123: name: i
     124: operator: ++
  125: block: 
   126: block_content: 
    127: if_stmt: 
     128: if: 
      129: condition: 
       130: expr: 
        131: name: 
         132: name: byte
         133: index: 
          134: expr: 
           135: name: i
        136: operator: &
        137: literal: 0x7f
      138: block: 
       139: block_content: 
        140: break: 
 141: if_stmt: 
  142: if: 
   143: condition: 
    144: expr: 
     145: name: 
      146: name: byte
      147: index: 
       148: expr: 
        149: name: i
     150: operator: &
     151: literal: 0x40
   152: block: 
    153: block_content: 
     154: expr_stmt: 
      155: expr: 
       156: name: i
       157: operator: --
 158: expr_stmt: 
  159: expr: 
   160: name: 
    161: name: byte
    162: index: 
     163: expr: 
      164: name: i
   165: operator: &=
   166: literal: 0x7f
 167: for: 
  168: control: 
   169: init: 
    170: expr: 
     171: name: j
     172: operator: =
     173: literal: 4
   174: condition: 
    175: expr: 
     176: name: j
     177: operator: >=
     178: name: i
   179: incr: 
    180: expr: 
     181: name: j
     182: operator: --
  183: block: 
   184: block_content: 
    185: expr_stmt: 
     186: expr: 
      187: call: 
       188: name: bit_write_RC
       189: argument_list: 
        190: argument: 
         191: expr: 
          192: name: dat
        193: argument: 
         194: expr: 
          195: name: 
           196: name: byte
           197: index: 
            198: expr: 
             199: name: j

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: i
  6: decl: 
   7: type: 
   8: name: j
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: int
   13: name: negative
 14: decl_stmt: 
  15: decl: 
   16: type: 
    17: name: unsigned
    18: name: char
   19: name: 
    20: name: byte
    21: index: 
     22: expr: 
      23: literal: 5
 24: decl_stmt: 
  25: decl: 
   26: type: 
    27: name: BITCODE_UMC
   28: name: mask
 29: decl_stmt: 
  30: decl: 
   31: type: 
    32: name: BITCODE_UMC
   33: name: value
 34: expr_stmt: 
  35: expr: 
   36: name: value
   37: operator: =
   38: name: val
 39: expr_stmt: 
  40: expr: 
   41: name: mask
   42: operator: =
   43: literal: 0x0000007f
 44: for: 
  45: control: 
   46: init: 
    47: expr: 
     48: name: i
     49: operator: =
     50: literal: 4
    51: operator: ,
    52: expr: 
     53: name: j
     54: operator: =
     55: literal: 0
   56: condition: 
    57: expr: 
     58: name: i
     59: operator: >=
     60: literal: 0
   61: incr: 
    62: expr: 
     63: name: i
     64: operator: --
    65: operator: ,
    66: expr: 
     67: name: j
     68: operator: +=
     69: literal: 7
  70: block: 
   71: block_content: 
    72: expr_stmt: 
     73: expr: 
      74: name: 
       75: name: byte
       76: index: 
        77: expr: 
         78: name: i
      79: operator: =
      80: operator: (
      81: name: unsigned
      82: name: char
      83: operator: )
      84: operator: (
      85: operator: (
      86: name: value
      87: operator: &
      88: name: mask
      89: operator: )
      90: operator: >>
      91: name: j
      92: operator: )
    93: expr_stmt: 
     94: expr: 
      95: name: 
       96: name: byte
       97: index: 
        98: expr: 
         99: name: i
      100: operator: |=
      101: literal: 0x80
    102: expr_stmt: 
     103: expr: 
      104: name: mask
      105: operator: =
      106: name: mask
      107: operator: <<
      108: literal: 7
 109: for: 
  110: control: 
   111: init: 
    112: expr: 
     113: name: i
     114: operator: =
     115: literal: 0
   116: condition: 
    117: expr: 
     118: name: i
     119: operator: <
     120: literal: 4
   121: incr: 
    122: expr: 
     123: name: i
     124: operator: ++
  125: block: 
   126: block_content: 
    127: if_stmt: 
     128: if: 
      129: condition: 
       130: expr: 
        131: name: 
         132: name: byte
         133: index: 
          134: expr: 
           135: name: i
        136: operator: &
        137: literal: 0x7f
      138: block: 
       139: block_content: 
        140: break: 
 141: if_stmt: 
  142: if: 
   143: condition: 
    144: expr: 
     145: name: 
      146: name: byte
      147: index: 
       148: expr: 
        149: name: i
     150: operator: &
     151: literal: 0x40
     152: operator: &&
     153: name: i
     154: operator: >
     155: literal: 0
   156: block: 
    157: block_content: 
     158: expr_stmt: 
      159: expr: 
       160: name: i
       161: operator: --
 162: expr_stmt: 
  163: expr: 
   164: name: 
    165: name: byte
    166: index: 
     167: expr: 
      168: name: i
   169: operator: &=
   170: literal: 0x7f
 171: for: 
  172: control: 
   173: init: 
    174: expr: 
     175: name: j
     176: operator: =
     177: literal: 4
   178: condition: 
    179: expr: 
     180: name: j
     181: operator: >=
     182: name: i
   183: incr: 
    184: expr: 
     185: name: j
     186: operator: --
  187: block: 
   188: block_content: 
    189: expr_stmt: 
     190: expr: 
      191: call: 
       192: name: bit_write_RC
       193: argument_list: 
        194: argument: 
         195: expr: 
          196: name: dat
        197: argument: 
         198: expr: 
          199: name: 
           200: name: byte
           201: index: 
            202: expr: 
             203: name: j
=====
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: 
     5: name: byte
     6: index: 
      7: expr: 
       8: name: i
    9: operator: &
    10: literal: 0x40
  11: block: 
   12: block_content: 
    13: expr_stmt: 
     14: expr: 
      15: name: i
      16: operator: --

----------------------------------------
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: 
     5: name: byte
     6: index: 
      7: expr: 
       8: name: i
    9: operator: &
    10: literal: 0x40
    11: operator: &&
    12: name: i
    13: operator: >
    14: literal: 0
  15: block: 
   16: block_content: 
    17: expr_stmt: 
     18: expr: 
      19: name: i
      20: operator: --
=====
0: if: 
 1: condition: 
  2: expr: 
   3: name: 
    4: name: byte
    5: index: 
     6: expr: 
      7: name: i
   8: operator: &
   9: literal: 0x40
 10: block: 
  11: block_content: 
   12: expr_stmt: 
    13: expr: 
     14: name: i
     15: operator: --

----------------------------------------
0: if: 
 1: condition: 
  2: expr: 
   3: name: 
    4: name: byte
    5: index: 
     6: expr: 
      7: name: i
   8: operator: &
   9: literal: 0x40
   10: operator: &&
   11: name: i
   12: operator: >
   13: literal: 0
 14: block: 
  15: block_content: 
   16: expr_stmt: 
    17: expr: 
     18: name: i
     19: operator: --
=====
0: condition: 
 1: expr: 
  2: name: 
   3: name: byte
   4: index: 
    5: expr: 
     6: name: i
  7: operator: &
  8: literal: 0x40

----------------------------------------
0: condition: 
 1: expr: 
  2: name: 
   3: name: byte
   4: index: 
    5: expr: 
     6: name: i
  7: operator: &
  8: literal: 0x40
  9: operator: &&
  10: name: i
  11: operator: >
  12: literal: 0
=====
0: expr: 
 1: name: 
  2: name: byte
  3: index: 
   4: expr: 
    5: name: i
 6: operator: &
 7: literal: 0x40

----------------------------------------
0: expr: 
 1: name: 
  2: name: byte
  3: index: 
   4: expr: 
    5: name: i
 6: operator: &
 7: literal: 0x40
 8: operator: &&
 9: name: i
 10: operator: >
 11: literal: 0
=====
