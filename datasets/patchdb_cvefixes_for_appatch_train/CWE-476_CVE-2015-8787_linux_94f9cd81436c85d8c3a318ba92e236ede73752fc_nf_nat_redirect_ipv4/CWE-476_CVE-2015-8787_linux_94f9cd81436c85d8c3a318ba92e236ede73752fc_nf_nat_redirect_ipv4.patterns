0: expr: 
 1: ?: !@#$holes0
 2: operator: !=
 3: name: NULL
 4: ?: !@#$holes1

----------------------------------------
0: expr: 
 1: ?: !@#$holes0
 2: operator: &&
 3: name: 
  4: name: indev
  5: operator: ->
  6: name: ifa_list
 7: ?: !@#$holes1
=====
0: unit: 
 1: macro: 
  2: name: nf_nat_redirect_ipv4
  3: argument_list: 
   4: argument: 
   5: argument: 
   6: argument: 
 7: block: 
  8: block_content: 
   9: decl_stmt: 
    10: decl: 
     11: type: 
      12: name: 
       13: name: struct
       14: name: nf_conn
      15: modifier: *
     16: name: ct
   17: decl_stmt: 
    18: decl: 
     19: type: 
      20: name: 
       21: name: enum
       22: name: ip_conntrack_info
     23: name: ctinfo
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: __be32
     28: name: newdst
   29: decl_stmt: 
    30: decl: 
     31: type: 
      32: name: 
       33: name: struct
       34: name: nf_nat_range
     35: name: newrange
   36: expr_stmt: 
    37: expr: 
     38: call: 
      39: name: NF_CT_ASSERT
      40: argument_list: 
       41: argument: 
        42: expr: 
         43: name: hooknum
         44: operator: ==
         45: name: NF_INET_PRE_ROUTING
         46: operator: ||
         47: name: hooknum
         48: operator: ==
         49: name: NF_INET_LOCAL_OUT
   50: expr_stmt: 
    51: expr: 
     52: name: ct
     53: operator: =
     54: call: 
      55: name: nf_ct_get
      56: argument_list: 
       57: argument: 
        58: expr: 
         59: name: skb
       60: argument: 
        61: expr: 
         62: operator: &
         63: name: ctinfo
   64: expr_stmt: 
    65: expr: 
     66: call: 
      67: name: NF_CT_ASSERT
      68: argument_list: 
       69: argument: 
        70: expr: 
         71: name: ct
         72: operator: &&
         73: operator: (
         74: name: ctinfo
         75: operator: ==
         76: name: IP_CT_NEW
         77: operator: ||
         78: name: ctinfo
         79: operator: ==
         80: name: IP_CT_RELATED
         81: operator: )
   82: comment: /* Local packets: make them go to loopback */
   83: if_stmt: 
    84: if: 
     85: condition: 
      86: expr: 
       87: name: hooknum
       88: operator: ==
       89: name: NF_INET_LOCAL_OUT
     90: block: 
      91: block_content: 
       92: expr_stmt: 
        93: expr: 
         94: name: newdst
         95: operator: =
         96: call: 
          97: name: htonl
          98: argument_list: 
           99: argument: 
            100: expr: 
             101: literal: 0x7F000001
    102: else: 
     103: block: 
      104: block_content: 
       105: decl_stmt: 
        106: decl: 
         107: type: 
          108: name: 
           109: name: struct
           110: name: in_device
          111: modifier: *
         112: name: indev
       113: decl_stmt: 
        114: decl: 
         115: type: 
          116: name: 
           117: name: struct
           118: name: in_ifaddr
          119: modifier: *
         120: name: ifa
       121: expr_stmt: 
        122: expr: 
         123: name: newdst
         124: operator: =
         125: literal: 0
       126: expr_stmt: 
        127: expr: 
         128: call: 
          129: name: rcu_read_lock
          130: argument_list: 
       131: expr_stmt: 
        132: expr: 
         133: name: indev
         134: operator: =
         135: call: 
          136: name: __in_dev_get_rcu
          137: argument_list: 
           138: argument: 
            139: expr: 
             140: name: 
              141: name: skb
              142: operator: ->
              143: name: dev
       144: if_stmt: 
        145: if: 
         146: condition: 
          147: expr: 
           148: name: indev
           149: operator: !=
           150: name: NULL
         151: block: 
          152: block_content: 
           153: expr_stmt: 
            154: expr: 
             155: name: ifa
             156: operator: =
             157: name: 
              158: name: indev
              159: operator: ->
              160: name: ifa_list
           161: expr_stmt: 
            162: expr: 
             163: name: newdst
             164: operator: =
             165: name: 
              166: name: ifa
              167: operator: ->
              168: name: ifa_local
       169: expr_stmt: 
        170: expr: 
         171: call: 
          172: name: rcu_read_unlock
          173: argument_list: 
       174: if_stmt: 
        175: if: 
         176: condition: 
          177: expr: 
           178: operator: !
           179: name: newdst
         180: block: 
          181: block_content: 
           182: return: 
            183: expr: 
             184: name: NF_DROP
   185: comment: /* Transfer from original range. */
   186: expr_stmt: 
    187: expr: 
     188: call: 
      189: name: memset
      190: argument_list: 
       191: argument: 
        192: expr: 
         193: operator: &
         194: name: 
          195: name: newrange
          196: operator: .
          197: name: min_addr
       198: argument: 
        199: expr: 
         200: literal: 0
       201: argument: 
        202: expr: 
         203: sizeof: 
          204: argument_list: 
           205: argument: 
            206: expr: 
             207: name: 
              208: name: newrange
              209: operator: .
              210: name: min_addr
   211: expr_stmt: 
    212: expr: 
     213: call: 
      214: name: memset
      215: argument_list: 
       216: argument: 
        217: expr: 
         218: operator: &
         219: name: 
          220: name: newrange
          221: operator: .
          222: name: max_addr
       223: argument: 
        224: expr: 
         225: literal: 0
       226: argument: 
        227: expr: 
         228: sizeof: 
          229: argument_list: 
           230: argument: 
            231: expr: 
             232: name: 
              233: name: newrange
              234: operator: .
              235: name: max_addr
   236: expr_stmt: 
    237: expr: 
     238: name: 
      239: name: newrange
      240: operator: .
      241: name: flags
     242: operator: =
     243: name: 
      244: name: mr
      245: operator: ->
      246: name: range
      247: index: 
       248: expr: 
        249: literal: 0
     250: operator: .
     251: name: flags
     252: operator: |
     253: name: NF_NAT_RANGE_MAP_IPS
   254: expr_stmt: 
    255: expr: 
     256: name: 
      257: name: newrange
      258: operator: .
      259: name: min_addr
      260: operator: .
      261: name: ip
     262: operator: =
     263: name: newdst
   264: expr_stmt: 
    265: expr: 
     266: name: 
      267: name: newrange
      268: operator: .
      269: name: max_addr
      270: operator: .
      271: name: ip
     272: operator: =
     273: name: newdst
   274: expr_stmt: 
    275: expr: 
     276: name: 
      277: name: newrange
      278: operator: .
      279: name: min_proto
     280: operator: =
     281: name: 
      282: name: mr
      283: operator: ->
      284: name: range
      285: index: 
       286: expr: 
        287: literal: 0
     288: operator: .
     289: name: min
   290: expr_stmt: 
    291: expr: 
     292: name: 
      293: name: newrange
      294: operator: .
      295: name: max_proto
     296: operator: =
     297: name: 
      298: name: mr
      299: operator: ->
      300: name: range
      301: index: 
       302: expr: 
        303: literal: 0
     304: operator: .
     305: name: max
   306: comment: /* Hand modified range to generic setup. */
   307: return: 
    308: expr: 
     309: call: 
      310: name: nf_nat_setup_info
      311: argument_list: 
       312: argument: 
        313: expr: 
         314: name: ct
       315: argument: 
        316: expr: 
         317: operator: &
         318: name: newrange
       319: argument: 
        320: expr: 
         321: name: NF_NAT_MANIP_DST

----------------------------------------
0: unit: 
 1: macro: 
  2: name: nf_nat_redirect_ipv4
  3: argument_list: 
   4: argument: 
   5: argument: 
   6: argument: 
 7: block: 
  8: block_content: 
   9: decl_stmt: 
    10: decl: 
     11: type: 
      12: name: 
       13: name: struct
       14: name: nf_conn
      15: modifier: *
     16: name: ct
   17: decl_stmt: 
    18: decl: 
     19: type: 
      20: name: 
       21: name: enum
       22: name: ip_conntrack_info
     23: name: ctinfo
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: __be32
     28: name: newdst
   29: decl_stmt: 
    30: decl: 
     31: type: 
      32: name: 
       33: name: struct
       34: name: nf_nat_range
     35: name: newrange
   36: expr_stmt: 
    37: expr: 
     38: call: 
      39: name: NF_CT_ASSERT
      40: argument_list: 
       41: argument: 
        42: expr: 
         43: name: hooknum
         44: operator: ==
         45: name: NF_INET_PRE_ROUTING
         46: operator: ||
         47: name: hooknum
         48: operator: ==
         49: name: NF_INET_LOCAL_OUT
   50: expr_stmt: 
    51: expr: 
     52: name: ct
     53: operator: =
     54: call: 
      55: name: nf_ct_get
      56: argument_list: 
       57: argument: 
        58: expr: 
         59: name: skb
       60: argument: 
        61: expr: 
         62: operator: &
         63: name: ctinfo
   64: expr_stmt: 
    65: expr: 
     66: call: 
      67: name: NF_CT_ASSERT
      68: argument_list: 
       69: argument: 
        70: expr: 
         71: name: ct
         72: operator: &&
         73: operator: (
         74: name: ctinfo
         75: operator: ==
         76: name: IP_CT_NEW
         77: operator: ||
         78: name: ctinfo
         79: operator: ==
         80: name: IP_CT_RELATED
         81: operator: )
   82: comment: /* Local packets: make them go to loopback */
   83: if_stmt: 
    84: if: 
     85: condition: 
      86: expr: 
       87: name: hooknum
       88: operator: ==
       89: name: NF_INET_LOCAL_OUT
     90: block: 
      91: block_content: 
       92: expr_stmt: 
        93: expr: 
         94: name: newdst
         95: operator: =
         96: call: 
          97: name: htonl
          98: argument_list: 
           99: argument: 
            100: expr: 
             101: literal: 0x7F000001
    102: else: 
     103: block: 
      104: block_content: 
       105: decl_stmt: 
        106: decl: 
         107: type: 
          108: name: 
           109: name: struct
           110: name: in_device
          111: modifier: *
         112: name: indev
       113: decl_stmt: 
        114: decl: 
         115: type: 
          116: name: 
           117: name: struct
           118: name: in_ifaddr
          119: modifier: *
         120: name: ifa
       121: expr_stmt: 
        122: expr: 
         123: name: newdst
         124: operator: =
         125: literal: 0
       126: expr_stmt: 
        127: expr: 
         128: call: 
          129: name: rcu_read_lock
          130: argument_list: 
       131: expr_stmt: 
        132: expr: 
         133: name: indev
         134: operator: =
         135: call: 
          136: name: __in_dev_get_rcu
          137: argument_list: 
           138: argument: 
            139: expr: 
             140: name: 
              141: name: skb
              142: operator: ->
              143: name: dev
       144: if_stmt: 
        145: if: 
         146: condition: 
          147: expr: 
           148: name: indev
           149: operator: &&
           150: name: 
            151: name: indev
            152: operator: ->
            153: name: ifa_list
         154: block: 
          155: block_content: 
           156: expr_stmt: 
            157: expr: 
             158: name: ifa
             159: operator: =
             160: name: 
              161: name: indev
              162: operator: ->
              163: name: ifa_list
           164: expr_stmt: 
            165: expr: 
             166: name: newdst
             167: operator: =
             168: name: 
              169: name: ifa
              170: operator: ->
              171: name: ifa_local
       172: expr_stmt: 
        173: expr: 
         174: call: 
          175: name: rcu_read_unlock
          176: argument_list: 
       177: if_stmt: 
        178: if: 
         179: condition: 
          180: expr: 
           181: operator: !
           182: name: newdst
         183: block: 
          184: block_content: 
           185: return: 
            186: expr: 
             187: name: NF_DROP
   188: comment: /* Transfer from original range. */
   189: expr_stmt: 
    190: expr: 
     191: call: 
      192: name: memset
      193: argument_list: 
       194: argument: 
        195: expr: 
         196: operator: &
         197: name: 
          198: name: newrange
          199: operator: .
          200: name: min_addr
       201: argument: 
        202: expr: 
         203: literal: 0
       204: argument: 
        205: expr: 
         206: sizeof: 
          207: argument_list: 
           208: argument: 
            209: expr: 
             210: name: 
              211: name: newrange
              212: operator: .
              213: name: min_addr
   214: expr_stmt: 
    215: expr: 
     216: call: 
      217: name: memset
      218: argument_list: 
       219: argument: 
        220: expr: 
         221: operator: &
         222: name: 
          223: name: newrange
          224: operator: .
          225: name: max_addr
       226: argument: 
        227: expr: 
         228: literal: 0
       229: argument: 
        230: expr: 
         231: sizeof: 
          232: argument_list: 
           233: argument: 
            234: expr: 
             235: name: 
              236: name: newrange
              237: operator: .
              238: name: max_addr
   239: expr_stmt: 
    240: expr: 
     241: name: 
      242: name: newrange
      243: operator: .
      244: name: flags
     245: operator: =
     246: name: 
      247: name: mr
      248: operator: ->
      249: name: range
      250: index: 
       251: expr: 
        252: literal: 0
     253: operator: .
     254: name: flags
     255: operator: |
     256: name: NF_NAT_RANGE_MAP_IPS
   257: expr_stmt: 
    258: expr: 
     259: name: 
      260: name: newrange
      261: operator: .
      262: name: min_addr
      263: operator: .
      264: name: ip
     265: operator: =
     266: name: newdst
   267: expr_stmt: 
    268: expr: 
     269: name: 
      270: name: newrange
      271: operator: .
      272: name: max_addr
      273: operator: .
      274: name: ip
     275: operator: =
     276: name: newdst
   277: expr_stmt: 
    278: expr: 
     279: name: 
      280: name: newrange
      281: operator: .
      282: name: min_proto
     283: operator: =
     284: name: 
      285: name: mr
      286: operator: ->
      287: name: range
      288: index: 
       289: expr: 
        290: literal: 0
     291: operator: .
     292: name: min
   293: expr_stmt: 
    294: expr: 
     295: name: 
      296: name: newrange
      297: operator: .
      298: name: max_proto
     299: operator: =
     300: name: 
      301: name: mr
      302: operator: ->
      303: name: range
      304: index: 
       305: expr: 
        306: literal: 0
     307: operator: .
     308: name: max
   309: comment: /* Hand modified range to generic setup. */
   310: return: 
    311: expr: 
     312: call: 
      313: name: nf_nat_setup_info
      314: argument_list: 
       315: argument: 
        316: expr: 
         317: name: ct
       318: argument: 
        319: expr: 
         320: operator: &
         321: name: newrange
       322: argument: 
        323: expr: 
         324: name: NF_NAT_MANIP_DST
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: nf_conn
     8: modifier: *
    9: name: ct
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: 
      14: name: enum
      15: name: ip_conntrack_info
    16: name: ctinfo
  17: decl_stmt: 
   18: decl: 
    19: type: 
     20: name: __be32
    21: name: newdst
  22: decl_stmt: 
   23: decl: 
    24: type: 
     25: name: 
      26: name: struct
      27: name: nf_nat_range
    28: name: newrange
  29: expr_stmt: 
   30: expr: 
    31: call: 
     32: name: NF_CT_ASSERT
     33: argument_list: 
      34: argument: 
       35: expr: 
        36: name: hooknum
        37: operator: ==
        38: name: NF_INET_PRE_ROUTING
        39: operator: ||
        40: name: hooknum
        41: operator: ==
        42: name: NF_INET_LOCAL_OUT
  43: expr_stmt: 
   44: expr: 
    45: name: ct
    46: operator: =
    47: call: 
     48: name: nf_ct_get
     49: argument_list: 
      50: argument: 
       51: expr: 
        52: name: skb
      53: argument: 
       54: expr: 
        55: operator: &
        56: name: ctinfo
  57: expr_stmt: 
   58: expr: 
    59: call: 
     60: name: NF_CT_ASSERT
     61: argument_list: 
      62: argument: 
       63: expr: 
        64: name: ct
        65: operator: &&
        66: operator: (
        67: name: ctinfo
        68: operator: ==
        69: name: IP_CT_NEW
        70: operator: ||
        71: name: ctinfo
        72: operator: ==
        73: name: IP_CT_RELATED
        74: operator: )
  75: comment: /* Local packets: make them go to loopback */
  76: if_stmt: 
   77: if: 
    78: condition: 
     79: expr: 
      80: name: hooknum
      81: operator: ==
      82: name: NF_INET_LOCAL_OUT
    83: block: 
     84: block_content: 
      85: expr_stmt: 
       86: expr: 
        87: name: newdst
        88: operator: =
        89: call: 
         90: name: htonl
         91: argument_list: 
          92: argument: 
           93: expr: 
            94: literal: 0x7F000001
   95: else: 
    96: block: 
     97: block_content: 
      98: decl_stmt: 
       99: decl: 
        100: type: 
         101: name: 
          102: name: struct
          103: name: in_device
         104: modifier: *
        105: name: indev
      106: decl_stmt: 
       107: decl: 
        108: type: 
         109: name: 
          110: name: struct
          111: name: in_ifaddr
         112: modifier: *
        113: name: ifa
      114: expr_stmt: 
       115: expr: 
        116: name: newdst
        117: operator: =
        118: literal: 0
      119: expr_stmt: 
       120: expr: 
        121: call: 
         122: name: rcu_read_lock
         123: argument_list: 
      124: expr_stmt: 
       125: expr: 
        126: name: indev
        127: operator: =
        128: call: 
         129: name: __in_dev_get_rcu
         130: argument_list: 
          131: argument: 
           132: expr: 
            133: name: 
             134: name: skb
             135: operator: ->
             136: name: dev
      137: if_stmt: 
       138: if: 
        139: condition: 
         140: expr: 
          141: name: indev
          142: operator: !=
          143: name: NULL
        144: block: 
         145: block_content: 
          146: expr_stmt: 
           147: expr: 
            148: name: ifa
            149: operator: =
            150: name: 
             151: name: indev
             152: operator: ->
             153: name: ifa_list
          154: expr_stmt: 
           155: expr: 
            156: name: newdst
            157: operator: =
            158: name: 
             159: name: ifa
             160: operator: ->
             161: name: ifa_local
      162: expr_stmt: 
       163: expr: 
        164: call: 
         165: name: rcu_read_unlock
         166: argument_list: 
      167: if_stmt: 
       168: if: 
        169: condition: 
         170: expr: 
          171: operator: !
          172: name: newdst
        173: block: 
         174: block_content: 
          175: return: 
           176: expr: 
            177: name: NF_DROP
  178: comment: /* Transfer from original range. */
  179: expr_stmt: 
   180: expr: 
    181: call: 
     182: name: memset
     183: argument_list: 
      184: argument: 
       185: expr: 
        186: operator: &
        187: name: 
         188: name: newrange
         189: operator: .
         190: name: min_addr
      191: argument: 
       192: expr: 
        193: literal: 0
      194: argument: 
       195: expr: 
        196: sizeof: 
         197: argument_list: 
          198: argument: 
           199: expr: 
            200: name: 
             201: name: newrange
             202: operator: .
             203: name: min_addr
  204: expr_stmt: 
   205: expr: 
    206: call: 
     207: name: memset
     208: argument_list: 
      209: argument: 
       210: expr: 
        211: operator: &
        212: name: 
         213: name: newrange
         214: operator: .
         215: name: max_addr
      216: argument: 
       217: expr: 
        218: literal: 0
      219: argument: 
       220: expr: 
        221: sizeof: 
         222: argument_list: 
          223: argument: 
           224: expr: 
            225: name: 
             226: name: newrange
             227: operator: .
             228: name: max_addr
  229: expr_stmt: 
   230: expr: 
    231: name: 
     232: name: newrange
     233: operator: .
     234: name: flags
    235: operator: =
    236: name: 
     237: name: mr
     238: operator: ->
     239: name: range
     240: index: 
      241: expr: 
       242: literal: 0
    243: operator: .
    244: name: flags
    245: operator: |
    246: name: NF_NAT_RANGE_MAP_IPS
  247: expr_stmt: 
   248: expr: 
    249: name: 
     250: name: newrange
     251: operator: .
     252: name: min_addr
     253: operator: .
     254: name: ip
    255: operator: =
    256: name: newdst
  257: expr_stmt: 
   258: expr: 
    259: name: 
     260: name: newrange
     261: operator: .
     262: name: max_addr
     263: operator: .
     264: name: ip
    265: operator: =
    266: name: newdst
  267: expr_stmt: 
   268: expr: 
    269: name: 
     270: name: newrange
     271: operator: .
     272: name: min_proto
    273: operator: =
    274: name: 
     275: name: mr
     276: operator: ->
     277: name: range
     278: index: 
      279: expr: 
       280: literal: 0
    281: operator: .
    282: name: min
  283: expr_stmt: 
   284: expr: 
    285: name: 
     286: name: newrange
     287: operator: .
     288: name: max_proto
    289: operator: =
    290: name: 
     291: name: mr
     292: operator: ->
     293: name: range
     294: index: 
      295: expr: 
       296: literal: 0
    297: operator: .
    298: name: max
  299: comment: /* Hand modified range to generic setup. */
  300: return: 
   301: expr: 
    302: call: 
     303: name: nf_nat_setup_info
     304: argument_list: 
      305: argument: 
       306: expr: 
        307: name: ct
      308: argument: 
       309: expr: 
        310: operator: &
        311: name: newrange
      312: argument: 
       313: expr: 
        314: name: NF_NAT_MANIP_DST

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: nf_conn
     8: modifier: *
    9: name: ct
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: 
      14: name: enum
      15: name: ip_conntrack_info
    16: name: ctinfo
  17: decl_stmt: 
   18: decl: 
    19: type: 
     20: name: __be32
    21: name: newdst
  22: decl_stmt: 
   23: decl: 
    24: type: 
     25: name: 
      26: name: struct
      27: name: nf_nat_range
    28: name: newrange
  29: expr_stmt: 
   30: expr: 
    31: call: 
     32: name: NF_CT_ASSERT
     33: argument_list: 
      34: argument: 
       35: expr: 
        36: name: hooknum
        37: operator: ==
        38: name: NF_INET_PRE_ROUTING
        39: operator: ||
        40: name: hooknum
        41: operator: ==
        42: name: NF_INET_LOCAL_OUT
  43: expr_stmt: 
   44: expr: 
    45: name: ct
    46: operator: =
    47: call: 
     48: name: nf_ct_get
     49: argument_list: 
      50: argument: 
       51: expr: 
        52: name: skb
      53: argument: 
       54: expr: 
        55: operator: &
        56: name: ctinfo
  57: expr_stmt: 
   58: expr: 
    59: call: 
     60: name: NF_CT_ASSERT
     61: argument_list: 
      62: argument: 
       63: expr: 
        64: name: ct
        65: operator: &&
        66: operator: (
        67: name: ctinfo
        68: operator: ==
        69: name: IP_CT_NEW
        70: operator: ||
        71: name: ctinfo
        72: operator: ==
        73: name: IP_CT_RELATED
        74: operator: )
  75: comment: /* Local packets: make them go to loopback */
  76: if_stmt: 
   77: if: 
    78: condition: 
     79: expr: 
      80: name: hooknum
      81: operator: ==
      82: name: NF_INET_LOCAL_OUT
    83: block: 
     84: block_content: 
      85: expr_stmt: 
       86: expr: 
        87: name: newdst
        88: operator: =
        89: call: 
         90: name: htonl
         91: argument_list: 
          92: argument: 
           93: expr: 
            94: literal: 0x7F000001
   95: else: 
    96: block: 
     97: block_content: 
      98: decl_stmt: 
       99: decl: 
        100: type: 
         101: name: 
          102: name: struct
          103: name: in_device
         104: modifier: *
        105: name: indev
      106: decl_stmt: 
       107: decl: 
        108: type: 
         109: name: 
          110: name: struct
          111: name: in_ifaddr
         112: modifier: *
        113: name: ifa
      114: expr_stmt: 
       115: expr: 
        116: name: newdst
        117: operator: =
        118: literal: 0
      119: expr_stmt: 
       120: expr: 
        121: call: 
         122: name: rcu_read_lock
         123: argument_list: 
      124: expr_stmt: 
       125: expr: 
        126: name: indev
        127: operator: =
        128: call: 
         129: name: __in_dev_get_rcu
         130: argument_list: 
          131: argument: 
           132: expr: 
            133: name: 
             134: name: skb
             135: operator: ->
             136: name: dev
      137: if_stmt: 
       138: if: 
        139: condition: 
         140: expr: 
          141: name: indev
          142: operator: &&
          143: name: 
           144: name: indev
           145: operator: ->
           146: name: ifa_list
        147: block: 
         148: block_content: 
          149: expr_stmt: 
           150: expr: 
            151: name: ifa
            152: operator: =
            153: name: 
             154: name: indev
             155: operator: ->
             156: name: ifa_list
          157: expr_stmt: 
           158: expr: 
            159: name: newdst
            160: operator: =
            161: name: 
             162: name: ifa
             163: operator: ->
             164: name: ifa_local
      165: expr_stmt: 
       166: expr: 
        167: call: 
         168: name: rcu_read_unlock
         169: argument_list: 
      170: if_stmt: 
       171: if: 
        172: condition: 
         173: expr: 
          174: operator: !
          175: name: newdst
        176: block: 
         177: block_content: 
          178: return: 
           179: expr: 
            180: name: NF_DROP
  181: comment: /* Transfer from original range. */
  182: expr_stmt: 
   183: expr: 
    184: call: 
     185: name: memset
     186: argument_list: 
      187: argument: 
       188: expr: 
        189: operator: &
        190: name: 
         191: name: newrange
         192: operator: .
         193: name: min_addr
      194: argument: 
       195: expr: 
        196: literal: 0
      197: argument: 
       198: expr: 
        199: sizeof: 
         200: argument_list: 
          201: argument: 
           202: expr: 
            203: name: 
             204: name: newrange
             205: operator: .
             206: name: min_addr
  207: expr_stmt: 
   208: expr: 
    209: call: 
     210: name: memset
     211: argument_list: 
      212: argument: 
       213: expr: 
        214: operator: &
        215: name: 
         216: name: newrange
         217: operator: .
         218: name: max_addr
      219: argument: 
       220: expr: 
        221: literal: 0
      222: argument: 
       223: expr: 
        224: sizeof: 
         225: argument_list: 
          226: argument: 
           227: expr: 
            228: name: 
             229: name: newrange
             230: operator: .
             231: name: max_addr
  232: expr_stmt: 
   233: expr: 
    234: name: 
     235: name: newrange
     236: operator: .
     237: name: flags
    238: operator: =
    239: name: 
     240: name: mr
     241: operator: ->
     242: name: range
     243: index: 
      244: expr: 
       245: literal: 0
    246: operator: .
    247: name: flags
    248: operator: |
    249: name: NF_NAT_RANGE_MAP_IPS
  250: expr_stmt: 
   251: expr: 
    252: name: 
     253: name: newrange
     254: operator: .
     255: name: min_addr
     256: operator: .
     257: name: ip
    258: operator: =
    259: name: newdst
  260: expr_stmt: 
   261: expr: 
    262: name: 
     263: name: newrange
     264: operator: .
     265: name: max_addr
     266: operator: .
     267: name: ip
    268: operator: =
    269: name: newdst
  270: expr_stmt: 
   271: expr: 
    272: name: 
     273: name: newrange
     274: operator: .
     275: name: min_proto
    276: operator: =
    277: name: 
     278: name: mr
     279: operator: ->
     280: name: range
     281: index: 
      282: expr: 
       283: literal: 0
    284: operator: .
    285: name: min
  286: expr_stmt: 
   287: expr: 
    288: name: 
     289: name: newrange
     290: operator: .
     291: name: max_proto
    292: operator: =
    293: name: 
     294: name: mr
     295: operator: ->
     296: name: range
     297: index: 
      298: expr: 
       299: literal: 0
    300: operator: .
    301: name: max
  302: comment: /* Hand modified range to generic setup. */
  303: return: 
   304: expr: 
    305: call: 
     306: name: nf_nat_setup_info
     307: argument_list: 
      308: argument: 
       309: expr: 
        310: name: ct
      311: argument: 
       312: expr: 
        313: operator: &
        314: name: newrange
      315: argument: 
       316: expr: 
        317: name: NF_NAT_MANIP_DST
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: nf_conn
    7: modifier: *
   8: name: ct
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: 
     13: name: enum
     14: name: ip_conntrack_info
   15: name: ctinfo
 16: decl_stmt: 
  17: decl: 
   18: type: 
    19: name: __be32
   20: name: newdst
 21: decl_stmt: 
  22: decl: 
   23: type: 
    24: name: 
     25: name: struct
     26: name: nf_nat_range
   27: name: newrange
 28: expr_stmt: 
  29: expr: 
   30: call: 
    31: name: NF_CT_ASSERT
    32: argument_list: 
     33: argument: 
      34: expr: 
       35: name: hooknum
       36: operator: ==
       37: name: NF_INET_PRE_ROUTING
       38: operator: ||
       39: name: hooknum
       40: operator: ==
       41: name: NF_INET_LOCAL_OUT
 42: expr_stmt: 
  43: expr: 
   44: name: ct
   45: operator: =
   46: call: 
    47: name: nf_ct_get
    48: argument_list: 
     49: argument: 
      50: expr: 
       51: name: skb
     52: argument: 
      53: expr: 
       54: operator: &
       55: name: ctinfo
 56: expr_stmt: 
  57: expr: 
   58: call: 
    59: name: NF_CT_ASSERT
    60: argument_list: 
     61: argument: 
      62: expr: 
       63: name: ct
       64: operator: &&
       65: operator: (
       66: name: ctinfo
       67: operator: ==
       68: name: IP_CT_NEW
       69: operator: ||
       70: name: ctinfo
       71: operator: ==
       72: name: IP_CT_RELATED
       73: operator: )
 74: comment: /* Local packets: make them go to loopback */
 75: if_stmt: 
  76: if: 
   77: condition: 
    78: expr: 
     79: name: hooknum
     80: operator: ==
     81: name: NF_INET_LOCAL_OUT
   82: block: 
    83: block_content: 
     84: expr_stmt: 
      85: expr: 
       86: name: newdst
       87: operator: =
       88: call: 
        89: name: htonl
        90: argument_list: 
         91: argument: 
          92: expr: 
           93: literal: 0x7F000001
  94: else: 
   95: block: 
    96: block_content: 
     97: decl_stmt: 
      98: decl: 
       99: type: 
        100: name: 
         101: name: struct
         102: name: in_device
        103: modifier: *
       104: name: indev
     105: decl_stmt: 
      106: decl: 
       107: type: 
        108: name: 
         109: name: struct
         110: name: in_ifaddr
        111: modifier: *
       112: name: ifa
     113: expr_stmt: 
      114: expr: 
       115: name: newdst
       116: operator: =
       117: literal: 0
     118: expr_stmt: 
      119: expr: 
       120: call: 
        121: name: rcu_read_lock
        122: argument_list: 
     123: expr_stmt: 
      124: expr: 
       125: name: indev
       126: operator: =
       127: call: 
        128: name: __in_dev_get_rcu
        129: argument_list: 
         130: argument: 
          131: expr: 
           132: name: 
            133: name: skb
            134: operator: ->
            135: name: dev
     136: if_stmt: 
      137: if: 
       138: condition: 
        139: expr: 
         140: name: indev
         141: operator: !=
         142: name: NULL
       143: block: 
        144: block_content: 
         145: expr_stmt: 
          146: expr: 
           147: name: ifa
           148: operator: =
           149: name: 
            150: name: indev
            151: operator: ->
            152: name: ifa_list
         153: expr_stmt: 
          154: expr: 
           155: name: newdst
           156: operator: =
           157: name: 
            158: name: ifa
            159: operator: ->
            160: name: ifa_local
     161: expr_stmt: 
      162: expr: 
       163: call: 
        164: name: rcu_read_unlock
        165: argument_list: 
     166: if_stmt: 
      167: if: 
       168: condition: 
        169: expr: 
         170: operator: !
         171: name: newdst
       172: block: 
        173: block_content: 
         174: return: 
          175: expr: 
           176: name: NF_DROP
 177: comment: /* Transfer from original range. */
 178: expr_stmt: 
  179: expr: 
   180: call: 
    181: name: memset
    182: argument_list: 
     183: argument: 
      184: expr: 
       185: operator: &
       186: name: 
        187: name: newrange
        188: operator: .
        189: name: min_addr
     190: argument: 
      191: expr: 
       192: literal: 0
     193: argument: 
      194: expr: 
       195: sizeof: 
        196: argument_list: 
         197: argument: 
          198: expr: 
           199: name: 
            200: name: newrange
            201: operator: .
            202: name: min_addr
 203: expr_stmt: 
  204: expr: 
   205: call: 
    206: name: memset
    207: argument_list: 
     208: argument: 
      209: expr: 
       210: operator: &
       211: name: 
        212: name: newrange
        213: operator: .
        214: name: max_addr
     215: argument: 
      216: expr: 
       217: literal: 0
     218: argument: 
      219: expr: 
       220: sizeof: 
        221: argument_list: 
         222: argument: 
          223: expr: 
           224: name: 
            225: name: newrange
            226: operator: .
            227: name: max_addr
 228: expr_stmt: 
  229: expr: 
   230: name: 
    231: name: newrange
    232: operator: .
    233: name: flags
   234: operator: =
   235: name: 
    236: name: mr
    237: operator: ->
    238: name: range
    239: index: 
     240: expr: 
      241: literal: 0
   242: operator: .
   243: name: flags
   244: operator: |
   245: name: NF_NAT_RANGE_MAP_IPS
 246: expr_stmt: 
  247: expr: 
   248: name: 
    249: name: newrange
    250: operator: .
    251: name: min_addr
    252: operator: .
    253: name: ip
   254: operator: =
   255: name: newdst
 256: expr_stmt: 
  257: expr: 
   258: name: 
    259: name: newrange
    260: operator: .
    261: name: max_addr
    262: operator: .
    263: name: ip
   264: operator: =
   265: name: newdst
 266: expr_stmt: 
  267: expr: 
   268: name: 
    269: name: newrange
    270: operator: .
    271: name: min_proto
   272: operator: =
   273: name: 
    274: name: mr
    275: operator: ->
    276: name: range
    277: index: 
     278: expr: 
      279: literal: 0
   280: operator: .
   281: name: min
 282: expr_stmt: 
  283: expr: 
   284: name: 
    285: name: newrange
    286: operator: .
    287: name: max_proto
   288: operator: =
   289: name: 
    290: name: mr
    291: operator: ->
    292: name: range
    293: index: 
     294: expr: 
      295: literal: 0
   296: operator: .
   297: name: max
 298: comment: /* Hand modified range to generic setup. */
 299: return: 
  300: expr: 
   301: call: 
    302: name: nf_nat_setup_info
    303: argument_list: 
     304: argument: 
      305: expr: 
       306: name: ct
     307: argument: 
      308: expr: 
       309: operator: &
       310: name: newrange
     311: argument: 
      312: expr: 
       313: name: NF_NAT_MANIP_DST

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: nf_conn
    7: modifier: *
   8: name: ct
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: 
     13: name: enum
     14: name: ip_conntrack_info
   15: name: ctinfo
 16: decl_stmt: 
  17: decl: 
   18: type: 
    19: name: __be32
   20: name: newdst
 21: decl_stmt: 
  22: decl: 
   23: type: 
    24: name: 
     25: name: struct
     26: name: nf_nat_range
   27: name: newrange
 28: expr_stmt: 
  29: expr: 
   30: call: 
    31: name: NF_CT_ASSERT
    32: argument_list: 
     33: argument: 
      34: expr: 
       35: name: hooknum
       36: operator: ==
       37: name: NF_INET_PRE_ROUTING
       38: operator: ||
       39: name: hooknum
       40: operator: ==
       41: name: NF_INET_LOCAL_OUT
 42: expr_stmt: 
  43: expr: 
   44: name: ct
   45: operator: =
   46: call: 
    47: name: nf_ct_get
    48: argument_list: 
     49: argument: 
      50: expr: 
       51: name: skb
     52: argument: 
      53: expr: 
       54: operator: &
       55: name: ctinfo
 56: expr_stmt: 
  57: expr: 
   58: call: 
    59: name: NF_CT_ASSERT
    60: argument_list: 
     61: argument: 
      62: expr: 
       63: name: ct
       64: operator: &&
       65: operator: (
       66: name: ctinfo
       67: operator: ==
       68: name: IP_CT_NEW
       69: operator: ||
       70: name: ctinfo
       71: operator: ==
       72: name: IP_CT_RELATED
       73: operator: )
 74: comment: /* Local packets: make them go to loopback */
 75: if_stmt: 
  76: if: 
   77: condition: 
    78: expr: 
     79: name: hooknum
     80: operator: ==
     81: name: NF_INET_LOCAL_OUT
   82: block: 
    83: block_content: 
     84: expr_stmt: 
      85: expr: 
       86: name: newdst
       87: operator: =
       88: call: 
        89: name: htonl
        90: argument_list: 
         91: argument: 
          92: expr: 
           93: literal: 0x7F000001
  94: else: 
   95: block: 
    96: block_content: 
     97: decl_stmt: 
      98: decl: 
       99: type: 
        100: name: 
         101: name: struct
         102: name: in_device
        103: modifier: *
       104: name: indev
     105: decl_stmt: 
      106: decl: 
       107: type: 
        108: name: 
         109: name: struct
         110: name: in_ifaddr
        111: modifier: *
       112: name: ifa
     113: expr_stmt: 
      114: expr: 
       115: name: newdst
       116: operator: =
       117: literal: 0
     118: expr_stmt: 
      119: expr: 
       120: call: 
        121: name: rcu_read_lock
        122: argument_list: 
     123: expr_stmt: 
      124: expr: 
       125: name: indev
       126: operator: =
       127: call: 
        128: name: __in_dev_get_rcu
        129: argument_list: 
         130: argument: 
          131: expr: 
           132: name: 
            133: name: skb
            134: operator: ->
            135: name: dev
     136: if_stmt: 
      137: if: 
       138: condition: 
        139: expr: 
         140: name: indev
         141: operator: &&
         142: name: 
          143: name: indev
          144: operator: ->
          145: name: ifa_list
       146: block: 
        147: block_content: 
         148: expr_stmt: 
          149: expr: 
           150: name: ifa
           151: operator: =
           152: name: 
            153: name: indev
            154: operator: ->
            155: name: ifa_list
         156: expr_stmt: 
          157: expr: 
           158: name: newdst
           159: operator: =
           160: name: 
            161: name: ifa
            162: operator: ->
            163: name: ifa_local
     164: expr_stmt: 
      165: expr: 
       166: call: 
        167: name: rcu_read_unlock
        168: argument_list: 
     169: if_stmt: 
      170: if: 
       171: condition: 
        172: expr: 
         173: operator: !
         174: name: newdst
       175: block: 
        176: block_content: 
         177: return: 
          178: expr: 
           179: name: NF_DROP
 180: comment: /* Transfer from original range. */
 181: expr_stmt: 
  182: expr: 
   183: call: 
    184: name: memset
    185: argument_list: 
     186: argument: 
      187: expr: 
       188: operator: &
       189: name: 
        190: name: newrange
        191: operator: .
        192: name: min_addr
     193: argument: 
      194: expr: 
       195: literal: 0
     196: argument: 
      197: expr: 
       198: sizeof: 
        199: argument_list: 
         200: argument: 
          201: expr: 
           202: name: 
            203: name: newrange
            204: operator: .
            205: name: min_addr
 206: expr_stmt: 
  207: expr: 
   208: call: 
    209: name: memset
    210: argument_list: 
     211: argument: 
      212: expr: 
       213: operator: &
       214: name: 
        215: name: newrange
        216: operator: .
        217: name: max_addr
     218: argument: 
      219: expr: 
       220: literal: 0
     221: argument: 
      222: expr: 
       223: sizeof: 
        224: argument_list: 
         225: argument: 
          226: expr: 
           227: name: 
            228: name: newrange
            229: operator: .
            230: name: max_addr
 231: expr_stmt: 
  232: expr: 
   233: name: 
    234: name: newrange
    235: operator: .
    236: name: flags
   237: operator: =
   238: name: 
    239: name: mr
    240: operator: ->
    241: name: range
    242: index: 
     243: expr: 
      244: literal: 0
   245: operator: .
   246: name: flags
   247: operator: |
   248: name: NF_NAT_RANGE_MAP_IPS
 249: expr_stmt: 
  250: expr: 
   251: name: 
    252: name: newrange
    253: operator: .
    254: name: min_addr
    255: operator: .
    256: name: ip
   257: operator: =
   258: name: newdst
 259: expr_stmt: 
  260: expr: 
   261: name: 
    262: name: newrange
    263: operator: .
    264: name: max_addr
    265: operator: .
    266: name: ip
   267: operator: =
   268: name: newdst
 269: expr_stmt: 
  270: expr: 
   271: name: 
    272: name: newrange
    273: operator: .
    274: name: min_proto
   275: operator: =
   276: name: 
    277: name: mr
    278: operator: ->
    279: name: range
    280: index: 
     281: expr: 
      282: literal: 0
   283: operator: .
   284: name: min
 285: expr_stmt: 
  286: expr: 
   287: name: 
    288: name: newrange
    289: operator: .
    290: name: max_proto
   291: operator: =
   292: name: 
    293: name: mr
    294: operator: ->
    295: name: range
    296: index: 
     297: expr: 
      298: literal: 0
   299: operator: .
   300: name: max
 301: comment: /* Hand modified range to generic setup. */
 302: return: 
  303: expr: 
   304: call: 
    305: name: nf_nat_setup_info
    306: argument_list: 
     307: argument: 
      308: expr: 
       309: name: ct
     310: argument: 
      311: expr: 
       312: operator: &
       313: name: newrange
     314: argument: 
      315: expr: 
       316: name: NF_NAT_MANIP_DST
=====
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: hooknum
    5: operator: ==
    6: name: NF_INET_LOCAL_OUT
  7: block: 
   8: block_content: 
    9: expr_stmt: 
     10: expr: 
      11: name: newdst
      12: operator: =
      13: call: 
       14: name: htonl
       15: argument_list: 
        16: argument: 
         17: expr: 
          18: literal: 0x7F000001
 19: else: 
  20: block: 
   21: block_content: 
    22: decl_stmt: 
     23: decl: 
      24: type: 
       25: name: 
        26: name: struct
        27: name: in_device
       28: modifier: *
      29: name: indev
    30: decl_stmt: 
     31: decl: 
      32: type: 
       33: name: 
        34: name: struct
        35: name: in_ifaddr
       36: modifier: *
      37: name: ifa
    38: expr_stmt: 
     39: expr: 
      40: name: newdst
      41: operator: =
      42: literal: 0
    43: expr_stmt: 
     44: expr: 
      45: call: 
       46: name: rcu_read_lock
       47: argument_list: 
    48: expr_stmt: 
     49: expr: 
      50: name: indev
      51: operator: =
      52: call: 
       53: name: __in_dev_get_rcu
       54: argument_list: 
        55: argument: 
         56: expr: 
          57: name: 
           58: name: skb
           59: operator: ->
           60: name: dev
    61: if_stmt: 
     62: if: 
      63: condition: 
       64: expr: 
        65: name: indev
        66: operator: !=
        67: name: NULL
      68: block: 
       69: block_content: 
        70: expr_stmt: 
         71: expr: 
          72: name: ifa
          73: operator: =
          74: name: 
           75: name: indev
           76: operator: ->
           77: name: ifa_list
        78: expr_stmt: 
         79: expr: 
          80: name: newdst
          81: operator: =
          82: name: 
           83: name: ifa
           84: operator: ->
           85: name: ifa_local
    86: expr_stmt: 
     87: expr: 
      88: call: 
       89: name: rcu_read_unlock
       90: argument_list: 
    91: if_stmt: 
     92: if: 
      93: condition: 
       94: expr: 
        95: operator: !
        96: name: newdst
      97: block: 
       98: block_content: 
        99: return: 
         100: expr: 
          101: name: NF_DROP

----------------------------------------
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: hooknum
    5: operator: ==
    6: name: NF_INET_LOCAL_OUT
  7: block: 
   8: block_content: 
    9: expr_stmt: 
     10: expr: 
      11: name: newdst
      12: operator: =
      13: call: 
       14: name: htonl
       15: argument_list: 
        16: argument: 
         17: expr: 
          18: literal: 0x7F000001
 19: else: 
  20: block: 
   21: block_content: 
    22: decl_stmt: 
     23: decl: 
      24: type: 
       25: name: 
        26: name: struct
        27: name: in_device
       28: modifier: *
      29: name: indev
    30: decl_stmt: 
     31: decl: 
      32: type: 
       33: name: 
        34: name: struct
        35: name: in_ifaddr
       36: modifier: *
      37: name: ifa
    38: expr_stmt: 
     39: expr: 
      40: name: newdst
      41: operator: =
      42: literal: 0
    43: expr_stmt: 
     44: expr: 
      45: call: 
       46: name: rcu_read_lock
       47: argument_list: 
    48: expr_stmt: 
     49: expr: 
      50: name: indev
      51: operator: =
      52: call: 
       53: name: __in_dev_get_rcu
       54: argument_list: 
        55: argument: 
         56: expr: 
          57: name: 
           58: name: skb
           59: operator: ->
           60: name: dev
    61: if_stmt: 
     62: if: 
      63: condition: 
       64: expr: 
        65: name: indev
        66: operator: &&
        67: name: 
         68: name: indev
         69: operator: ->
         70: name: ifa_list
      71: block: 
       72: block_content: 
        73: expr_stmt: 
         74: expr: 
          75: name: ifa
          76: operator: =
          77: name: 
           78: name: indev
           79: operator: ->
           80: name: ifa_list
        81: expr_stmt: 
         82: expr: 
          83: name: newdst
          84: operator: =
          85: name: 
           86: name: ifa
           87: operator: ->
           88: name: ifa_local
    89: expr_stmt: 
     90: expr: 
      91: call: 
       92: name: rcu_read_unlock
       93: argument_list: 
    94: if_stmt: 
     95: if: 
      96: condition: 
       97: expr: 
        98: operator: !
        99: name: newdst
      100: block: 
       101: block_content: 
        102: return: 
         103: expr: 
          104: name: NF_DROP
=====
0: else: 
 1: block: 
  2: block_content: 
   3: decl_stmt: 
    4: decl: 
     5: type: 
      6: name: 
       7: name: struct
       8: name: in_device
      9: modifier: *
     10: name: indev
   11: decl_stmt: 
    12: decl: 
     13: type: 
      14: name: 
       15: name: struct
       16: name: in_ifaddr
      17: modifier: *
     18: name: ifa
   19: expr_stmt: 
    20: expr: 
     21: name: newdst
     22: operator: =
     23: literal: 0
   24: expr_stmt: 
    25: expr: 
     26: call: 
      27: name: rcu_read_lock
      28: argument_list: 
   29: expr_stmt: 
    30: expr: 
     31: name: indev
     32: operator: =
     33: call: 
      34: name: __in_dev_get_rcu
      35: argument_list: 
       36: argument: 
        37: expr: 
         38: name: 
          39: name: skb
          40: operator: ->
          41: name: dev
   42: if_stmt: 
    43: if: 
     44: condition: 
      45: expr: 
       46: name: indev
       47: operator: !=
       48: name: NULL
     49: block: 
      50: block_content: 
       51: expr_stmt: 
        52: expr: 
         53: name: ifa
         54: operator: =
         55: name: 
          56: name: indev
          57: operator: ->
          58: name: ifa_list
       59: expr_stmt: 
        60: expr: 
         61: name: newdst
         62: operator: =
         63: name: 
          64: name: ifa
          65: operator: ->
          66: name: ifa_local
   67: expr_stmt: 
    68: expr: 
     69: call: 
      70: name: rcu_read_unlock
      71: argument_list: 
   72: if_stmt: 
    73: if: 
     74: condition: 
      75: expr: 
       76: operator: !
       77: name: newdst
     78: block: 
      79: block_content: 
       80: return: 
        81: expr: 
         82: name: NF_DROP

----------------------------------------
0: else: 
 1: block: 
  2: block_content: 
   3: decl_stmt: 
    4: decl: 
     5: type: 
      6: name: 
       7: name: struct
       8: name: in_device
      9: modifier: *
     10: name: indev
   11: decl_stmt: 
    12: decl: 
     13: type: 
      14: name: 
       15: name: struct
       16: name: in_ifaddr
      17: modifier: *
     18: name: ifa
   19: expr_stmt: 
    20: expr: 
     21: name: newdst
     22: operator: =
     23: literal: 0
   24: expr_stmt: 
    25: expr: 
     26: call: 
      27: name: rcu_read_lock
      28: argument_list: 
   29: expr_stmt: 
    30: expr: 
     31: name: indev
     32: operator: =
     33: call: 
      34: name: __in_dev_get_rcu
      35: argument_list: 
       36: argument: 
        37: expr: 
         38: name: 
          39: name: skb
          40: operator: ->
          41: name: dev
   42: if_stmt: 
    43: if: 
     44: condition: 
      45: expr: 
       46: name: indev
       47: operator: &&
       48: name: 
        49: name: indev
        50: operator: ->
        51: name: ifa_list
     52: block: 
      53: block_content: 
       54: expr_stmt: 
        55: expr: 
         56: name: ifa
         57: operator: =
         58: name: 
          59: name: indev
          60: operator: ->
          61: name: ifa_list
       62: expr_stmt: 
        63: expr: 
         64: name: newdst
         65: operator: =
         66: name: 
          67: name: ifa
          68: operator: ->
          69: name: ifa_local
   70: expr_stmt: 
    71: expr: 
     72: call: 
      73: name: rcu_read_unlock
      74: argument_list: 
   75: if_stmt: 
    76: if: 
     77: condition: 
      78: expr: 
       79: operator: !
       80: name: newdst
     81: block: 
      82: block_content: 
       83: return: 
        84: expr: 
         85: name: NF_DROP
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: in_device
     8: modifier: *
    9: name: indev
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: 
      14: name: struct
      15: name: in_ifaddr
     16: modifier: *
    17: name: ifa
  18: expr_stmt: 
   19: expr: 
    20: name: newdst
    21: operator: =
    22: literal: 0
  23: expr_stmt: 
   24: expr: 
    25: call: 
     26: name: rcu_read_lock
     27: argument_list: 
  28: expr_stmt: 
   29: expr: 
    30: name: indev
    31: operator: =
    32: call: 
     33: name: __in_dev_get_rcu
     34: argument_list: 
      35: argument: 
       36: expr: 
        37: name: 
         38: name: skb
         39: operator: ->
         40: name: dev
  41: if_stmt: 
   42: if: 
    43: condition: 
     44: expr: 
      45: name: indev
      46: operator: !=
      47: name: NULL
    48: block: 
     49: block_content: 
      50: expr_stmt: 
       51: expr: 
        52: name: ifa
        53: operator: =
        54: name: 
         55: name: indev
         56: operator: ->
         57: name: ifa_list
      58: expr_stmt: 
       59: expr: 
        60: name: newdst
        61: operator: =
        62: name: 
         63: name: ifa
         64: operator: ->
         65: name: ifa_local
  66: expr_stmt: 
   67: expr: 
    68: call: 
     69: name: rcu_read_unlock
     70: argument_list: 
  71: if_stmt: 
   72: if: 
    73: condition: 
     74: expr: 
      75: operator: !
      76: name: newdst
    77: block: 
     78: block_content: 
      79: return: 
       80: expr: 
        81: name: NF_DROP

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: in_device
     8: modifier: *
    9: name: indev
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: 
      14: name: struct
      15: name: in_ifaddr
     16: modifier: *
    17: name: ifa
  18: expr_stmt: 
   19: expr: 
    20: name: newdst
    21: operator: =
    22: literal: 0
  23: expr_stmt: 
   24: expr: 
    25: call: 
     26: name: rcu_read_lock
     27: argument_list: 
  28: expr_stmt: 
   29: expr: 
    30: name: indev
    31: operator: =
    32: call: 
     33: name: __in_dev_get_rcu
     34: argument_list: 
      35: argument: 
       36: expr: 
        37: name: 
         38: name: skb
         39: operator: ->
         40: name: dev
  41: if_stmt: 
   42: if: 
    43: condition: 
     44: expr: 
      45: name: indev
      46: operator: &&
      47: name: 
       48: name: indev
       49: operator: ->
       50: name: ifa_list
    51: block: 
     52: block_content: 
      53: expr_stmt: 
       54: expr: 
        55: name: ifa
        56: operator: =
        57: name: 
         58: name: indev
         59: operator: ->
         60: name: ifa_list
      61: expr_stmt: 
       62: expr: 
        63: name: newdst
        64: operator: =
        65: name: 
         66: name: ifa
         67: operator: ->
         68: name: ifa_local
  69: expr_stmt: 
   70: expr: 
    71: call: 
     72: name: rcu_read_unlock
     73: argument_list: 
  74: if_stmt: 
   75: if: 
    76: condition: 
     77: expr: 
      78: operator: !
      79: name: newdst
    80: block: 
     81: block_content: 
      82: return: 
       83: expr: 
        84: name: NF_DROP
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: in_device
    7: modifier: *
   8: name: indev
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: 
     13: name: struct
     14: name: in_ifaddr
    15: modifier: *
   16: name: ifa
 17: expr_stmt: 
  18: expr: 
   19: name: newdst
   20: operator: =
   21: literal: 0
 22: expr_stmt: 
  23: expr: 
   24: call: 
    25: name: rcu_read_lock
    26: argument_list: 
 27: expr_stmt: 
  28: expr: 
   29: name: indev
   30: operator: =
   31: call: 
    32: name: __in_dev_get_rcu
    33: argument_list: 
     34: argument: 
      35: expr: 
       36: name: 
        37: name: skb
        38: operator: ->
        39: name: dev
 40: if_stmt: 
  41: if: 
   42: condition: 
    43: expr: 
     44: name: indev
     45: operator: !=
     46: name: NULL
   47: block: 
    48: block_content: 
     49: expr_stmt: 
      50: expr: 
       51: name: ifa
       52: operator: =
       53: name: 
        54: name: indev
        55: operator: ->
        56: name: ifa_list
     57: expr_stmt: 
      58: expr: 
       59: name: newdst
       60: operator: =
       61: name: 
        62: name: ifa
        63: operator: ->
        64: name: ifa_local
 65: expr_stmt: 
  66: expr: 
   67: call: 
    68: name: rcu_read_unlock
    69: argument_list: 
 70: if_stmt: 
  71: if: 
   72: condition: 
    73: expr: 
     74: operator: !
     75: name: newdst
   76: block: 
    77: block_content: 
     78: return: 
      79: expr: 
       80: name: NF_DROP

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: in_device
    7: modifier: *
   8: name: indev
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: 
     13: name: struct
     14: name: in_ifaddr
    15: modifier: *
   16: name: ifa
 17: expr_stmt: 
  18: expr: 
   19: name: newdst
   20: operator: =
   21: literal: 0
 22: expr_stmt: 
  23: expr: 
   24: call: 
    25: name: rcu_read_lock
    26: argument_list: 
 27: expr_stmt: 
  28: expr: 
   29: name: indev
   30: operator: =
   31: call: 
    32: name: __in_dev_get_rcu
    33: argument_list: 
     34: argument: 
      35: expr: 
       36: name: 
        37: name: skb
        38: operator: ->
        39: name: dev
 40: if_stmt: 
  41: if: 
   42: condition: 
    43: expr: 
     44: name: indev
     45: operator: &&
     46: name: 
      47: name: indev
      48: operator: ->
      49: name: ifa_list
   50: block: 
    51: block_content: 
     52: expr_stmt: 
      53: expr: 
       54: name: ifa
       55: operator: =
       56: name: 
        57: name: indev
        58: operator: ->
        59: name: ifa_list
     60: expr_stmt: 
      61: expr: 
       62: name: newdst
       63: operator: =
       64: name: 
        65: name: ifa
        66: operator: ->
        67: name: ifa_local
 68: expr_stmt: 
  69: expr: 
   70: call: 
    71: name: rcu_read_unlock
    72: argument_list: 
 73: if_stmt: 
  74: if: 
   75: condition: 
    76: expr: 
     77: operator: !
     78: name: newdst
   79: block: 
    80: block_content: 
     81: return: 
      82: expr: 
       83: name: NF_DROP
=====
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: indev
    5: operator: !=
    6: name: NULL
  7: block: 
   8: block_content: 
    9: expr_stmt: 
     10: expr: 
      11: name: ifa
      12: operator: =
      13: name: 
       14: name: indev
       15: operator: ->
       16: name: ifa_list
    17: expr_stmt: 
     18: expr: 
      19: name: newdst
      20: operator: =
      21: name: 
       22: name: ifa
       23: operator: ->
       24: name: ifa_local

----------------------------------------
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: indev
    5: operator: &&
    6: name: 
     7: name: indev
     8: operator: ->
     9: name: ifa_list
  10: block: 
   11: block_content: 
    12: expr_stmt: 
     13: expr: 
      14: name: ifa
      15: operator: =
      16: name: 
       17: name: indev
       18: operator: ->
       19: name: ifa_list
    20: expr_stmt: 
     21: expr: 
      22: name: newdst
      23: operator: =
      24: name: 
       25: name: ifa
       26: operator: ->
       27: name: ifa_local
=====
0: if: 
 1: condition: 
  2: expr: 
   3: name: indev
   4: operator: !=
   5: name: NULL
 6: block: 
  7: block_content: 
   8: expr_stmt: 
    9: expr: 
     10: name: ifa
     11: operator: =
     12: name: 
      13: name: indev
      14: operator: ->
      15: name: ifa_list
   16: expr_stmt: 
    17: expr: 
     18: name: newdst
     19: operator: =
     20: name: 
      21: name: ifa
      22: operator: ->
      23: name: ifa_local

----------------------------------------
0: if: 
 1: condition: 
  2: expr: 
   3: name: indev
   4: operator: &&
   5: name: 
    6: name: indev
    7: operator: ->
    8: name: ifa_list
 9: block: 
  10: block_content: 
   11: expr_stmt: 
    12: expr: 
     13: name: ifa
     14: operator: =
     15: name: 
      16: name: indev
      17: operator: ->
      18: name: ifa_list
   19: expr_stmt: 
    20: expr: 
     21: name: newdst
     22: operator: =
     23: name: 
      24: name: ifa
      25: operator: ->
      26: name: ifa_local
=====
0: condition: 
 1: expr: 
  2: name: indev
  3: operator: !=
  4: name: NULL

----------------------------------------
0: condition: 
 1: expr: 
  2: name: indev
  3: operator: &&
  4: name: 
   5: name: indev
   6: operator: ->
   7: name: ifa_list
=====
0: expr: 
 1: name: indev
 2: operator: !=
 3: name: NULL

----------------------------------------
0: expr: 
 1: name: indev
 2: operator: &&
 3: name: 
  4: name: indev
  5: operator: ->
  6: name: ifa_list
=====
