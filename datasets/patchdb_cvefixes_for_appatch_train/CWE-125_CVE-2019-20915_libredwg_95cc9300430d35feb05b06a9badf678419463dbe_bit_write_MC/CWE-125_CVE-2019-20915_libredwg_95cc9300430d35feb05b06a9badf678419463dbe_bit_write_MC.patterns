0: unit: 
 1: macro: 
  2: name: bit_write_MC
  3: argument_list: 
   4: argument: 
   5: argument: 
 6: block: 
  7: block_content: 
   8: decl_stmt: 
    9: decl: 
     10: type: 
      11: name: int
     12: name: i
    13: decl: 
     14: type: 
     15: name: j
   16: decl_stmt: 
    17: decl: 
     18: type: 
      19: name: int
     20: name: negative
     21: init: 
      22: expr: 
       23: literal: 0
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: unsigned
      28: name: char
     29: name: 
      30: name: byte
      31: index: 
       32: expr: 
        33: literal: 5
   34: decl_stmt: 
    35: decl: 
     36: type: 
      37: name: BITCODE_UMC
     38: name: mask
     39: init: 
      40: expr: 
       41: literal: 0x0000007f
   42: decl_stmt: 
    43: decl: 
     44: type: 
      45: name: BITCODE_UMC
     46: name: value
     47: init: 
      48: expr: 
       49: operator: (
       50: name: BITCODE_UMC
       51: operator: )
       52: name: val
   53: if_stmt: 
    54: if: 
     55: condition: 
      56: expr: 
       57: name: val
       58: operator: <
       59: literal: 0
     60: block: 
      61: block_content: 
       62: expr_stmt: 
        63: expr: 
         64: name: negative
         65: operator: =
         66: literal: 1
       67: expr_stmt: 
        68: expr: 
         69: name: value
         70: operator: =
         71: operator: (
         72: name: BITCODE_UMC
         73: operator: )
         74: operator: -
         75: name: val
   76: for: 
    77: control: 
     78: init: 
      79: expr: 
       80: name: i
       81: operator: =
       82: literal: 4
      83: operator: ,
      84: expr: 
       85: name: j
       86: operator: =
       87: literal: 0
     88: condition: 
      89: expr: 
       90: name: i
       91: operator: >=
       92: literal: 0
     93: incr: 
      94: expr: 
       95: name: i
       96: operator: --
      97: operator: ,
      98: expr: 
       99: name: j
       100: operator: +=
       101: literal: 7
    102: block: 
     103: block_content: 
      104: expr_stmt: 
       105: expr: 
        106: name: 
         107: name: byte
         108: index: 
          109: expr: 
           110: name: i
        111: operator: =
        112: operator: (
        113: name: unsigned
        114: name: char
        115: operator: )
        116: operator: (
        117: operator: (
        118: name: value
        119: operator: &
        120: name: mask
        121: operator: )
        122: operator: >>
        123: name: j
        124: operator: )
      125: expr_stmt: 
       126: expr: 
        127: name: 
         128: name: byte
         129: index: 
          130: expr: 
           131: name: i
        132: operator: |=
        133: literal: 0x80
      134: expr_stmt: 
       135: expr: 
        136: name: mask
        137: operator: =
        138: name: mask
        139: operator: <<
        140: literal: 7
   141: for: 
    142: control: 
     143: init: 
      144: expr: 
       145: name: i
       146: operator: =
       147: literal: 0
     148: condition: 
      149: expr: 
       150: name: i
       151: operator: <
       152: literal: 4
     153: incr: 
      154: expr: 
       155: name: i
       156: operator: ++
    157: block: 
     158: block_content: 
      159: if_stmt: 
       160: if: 
        161: condition: 
         162: expr: 
          163: name: 
           164: name: byte
           165: index: 
            166: expr: 
             167: name: i
          168: operator: &
          169: literal: 0x7f
        170: block: 
         171: block_content: 
          172: break: 
   173: if_stmt: 
    174: if: 
     175: condition: 
      176: expr: 
       177: name: 
        178: name: byte
        179: index: 
         180: expr: 
          181: name: i
       182: operator: &
       183: literal: 0x40
     184: block: 
      185: block_content: 
       186: expr_stmt: 
        187: expr: 
         188: name: i
         189: operator: --
   190: expr_stmt: 
    191: expr: 
     192: name: 
      193: name: byte
      194: index: 
       195: expr: 
        196: name: i
     197: operator: &=
     198: literal: 0x7f
   199: if_stmt: 
    200: if: 
     201: condition: 
      202: expr: 
       203: name: negative
     204: block: 
      205: block_content: 
       206: expr_stmt: 
        207: expr: 
         208: name: 
          209: name: byte
          210: index: 
           211: expr: 
            212: name: i
         213: operator: |=
         214: literal: 0x40
   215: for: 
    216: control: 
     217: init: 
      218: expr: 
       219: name: j
       220: operator: =
       221: literal: 4
     222: condition: 
      223: expr: 
       224: name: j
       225: operator: >=
       226: name: i
     227: incr: 
      228: expr: 
       229: name: j
       230: operator: --
    231: block: 
     232: block_content: 
      233: expr_stmt: 
       234: expr: 
        235: call: 
         236: name: bit_write_RC
         237: argument_list: 
          238: argument: 
           239: expr: 
            240: name: dat
          241: argument: 
           242: expr: 
            243: name: 
             244: name: byte
             245: index: 
              246: expr: 
               247: name: j

----------------------------------------
0: unit: 
 1: macro: 
  2: name: bit_write_MC
  3: argument_list: 
   4: argument: 
   5: argument: 
 6: block: 
  7: block_content: 
   8: decl_stmt: 
    9: decl: 
     10: type: 
      11: name: int
     12: name: i
    13: decl: 
     14: type: 
     15: name: j
   16: decl_stmt: 
    17: decl: 
     18: type: 
      19: name: int
     20: name: negative
     21: init: 
      22: expr: 
       23: literal: 0
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: unsigned
      28: name: char
     29: name: 
      30: name: byte
      31: index: 
       32: expr: 
        33: literal: 5
   34: decl_stmt: 
    35: decl: 
     36: type: 
      37: name: BITCODE_UMC
     38: name: mask
     39: init: 
      40: expr: 
       41: literal: 0x0000007f
   42: decl_stmt: 
    43: decl: 
     44: type: 
      45: name: BITCODE_UMC
     46: name: value
     47: init: 
      48: expr: 
       49: operator: (
       50: name: BITCODE_UMC
       51: operator: )
       52: name: val
   53: if_stmt: 
    54: if: 
     55: condition: 
      56: expr: 
       57: name: val
       58: operator: <
       59: literal: 0
     60: block: 
      61: block_content: 
       62: expr_stmt: 
        63: expr: 
         64: name: negative
         65: operator: =
         66: literal: 1
       67: expr_stmt: 
        68: expr: 
         69: name: value
         70: operator: =
         71: operator: (
         72: name: BITCODE_UMC
         73: operator: )
         74: operator: -
         75: name: val
   76: for: 
    77: control: 
     78: init: 
      79: expr: 
       80: name: i
       81: operator: =
       82: literal: 4
      83: operator: ,
      84: expr: 
       85: name: j
       86: operator: =
       87: literal: 0
     88: condition: 
      89: expr: 
       90: name: i
       91: operator: >=
       92: literal: 0
     93: incr: 
      94: expr: 
       95: name: i
       96: operator: --
      97: operator: ,
      98: expr: 
       99: name: j
       100: operator: +=
       101: literal: 7
    102: block: 
     103: block_content: 
      104: expr_stmt: 
       105: expr: 
        106: name: 
         107: name: byte
         108: index: 
          109: expr: 
           110: name: i
        111: operator: =
        112: operator: (
        113: name: unsigned
        114: name: char
        115: operator: )
        116: operator: (
        117: operator: (
        118: name: value
        119: operator: &
        120: name: mask
        121: operator: )
        122: operator: >>
        123: name: j
        124: operator: )
      125: expr_stmt: 
       126: expr: 
        127: name: 
         128: name: byte
         129: index: 
          130: expr: 
           131: name: i
        132: operator: |=
        133: literal: 0x80
      134: expr_stmt: 
       135: expr: 
        136: name: mask
        137: operator: =
        138: name: mask
        139: operator: <<
        140: literal: 7
   141: for: 
    142: control: 
     143: init: 
      144: expr: 
       145: name: i
       146: operator: =
       147: literal: 0
     148: condition: 
      149: expr: 
       150: name: i
       151: operator: <
       152: literal: 4
     153: incr: 
      154: expr: 
       155: name: i
       156: operator: ++
    157: block: 
     158: block_content: 
      159: if_stmt: 
       160: if: 
        161: condition: 
         162: expr: 
          163: name: 
           164: name: byte
           165: index: 
            166: expr: 
             167: name: i
          168: operator: &
          169: literal: 0x7f
        170: block: 
         171: block_content: 
          172: break: 
   173: if_stmt: 
    174: if: 
     175: condition: 
      176: expr: 
       177: name: 
        178: name: byte
        179: index: 
         180: expr: 
          181: name: i
       182: operator: &
       183: literal: 0x40
       184: operator: &&
       185: name: i
       186: operator: >
       187: literal: 0
     188: block: 
      189: block_content: 
       190: expr_stmt: 
        191: expr: 
         192: name: i
         193: operator: --
   194: expr_stmt: 
    195: expr: 
     196: name: 
      197: name: byte
      198: index: 
       199: expr: 
        200: name: i
     201: operator: &=
     202: literal: 0x7f
   203: if_stmt: 
    204: if: 
     205: condition: 
      206: expr: 
       207: name: negative
     208: block: 
      209: block_content: 
       210: expr_stmt: 
        211: expr: 
         212: name: 
          213: name: byte
          214: index: 
           215: expr: 
            216: name: i
         217: operator: |=
         218: literal: 0x40
   219: for: 
    220: control: 
     221: init: 
      222: expr: 
       223: name: j
       224: operator: =
       225: literal: 4
     226: condition: 
      227: expr: 
       228: name: j
       229: operator: >=
       230: name: i
     231: incr: 
      232: expr: 
       233: name: j
       234: operator: --
    235: block: 
     236: block_content: 
      237: expr_stmt: 
       238: expr: 
        239: call: 
         240: name: bit_write_RC
         241: argument_list: 
          242: argument: 
           243: expr: 
            244: name: dat
          245: argument: 
           246: expr: 
            247: name: 
             248: name: byte
             249: index: 
              250: expr: 
               251: name: j
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: i
   7: decl: 
    8: type: 
    9: name: j
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: int
    14: name: negative
    15: init: 
     16: expr: 
      17: literal: 0
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: name: unsigned
     22: name: char
    23: name: 
     24: name: byte
     25: index: 
      26: expr: 
       27: literal: 5
  28: decl_stmt: 
   29: decl: 
    30: type: 
     31: name: BITCODE_UMC
    32: name: mask
    33: init: 
     34: expr: 
      35: literal: 0x0000007f
  36: decl_stmt: 
   37: decl: 
    38: type: 
     39: name: BITCODE_UMC
    40: name: value
    41: init: 
     42: expr: 
      43: operator: (
      44: name: BITCODE_UMC
      45: operator: )
      46: name: val
  47: if_stmt: 
   48: if: 
    49: condition: 
     50: expr: 
      51: name: val
      52: operator: <
      53: literal: 0
    54: block: 
     55: block_content: 
      56: expr_stmt: 
       57: expr: 
        58: name: negative
        59: operator: =
        60: literal: 1
      61: expr_stmt: 
       62: expr: 
        63: name: value
        64: operator: =
        65: operator: (
        66: name: BITCODE_UMC
        67: operator: )
        68: operator: -
        69: name: val
  70: for: 
   71: control: 
    72: init: 
     73: expr: 
      74: name: i
      75: operator: =
      76: literal: 4
     77: operator: ,
     78: expr: 
      79: name: j
      80: operator: =
      81: literal: 0
    82: condition: 
     83: expr: 
      84: name: i
      85: operator: >=
      86: literal: 0
    87: incr: 
     88: expr: 
      89: name: i
      90: operator: --
     91: operator: ,
     92: expr: 
      93: name: j
      94: operator: +=
      95: literal: 7
   96: block: 
    97: block_content: 
     98: expr_stmt: 
      99: expr: 
       100: name: 
        101: name: byte
        102: index: 
         103: expr: 
          104: name: i
       105: operator: =
       106: operator: (
       107: name: unsigned
       108: name: char
       109: operator: )
       110: operator: (
       111: operator: (
       112: name: value
       113: operator: &
       114: name: mask
       115: operator: )
       116: operator: >>
       117: name: j
       118: operator: )
     119: expr_stmt: 
      120: expr: 
       121: name: 
        122: name: byte
        123: index: 
         124: expr: 
          125: name: i
       126: operator: |=
       127: literal: 0x80
     128: expr_stmt: 
      129: expr: 
       130: name: mask
       131: operator: =
       132: name: mask
       133: operator: <<
       134: literal: 7
  135: for: 
   136: control: 
    137: init: 
     138: expr: 
      139: name: i
      140: operator: =
      141: literal: 0
    142: condition: 
     143: expr: 
      144: name: i
      145: operator: <
      146: literal: 4
    147: incr: 
     148: expr: 
      149: name: i
      150: operator: ++
   151: block: 
    152: block_content: 
     153: if_stmt: 
      154: if: 
       155: condition: 
        156: expr: 
         157: name: 
          158: name: byte
          159: index: 
           160: expr: 
            161: name: i
         162: operator: &
         163: literal: 0x7f
       164: block: 
        165: block_content: 
         166: break: 
  167: if_stmt: 
   168: if: 
    169: condition: 
     170: expr: 
      171: name: 
       172: name: byte
       173: index: 
        174: expr: 
         175: name: i
      176: operator: &
      177: literal: 0x40
    178: block: 
     179: block_content: 
      180: expr_stmt: 
       181: expr: 
        182: name: i
        183: operator: --
  184: expr_stmt: 
   185: expr: 
    186: name: 
     187: name: byte
     188: index: 
      189: expr: 
       190: name: i
    191: operator: &=
    192: literal: 0x7f
  193: if_stmt: 
   194: if: 
    195: condition: 
     196: expr: 
      197: name: negative
    198: block: 
     199: block_content: 
      200: expr_stmt: 
       201: expr: 
        202: name: 
         203: name: byte
         204: index: 
          205: expr: 
           206: name: i
        207: operator: |=
        208: literal: 0x40
  209: for: 
   210: control: 
    211: init: 
     212: expr: 
      213: name: j
      214: operator: =
      215: literal: 4
    216: condition: 
     217: expr: 
      218: name: j
      219: operator: >=
      220: name: i
    221: incr: 
     222: expr: 
      223: name: j
      224: operator: --
   225: block: 
    226: block_content: 
     227: expr_stmt: 
      228: expr: 
       229: call: 
        230: name: bit_write_RC
        231: argument_list: 
         232: argument: 
          233: expr: 
           234: name: dat
         235: argument: 
          236: expr: 
           237: name: 
            238: name: byte
            239: index: 
             240: expr: 
              241: name: j

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: i
   7: decl: 
    8: type: 
    9: name: j
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: int
    14: name: negative
    15: init: 
     16: expr: 
      17: literal: 0
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: name: unsigned
     22: name: char
    23: name: 
     24: name: byte
     25: index: 
      26: expr: 
       27: literal: 5
  28: decl_stmt: 
   29: decl: 
    30: type: 
     31: name: BITCODE_UMC
    32: name: mask
    33: init: 
     34: expr: 
      35: literal: 0x0000007f
  36: decl_stmt: 
   37: decl: 
    38: type: 
     39: name: BITCODE_UMC
    40: name: value
    41: init: 
     42: expr: 
      43: operator: (
      44: name: BITCODE_UMC
      45: operator: )
      46: name: val
  47: if_stmt: 
   48: if: 
    49: condition: 
     50: expr: 
      51: name: val
      52: operator: <
      53: literal: 0
    54: block: 
     55: block_content: 
      56: expr_stmt: 
       57: expr: 
        58: name: negative
        59: operator: =
        60: literal: 1
      61: expr_stmt: 
       62: expr: 
        63: name: value
        64: operator: =
        65: operator: (
        66: name: BITCODE_UMC
        67: operator: )
        68: operator: -
        69: name: val
  70: for: 
   71: control: 
    72: init: 
     73: expr: 
      74: name: i
      75: operator: =
      76: literal: 4
     77: operator: ,
     78: expr: 
      79: name: j
      80: operator: =
      81: literal: 0
    82: condition: 
     83: expr: 
      84: name: i
      85: operator: >=
      86: literal: 0
    87: incr: 
     88: expr: 
      89: name: i
      90: operator: --
     91: operator: ,
     92: expr: 
      93: name: j
      94: operator: +=
      95: literal: 7
   96: block: 
    97: block_content: 
     98: expr_stmt: 
      99: expr: 
       100: name: 
        101: name: byte
        102: index: 
         103: expr: 
          104: name: i
       105: operator: =
       106: operator: (
       107: name: unsigned
       108: name: char
       109: operator: )
       110: operator: (
       111: operator: (
       112: name: value
       113: operator: &
       114: name: mask
       115: operator: )
       116: operator: >>
       117: name: j
       118: operator: )
     119: expr_stmt: 
      120: expr: 
       121: name: 
        122: name: byte
        123: index: 
         124: expr: 
          125: name: i
       126: operator: |=
       127: literal: 0x80
     128: expr_stmt: 
      129: expr: 
       130: name: mask
       131: operator: =
       132: name: mask
       133: operator: <<
       134: literal: 7
  135: for: 
   136: control: 
    137: init: 
     138: expr: 
      139: name: i
      140: operator: =
      141: literal: 0
    142: condition: 
     143: expr: 
      144: name: i
      145: operator: <
      146: literal: 4
    147: incr: 
     148: expr: 
      149: name: i
      150: operator: ++
   151: block: 
    152: block_content: 
     153: if_stmt: 
      154: if: 
       155: condition: 
        156: expr: 
         157: name: 
          158: name: byte
          159: index: 
           160: expr: 
            161: name: i
         162: operator: &
         163: literal: 0x7f
       164: block: 
        165: block_content: 
         166: break: 
  167: if_stmt: 
   168: if: 
    169: condition: 
     170: expr: 
      171: name: 
       172: name: byte
       173: index: 
        174: expr: 
         175: name: i
      176: operator: &
      177: literal: 0x40
      178: operator: &&
      179: name: i
      180: operator: >
      181: literal: 0
    182: block: 
     183: block_content: 
      184: expr_stmt: 
       185: expr: 
        186: name: i
        187: operator: --
  188: expr_stmt: 
   189: expr: 
    190: name: 
     191: name: byte
     192: index: 
      193: expr: 
       194: name: i
    195: operator: &=
    196: literal: 0x7f
  197: if_stmt: 
   198: if: 
    199: condition: 
     200: expr: 
      201: name: negative
    202: block: 
     203: block_content: 
      204: expr_stmt: 
       205: expr: 
        206: name: 
         207: name: byte
         208: index: 
          209: expr: 
           210: name: i
        211: operator: |=
        212: literal: 0x40
  213: for: 
   214: control: 
    215: init: 
     216: expr: 
      217: name: j
      218: operator: =
      219: literal: 4
    220: condition: 
     221: expr: 
      222: name: j
      223: operator: >=
      224: name: i
    225: incr: 
     226: expr: 
      227: name: j
      228: operator: --
   229: block: 
    230: block_content: 
     231: expr_stmt: 
      232: expr: 
       233: call: 
        234: name: bit_write_RC
        235: argument_list: 
         236: argument: 
          237: expr: 
           238: name: dat
         239: argument: 
          240: expr: 
           241: name: 
            242: name: byte
            243: index: 
             244: expr: 
              245: name: j
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: i
  6: decl: 
   7: type: 
   8: name: j
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: int
   13: name: negative
   14: init: 
    15: expr: 
     16: literal: 0
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: name: unsigned
    21: name: char
   22: name: 
    23: name: byte
    24: index: 
     25: expr: 
      26: literal: 5
 27: decl_stmt: 
  28: decl: 
   29: type: 
    30: name: BITCODE_UMC
   31: name: mask
   32: init: 
    33: expr: 
     34: literal: 0x0000007f
 35: decl_stmt: 
  36: decl: 
   37: type: 
    38: name: BITCODE_UMC
   39: name: value
   40: init: 
    41: expr: 
     42: operator: (
     43: name: BITCODE_UMC
     44: operator: )
     45: name: val
 46: if_stmt: 
  47: if: 
   48: condition: 
    49: expr: 
     50: name: val
     51: operator: <
     52: literal: 0
   53: block: 
    54: block_content: 
     55: expr_stmt: 
      56: expr: 
       57: name: negative
       58: operator: =
       59: literal: 1
     60: expr_stmt: 
      61: expr: 
       62: name: value
       63: operator: =
       64: operator: (
       65: name: BITCODE_UMC
       66: operator: )
       67: operator: -
       68: name: val
 69: for: 
  70: control: 
   71: init: 
    72: expr: 
     73: name: i
     74: operator: =
     75: literal: 4
    76: operator: ,
    77: expr: 
     78: name: j
     79: operator: =
     80: literal: 0
   81: condition: 
    82: expr: 
     83: name: i
     84: operator: >=
     85: literal: 0
   86: incr: 
    87: expr: 
     88: name: i
     89: operator: --
    90: operator: ,
    91: expr: 
     92: name: j
     93: operator: +=
     94: literal: 7
  95: block: 
   96: block_content: 
    97: expr_stmt: 
     98: expr: 
      99: name: 
       100: name: byte
       101: index: 
        102: expr: 
         103: name: i
      104: operator: =
      105: operator: (
      106: name: unsigned
      107: name: char
      108: operator: )
      109: operator: (
      110: operator: (
      111: name: value
      112: operator: &
      113: name: mask
      114: operator: )
      115: operator: >>
      116: name: j
      117: operator: )
    118: expr_stmt: 
     119: expr: 
      120: name: 
       121: name: byte
       122: index: 
        123: expr: 
         124: name: i
      125: operator: |=
      126: literal: 0x80
    127: expr_stmt: 
     128: expr: 
      129: name: mask
      130: operator: =
      131: name: mask
      132: operator: <<
      133: literal: 7
 134: for: 
  135: control: 
   136: init: 
    137: expr: 
     138: name: i
     139: operator: =
     140: literal: 0
   141: condition: 
    142: expr: 
     143: name: i
     144: operator: <
     145: literal: 4
   146: incr: 
    147: expr: 
     148: name: i
     149: operator: ++
  150: block: 
   151: block_content: 
    152: if_stmt: 
     153: if: 
      154: condition: 
       155: expr: 
        156: name: 
         157: name: byte
         158: index: 
          159: expr: 
           160: name: i
        161: operator: &
        162: literal: 0x7f
      163: block: 
       164: block_content: 
        165: break: 
 166: if_stmt: 
  167: if: 
   168: condition: 
    169: expr: 
     170: name: 
      171: name: byte
      172: index: 
       173: expr: 
        174: name: i
     175: operator: &
     176: literal: 0x40
   177: block: 
    178: block_content: 
     179: expr_stmt: 
      180: expr: 
       181: name: i
       182: operator: --
 183: expr_stmt: 
  184: expr: 
   185: name: 
    186: name: byte
    187: index: 
     188: expr: 
      189: name: i
   190: operator: &=
   191: literal: 0x7f
 192: if_stmt: 
  193: if: 
   194: condition: 
    195: expr: 
     196: name: negative
   197: block: 
    198: block_content: 
     199: expr_stmt: 
      200: expr: 
       201: name: 
        202: name: byte
        203: index: 
         204: expr: 
          205: name: i
       206: operator: |=
       207: literal: 0x40
 208: for: 
  209: control: 
   210: init: 
    211: expr: 
     212: name: j
     213: operator: =
     214: literal: 4
   215: condition: 
    216: expr: 
     217: name: j
     218: operator: >=
     219: name: i
   220: incr: 
    221: expr: 
     222: name: j
     223: operator: --
  224: block: 
   225: block_content: 
    226: expr_stmt: 
     227: expr: 
      228: call: 
       229: name: bit_write_RC
       230: argument_list: 
        231: argument: 
         232: expr: 
          233: name: dat
        234: argument: 
         235: expr: 
          236: name: 
           237: name: byte
           238: index: 
            239: expr: 
             240: name: j

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: i
  6: decl: 
   7: type: 
   8: name: j
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: int
   13: name: negative
   14: init: 
    15: expr: 
     16: literal: 0
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: name: unsigned
    21: name: char
   22: name: 
    23: name: byte
    24: index: 
     25: expr: 
      26: literal: 5
 27: decl_stmt: 
  28: decl: 
   29: type: 
    30: name: BITCODE_UMC
   31: name: mask
   32: init: 
    33: expr: 
     34: literal: 0x0000007f
 35: decl_stmt: 
  36: decl: 
   37: type: 
    38: name: BITCODE_UMC
   39: name: value
   40: init: 
    41: expr: 
     42: operator: (
     43: name: BITCODE_UMC
     44: operator: )
     45: name: val
 46: if_stmt: 
  47: if: 
   48: condition: 
    49: expr: 
     50: name: val
     51: operator: <
     52: literal: 0
   53: block: 
    54: block_content: 
     55: expr_stmt: 
      56: expr: 
       57: name: negative
       58: operator: =
       59: literal: 1
     60: expr_stmt: 
      61: expr: 
       62: name: value
       63: operator: =
       64: operator: (
       65: name: BITCODE_UMC
       66: operator: )
       67: operator: -
       68: name: val
 69: for: 
  70: control: 
   71: init: 
    72: expr: 
     73: name: i
     74: operator: =
     75: literal: 4
    76: operator: ,
    77: expr: 
     78: name: j
     79: operator: =
     80: literal: 0
   81: condition: 
    82: expr: 
     83: name: i
     84: operator: >=
     85: literal: 0
   86: incr: 
    87: expr: 
     88: name: i
     89: operator: --
    90: operator: ,
    91: expr: 
     92: name: j
     93: operator: +=
     94: literal: 7
  95: block: 
   96: block_content: 
    97: expr_stmt: 
     98: expr: 
      99: name: 
       100: name: byte
       101: index: 
        102: expr: 
         103: name: i
      104: operator: =
      105: operator: (
      106: name: unsigned
      107: name: char
      108: operator: )
      109: operator: (
      110: operator: (
      111: name: value
      112: operator: &
      113: name: mask
      114: operator: )
      115: operator: >>
      116: name: j
      117: operator: )
    118: expr_stmt: 
     119: expr: 
      120: name: 
       121: name: byte
       122: index: 
        123: expr: 
         124: name: i
      125: operator: |=
      126: literal: 0x80
    127: expr_stmt: 
     128: expr: 
      129: name: mask
      130: operator: =
      131: name: mask
      132: operator: <<
      133: literal: 7
 134: for: 
  135: control: 
   136: init: 
    137: expr: 
     138: name: i
     139: operator: =
     140: literal: 0
   141: condition: 
    142: expr: 
     143: name: i
     144: operator: <
     145: literal: 4
   146: incr: 
    147: expr: 
     148: name: i
     149: operator: ++
  150: block: 
   151: block_content: 
    152: if_stmt: 
     153: if: 
      154: condition: 
       155: expr: 
        156: name: 
         157: name: byte
         158: index: 
          159: expr: 
           160: name: i
        161: operator: &
        162: literal: 0x7f
      163: block: 
       164: block_content: 
        165: break: 
 166: if_stmt: 
  167: if: 
   168: condition: 
    169: expr: 
     170: name: 
      171: name: byte
      172: index: 
       173: expr: 
        174: name: i
     175: operator: &
     176: literal: 0x40
     177: operator: &&
     178: name: i
     179: operator: >
     180: literal: 0
   181: block: 
    182: block_content: 
     183: expr_stmt: 
      184: expr: 
       185: name: i
       186: operator: --
 187: expr_stmt: 
  188: expr: 
   189: name: 
    190: name: byte
    191: index: 
     192: expr: 
      193: name: i
   194: operator: &=
   195: literal: 0x7f
 196: if_stmt: 
  197: if: 
   198: condition: 
    199: expr: 
     200: name: negative
   201: block: 
    202: block_content: 
     203: expr_stmt: 
      204: expr: 
       205: name: 
        206: name: byte
        207: index: 
         208: expr: 
          209: name: i
       210: operator: |=
       211: literal: 0x40
 212: for: 
  213: control: 
   214: init: 
    215: expr: 
     216: name: j
     217: operator: =
     218: literal: 4
   219: condition: 
    220: expr: 
     221: name: j
     222: operator: >=
     223: name: i
   224: incr: 
    225: expr: 
     226: name: j
     227: operator: --
  228: block: 
   229: block_content: 
    230: expr_stmt: 
     231: expr: 
      232: call: 
       233: name: bit_write_RC
       234: argument_list: 
        235: argument: 
         236: expr: 
          237: name: dat
        238: argument: 
         239: expr: 
          240: name: 
           241: name: byte
           242: index: 
            243: expr: 
             244: name: j
=====
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: 
     5: name: byte
     6: index: 
      7: expr: 
       8: name: i
    9: operator: &
    10: literal: 0x40
  11: block: 
   12: block_content: 
    13: expr_stmt: 
     14: expr: 
      15: name: i
      16: operator: --

----------------------------------------
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: 
     5: name: byte
     6: index: 
      7: expr: 
       8: name: i
    9: operator: &
    10: literal: 0x40
    11: operator: &&
    12: name: i
    13: operator: >
    14: literal: 0
  15: block: 
   16: block_content: 
    17: expr_stmt: 
     18: expr: 
      19: name: i
      20: operator: --
=====
0: if: 
 1: condition: 
  2: expr: 
   3: name: 
    4: name: byte
    5: index: 
     6: expr: 
      7: name: i
   8: operator: &
   9: literal: 0x40
 10: block: 
  11: block_content: 
   12: expr_stmt: 
    13: expr: 
     14: name: i
     15: operator: --

----------------------------------------
0: if: 
 1: condition: 
  2: expr: 
   3: name: 
    4: name: byte
    5: index: 
     6: expr: 
      7: name: i
   8: operator: &
   9: literal: 0x40
   10: operator: &&
   11: name: i
   12: operator: >
   13: literal: 0
 14: block: 
  15: block_content: 
   16: expr_stmt: 
    17: expr: 
     18: name: i
     19: operator: --
=====
0: condition: 
 1: expr: 
  2: name: 
   3: name: byte
   4: index: 
    5: expr: 
     6: name: i
  7: operator: &
  8: literal: 0x40

----------------------------------------
0: condition: 
 1: expr: 
  2: name: 
   3: name: byte
   4: index: 
    5: expr: 
     6: name: i
  7: operator: &
  8: literal: 0x40
  9: operator: &&
  10: name: i
  11: operator: >
  12: literal: 0
=====
0: expr: 
 1: name: 
  2: name: byte
  3: index: 
   4: expr: 
    5: name: i
 6: operator: &
 7: literal: 0x40

----------------------------------------
0: expr: 
 1: name: 
  2: name: byte
  3: index: 
   4: expr: 
    5: name: i
 6: operator: &
 7: literal: 0x40
 8: operator: &&
 9: name: i
 10: operator: >
 11: literal: 0
=====
