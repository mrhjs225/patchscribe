0: unit: 
 1: function: 
  2: type: 
   3: name: s32
  4: name: vvc_parse_picture_header
  5: parameter_list: 
   6: parameter: 
    7: decl: 
     8: type: 
      9: name: GF_BitStream
      10: modifier: *
     11: name: bs
   12: parameter: 
    13: decl: 
     14: type: 
      15: name: VVCState
      16: modifier: *
     17: name: vvc
   18: parameter: 
    19: decl: 
     20: type: 
      21: name: VVCSliceInfo
      22: modifier: *
     23: name: si
  24: block: 
   25: block_content: 
    26: decl_stmt: 
     27: decl: 
      28: type: 
       29: name: u32
      30: name: pps_id
    31: expr_stmt: 
     32: expr: 
      33: name: 
       34: name: si
       35: operator: ->
       36: name: irap_or_gdr_pic
      37: operator: =
      38: call: 
       39: name: gf_bs_read_int_log
       40: argument_list: 
        41: argument: 
         42: expr: 
          43: name: bs
        44: argument: 
         45: expr: 
          46: literal: 1
        47: argument: 
         48: expr: 
          49: literal: "irap_or_gdr_pic"
    50: expr_stmt: 
     51: expr: 
      52: name: 
       53: name: si
       54: operator: ->
       55: name: non_ref_pic
      56: operator: =
      57: call: 
       58: name: gf_bs_read_int_log
       59: argument_list: 
        60: argument: 
         61: expr: 
          62: name: bs
        63: argument: 
         64: expr: 
          65: literal: 1
        66: argument: 
         67: expr: 
          68: literal: "non_ref_pic"
    69: if_stmt: 
     70: if: 
      71: condition: 
       72: expr: 
        73: name: 
         74: name: si
         75: operator: ->
         76: name: irap_or_gdr_pic
      77: block: 
       78: block_content: 
        79: expr_stmt: 
         80: expr: 
          81: name: 
           82: name: si
           83: operator: ->
           84: name: gdr_pic
          85: operator: =
          86: call: 
           87: name: gf_bs_read_int_log
           88: argument_list: 
            89: argument: 
             90: expr: 
              91: name: bs
            92: argument: 
             93: expr: 
              94: literal: 1
            95: argument: 
             96: expr: 
              97: literal: "gdr_pic"
    98: if_stmt: 
     99: if: 
      100: condition: 
       101: expr: 
        102: operator: (
        103: name: 
         104: name: si
         105: operator: ->
         106: name: inter_slice_allowed_flag
        107: operator: =
        108: call: 
         109: name: gf_bs_read_int_log
         110: argument_list: 
          111: argument: 
           112: expr: 
            113: name: bs
          114: argument: 
           115: expr: 
            116: literal: 1
          117: argument: 
           118: expr: 
            119: literal: "inter_slice_allowed_flag"
        120: operator: )
      121: block: 
       122: block_content: 
        123: expr_stmt: 
         124: expr: 
          125: name: 
           126: name: si
           127: operator: ->
           128: name: intra_slice_allowed_flag
          129: operator: =
          130: call: 
           131: name: gf_bs_read_int_log
           132: argument_list: 
            133: argument: 
             134: expr: 
              135: name: bs
            136: argument: 
             137: expr: 
              138: literal: 1
            139: argument: 
             140: expr: 
              141: literal: "intra_slice_allowed_flag"
    142: expr_stmt: 
     143: expr: 
      144: name: pps_id
      145: operator: =
      146: call: 
       147: name: gf_bs_read_ue_log
       148: argument_list: 
        149: argument: 
         150: expr: 
          151: name: bs
        152: argument: 
         153: expr: 
          154: literal: "pps_id"
    155: if_stmt: 
     156: if: 
      157: condition: 
       158: expr: 
        159: name: pps_id
        160: operator: >=
        161: literal: 64
      162: block: 
       163: block_content: 
        164: return: 
         165: expr: 
          166: operator: -
          167: literal: 1
    168: expr_stmt: 
     169: expr: 
      170: name: 
       171: name: si
       172: operator: ->
       173: name: pps
      174: operator: =
      175: operator: &
      176: name: 
       177: name: vvc
       178: operator: ->
       179: name: pps
       180: index: 
        181: expr: 
         182: name: pps_id
    183: expr_stmt: 
     184: expr: 
      185: name: 
       186: name: si
       187: operator: ->
       188: name: sps
      189: operator: =
      190: operator: &
      191: name: 
       192: name: vvc
       193: operator: ->
       194: name: sps
       195: index: 
        196: expr: 
         197: name: 
          198: name: si
          199: operator: ->
          200: name: pps
          201: operator: ->
          202: name: sps_id
    203: expr_stmt: 
     204: expr: 
      205: name: 
       206: name: si
       207: operator: ->
       208: name: poc_lsb
      209: operator: =
      210: call: 
       211: name: gf_bs_read_int_log
       212: argument_list: 
        213: argument: 
         214: expr: 
          215: name: bs
        216: argument: 
         217: expr: 
          218: name: 
           219: name: si
           220: operator: ->
           221: name: sps
           222: operator: ->
           223: name: log2_max_poc_lsb
        224: argument: 
         225: expr: 
          226: literal: "poc_lsb"
    227: expr_stmt: 
     228: expr: 
      229: name: 
       230: name: si
       231: operator: ->
       232: name: recovery_point_valid
      233: operator: =
      234: literal: 0
    235: expr_stmt: 
     236: expr: 
      237: name: 
       238: name: si
       239: operator: ->
       240: name: gdr_recovery_count
      241: operator: =
      242: literal: 0
    243: if_stmt: 
     244: if: 
      245: condition: 
       246: expr: 
        247: name: 
         248: name: si
         249: operator: ->
         250: name: gdr_pic
      251: block: 
       252: block_content: 
        253: expr_stmt: 
         254: expr: 
          255: name: 
           256: name: si
           257: operator: ->
           258: name: recovery_point_valid
          259: operator: =
          260: literal: 1
        261: expr_stmt: 
         262: expr: 
          263: name: 
           264: name: si
           265: operator: ->
           266: name: gdr_recovery_count
          267: operator: =
          268: call: 
           269: name: gf_bs_read_ue_log
           270: argument_list: 
            271: argument: 
             272: expr: 
              273: name: bs
            274: argument: 
             275: expr: 
              276: literal: "gdr_recovery_count"
    277: expr_stmt: 
     278: expr: 
      279: call: 
       280: name: gf_bs_read_int_log
       281: argument_list: 
        282: argument: 
         283: expr: 
          284: name: bs
        285: argument: 
         286: expr: 
          287: name: 
           288: name: si
           289: operator: ->
           290: name: sps
           291: operator: ->
           292: name: ph_num_extra_bits
        293: argument: 
         294: expr: 
          295: literal: "ph_extra_bits"
    296: if_stmt: 
     297: if: 
      298: condition: 
       299: expr: 
        300: name: 
         301: name: si
         302: operator: ->
         303: name: sps
         304: operator: ->
         305: name: poc_msb_cycle_flag
      306: block: 
       307: block_content: 
        308: if_stmt: 
         309: if: 
          310: condition: 
           311: expr: 
            312: operator: (
            313: name: 
             314: name: si
             315: operator: ->
             316: name: poc_msb_cycle_present_flag
            317: operator: =
            318: call: 
             319: name: gf_bs_read_int_log
             320: argument_list: 
              321: argument: 
               322: expr: 
                323: name: bs
              324: argument: 
               325: expr: 
                326: literal: 1
              327: argument: 
               328: expr: 
                329: literal: "poc_msb_cycle_present_flag"
            330: operator: )
          331: block: 
           332: block_content: 
            333: expr_stmt: 
             334: expr: 
              335: name: 
               336: name: si
               337: operator: ->
               338: name: poc_msb_cycle
              339: operator: =
              340: call: 
               341: name: gf_bs_read_int_log
               342: argument_list: 
                343: argument: 
                 344: expr: 
                  345: name: bs
                346: argument: 
                 347: expr: 
                  348: name: 
                   349: name: si
                   350: operator: ->
                   351: name: sps
                   352: operator: ->
                   353: name: poc_msb_cycle_len
                354: argument: 
                 355: expr: 
                  356: literal: "poc_msb_cycle"
    357: return: 
     358: expr: 
      359: literal: 0

----------------------------------------
0: unit: 
 1: function: 
  2: type: 
   3: name: s32
  4: name: vvc_parse_picture_header
  5: parameter_list: 
   6: parameter: 
    7: decl: 
     8: type: 
      9: name: GF_BitStream
      10: modifier: *
     11: name: bs
   12: parameter: 
    13: decl: 
     14: type: 
      15: name: VVCState
      16: modifier: *
     17: name: vvc
   18: parameter: 
    19: decl: 
     20: type: 
      21: name: VVCSliceInfo
      22: modifier: *
     23: name: si
  24: block: 
   25: block_content: 
    26: decl_stmt: 
     27: decl: 
      28: type: 
       29: name: u32
      30: name: pps_id
    31: expr_stmt: 
     32: expr: 
      33: name: 
       34: name: si
       35: operator: ->
       36: name: irap_or_gdr_pic
      37: operator: =
      38: call: 
       39: name: gf_bs_read_int_log
       40: argument_list: 
        41: argument: 
         42: expr: 
          43: name: bs
        44: argument: 
         45: expr: 
          46: literal: 1
        47: argument: 
         48: expr: 
          49: literal: "irap_or_gdr_pic"
    50: expr_stmt: 
     51: expr: 
      52: name: 
       53: name: si
       54: operator: ->
       55: name: non_ref_pic
      56: operator: =
      57: call: 
       58: name: gf_bs_read_int_log
       59: argument_list: 
        60: argument: 
         61: expr: 
          62: name: bs
        63: argument: 
         64: expr: 
          65: literal: 1
        66: argument: 
         67: expr: 
          68: literal: "non_ref_pic"
    69: if_stmt: 
     70: if: 
      71: condition: 
       72: expr: 
        73: name: 
         74: name: si
         75: operator: ->
         76: name: irap_or_gdr_pic
      77: block: 
       78: block_content: 
        79: expr_stmt: 
         80: expr: 
          81: name: 
           82: name: si
           83: operator: ->
           84: name: gdr_pic
          85: operator: =
          86: call: 
           87: name: gf_bs_read_int_log
           88: argument_list: 
            89: argument: 
             90: expr: 
              91: name: bs
            92: argument: 
             93: expr: 
              94: literal: 1
            95: argument: 
             96: expr: 
              97: literal: "gdr_pic"
    98: if_stmt: 
     99: if: 
      100: condition: 
       101: expr: 
        102: operator: (
        103: name: 
         104: name: si
         105: operator: ->
         106: name: inter_slice_allowed_flag
        107: operator: =
        108: call: 
         109: name: gf_bs_read_int_log
         110: argument_list: 
          111: argument: 
           112: expr: 
            113: name: bs
          114: argument: 
           115: expr: 
            116: literal: 1
          117: argument: 
           118: expr: 
            119: literal: "inter_slice_allowed_flag"
        120: operator: )
      121: block: 
       122: block_content: 
        123: expr_stmt: 
         124: expr: 
          125: name: 
           126: name: si
           127: operator: ->
           128: name: intra_slice_allowed_flag
          129: operator: =
          130: call: 
           131: name: gf_bs_read_int_log
           132: argument_list: 
            133: argument: 
             134: expr: 
              135: name: bs
            136: argument: 
             137: expr: 
              138: literal: 1
            139: argument: 
             140: expr: 
              141: literal: "intra_slice_allowed_flag"
    142: expr_stmt: 
     143: expr: 
      144: name: pps_id
      145: operator: =
      146: call: 
       147: name: gf_bs_read_ue_log
       148: argument_list: 
        149: argument: 
         150: expr: 
          151: name: bs
        152: argument: 
         153: expr: 
          154: literal: "pps_id"
    155: if_stmt: 
     156: if: 
      157: condition: 
       158: expr: 
        159: operator: (
        160: name: pps_id
        161: operator: <
        162: literal: 0
        163: operator: )
        164: operator: ||
        165: operator: (
        166: name: pps_id
        167: operator: >=
        168: literal: 64
        169: operator: )
      170: block: 
       171: block_content: 
        172: return: 
         173: expr: 
          174: operator: -
          175: literal: 1
    176: expr_stmt: 
     177: expr: 
      178: name: 
       179: name: si
       180: operator: ->
       181: name: pps
      182: operator: =
      183: operator: &
      184: name: 
       185: name: vvc
       186: operator: ->
       187: name: pps
       188: index: 
        189: expr: 
         190: name: pps_id
    191: expr_stmt: 
     192: expr: 
      193: name: 
       194: name: si
       195: operator: ->
       196: name: sps
      197: operator: =
      198: operator: &
      199: name: 
       200: name: vvc
       201: operator: ->
       202: name: sps
       203: index: 
        204: expr: 
         205: name: 
          206: name: si
          207: operator: ->
          208: name: pps
          209: operator: ->
          210: name: sps_id
    211: expr_stmt: 
     212: expr: 
      213: name: 
       214: name: si
       215: operator: ->
       216: name: poc_lsb
      217: operator: =
      218: call: 
       219: name: gf_bs_read_int_log
       220: argument_list: 
        221: argument: 
         222: expr: 
          223: name: bs
        224: argument: 
         225: expr: 
          226: name: 
           227: name: si
           228: operator: ->
           229: name: sps
           230: operator: ->
           231: name: log2_max_poc_lsb
        232: argument: 
         233: expr: 
          234: literal: "poc_lsb"
    235: expr_stmt: 
     236: expr: 
      237: name: 
       238: name: si
       239: operator: ->
       240: name: recovery_point_valid
      241: operator: =
      242: literal: 0
    243: expr_stmt: 
     244: expr: 
      245: name: 
       246: name: si
       247: operator: ->
       248: name: gdr_recovery_count
      249: operator: =
      250: literal: 0
    251: if_stmt: 
     252: if: 
      253: condition: 
       254: expr: 
        255: name: 
         256: name: si
         257: operator: ->
         258: name: gdr_pic
      259: block: 
       260: block_content: 
        261: expr_stmt: 
         262: expr: 
          263: name: 
           264: name: si
           265: operator: ->
           266: name: recovery_point_valid
          267: operator: =
          268: literal: 1
        269: expr_stmt: 
         270: expr: 
          271: name: 
           272: name: si
           273: operator: ->
           274: name: gdr_recovery_count
          275: operator: =
          276: call: 
           277: name: gf_bs_read_ue_log
           278: argument_list: 
            279: argument: 
             280: expr: 
              281: name: bs
            282: argument: 
             283: expr: 
              284: literal: "gdr_recovery_count"
    285: expr_stmt: 
     286: expr: 
      287: call: 
       288: name: gf_bs_read_int_log
       289: argument_list: 
        290: argument: 
         291: expr: 
          292: name: bs
        293: argument: 
         294: expr: 
          295: name: 
           296: name: si
           297: operator: ->
           298: name: sps
           299: operator: ->
           300: name: ph_num_extra_bits
        301: argument: 
         302: expr: 
          303: literal: "ph_extra_bits"
    304: if_stmt: 
     305: if: 
      306: condition: 
       307: expr: 
        308: name: 
         309: name: si
         310: operator: ->
         311: name: sps
         312: operator: ->
         313: name: poc_msb_cycle_flag
      314: block: 
       315: block_content: 
        316: if_stmt: 
         317: if: 
          318: condition: 
           319: expr: 
            320: operator: (
            321: name: 
             322: name: si
             323: operator: ->
             324: name: poc_msb_cycle_present_flag
            325: operator: =
            326: call: 
             327: name: gf_bs_read_int_log
             328: argument_list: 
              329: argument: 
               330: expr: 
                331: name: bs
              332: argument: 
               333: expr: 
                334: literal: 1
              335: argument: 
               336: expr: 
                337: literal: "poc_msb_cycle_present_flag"
            338: operator: )
          339: block: 
           340: block_content: 
            341: expr_stmt: 
             342: expr: 
              343: name: 
               344: name: si
               345: operator: ->
               346: name: poc_msb_cycle
              347: operator: =
              348: call: 
               349: name: gf_bs_read_int_log
               350: argument_list: 
                351: argument: 
                 352: expr: 
                  353: name: bs
                354: argument: 
                 355: expr: 
                  356: name: 
                   357: name: si
                   358: operator: ->
                   359: name: sps
                   360: operator: ->
                   361: name: poc_msb_cycle_len
                362: argument: 
                 363: expr: 
                  364: literal: "poc_msb_cycle"
    365: return: 
     366: expr: 
      367: literal: 0
=====
0: function: 
 1: type: 
  2: name: s32
 3: name: vvc_parse_picture_header
 4: parameter_list: 
  5: parameter: 
   6: decl: 
    7: type: 
     8: name: GF_BitStream
     9: modifier: *
    10: name: bs
  11: parameter: 
   12: decl: 
    13: type: 
     14: name: VVCState
     15: modifier: *
    16: name: vvc
  17: parameter: 
   18: decl: 
    19: type: 
     20: name: VVCSliceInfo
     21: modifier: *
    22: name: si
 23: block: 
  24: block_content: 
   25: decl_stmt: 
    26: decl: 
     27: type: 
      28: name: u32
     29: name: pps_id
   30: expr_stmt: 
    31: expr: 
     32: name: 
      33: name: si
      34: operator: ->
      35: name: irap_or_gdr_pic
     36: operator: =
     37: call: 
      38: name: gf_bs_read_int_log
      39: argument_list: 
       40: argument: 
        41: expr: 
         42: name: bs
       43: argument: 
        44: expr: 
         45: literal: 1
       46: argument: 
        47: expr: 
         48: literal: "irap_or_gdr_pic"
   49: expr_stmt: 
    50: expr: 
     51: name: 
      52: name: si
      53: operator: ->
      54: name: non_ref_pic
     55: operator: =
     56: call: 
      57: name: gf_bs_read_int_log
      58: argument_list: 
       59: argument: 
        60: expr: 
         61: name: bs
       62: argument: 
        63: expr: 
         64: literal: 1
       65: argument: 
        66: expr: 
         67: literal: "non_ref_pic"
   68: if_stmt: 
    69: if: 
     70: condition: 
      71: expr: 
       72: name: 
        73: name: si
        74: operator: ->
        75: name: irap_or_gdr_pic
     76: block: 
      77: block_content: 
       78: expr_stmt: 
        79: expr: 
         80: name: 
          81: name: si
          82: operator: ->
          83: name: gdr_pic
         84: operator: =
         85: call: 
          86: name: gf_bs_read_int_log
          87: argument_list: 
           88: argument: 
            89: expr: 
             90: name: bs
           91: argument: 
            92: expr: 
             93: literal: 1
           94: argument: 
            95: expr: 
             96: literal: "gdr_pic"
   97: if_stmt: 
    98: if: 
     99: condition: 
      100: expr: 
       101: operator: (
       102: name: 
        103: name: si
        104: operator: ->
        105: name: inter_slice_allowed_flag
       106: operator: =
       107: call: 
        108: name: gf_bs_read_int_log
        109: argument_list: 
         110: argument: 
          111: expr: 
           112: name: bs
         113: argument: 
          114: expr: 
           115: literal: 1
         116: argument: 
          117: expr: 
           118: literal: "inter_slice_allowed_flag"
       119: operator: )
     120: block: 
      121: block_content: 
       122: expr_stmt: 
        123: expr: 
         124: name: 
          125: name: si
          126: operator: ->
          127: name: intra_slice_allowed_flag
         128: operator: =
         129: call: 
          130: name: gf_bs_read_int_log
          131: argument_list: 
           132: argument: 
            133: expr: 
             134: name: bs
           135: argument: 
            136: expr: 
             137: literal: 1
           138: argument: 
            139: expr: 
             140: literal: "intra_slice_allowed_flag"
   141: expr_stmt: 
    142: expr: 
     143: name: pps_id
     144: operator: =
     145: call: 
      146: name: gf_bs_read_ue_log
      147: argument_list: 
       148: argument: 
        149: expr: 
         150: name: bs
       151: argument: 
        152: expr: 
         153: literal: "pps_id"
   154: if_stmt: 
    155: if: 
     156: condition: 
      157: expr: 
       158: name: pps_id
       159: operator: >=
       160: literal: 64
     161: block: 
      162: block_content: 
       163: return: 
        164: expr: 
         165: operator: -
         166: literal: 1
   167: expr_stmt: 
    168: expr: 
     169: name: 
      170: name: si
      171: operator: ->
      172: name: pps
     173: operator: =
     174: operator: &
     175: name: 
      176: name: vvc
      177: operator: ->
      178: name: pps
      179: index: 
       180: expr: 
        181: name: pps_id
   182: expr_stmt: 
    183: expr: 
     184: name: 
      185: name: si
      186: operator: ->
      187: name: sps
     188: operator: =
     189: operator: &
     190: name: 
      191: name: vvc
      192: operator: ->
      193: name: sps
      194: index: 
       195: expr: 
        196: name: 
         197: name: si
         198: operator: ->
         199: name: pps
         200: operator: ->
         201: name: sps_id
   202: expr_stmt: 
    203: expr: 
     204: name: 
      205: name: si
      206: operator: ->
      207: name: poc_lsb
     208: operator: =
     209: call: 
      210: name: gf_bs_read_int_log
      211: argument_list: 
       212: argument: 
        213: expr: 
         214: name: bs
       215: argument: 
        216: expr: 
         217: name: 
          218: name: si
          219: operator: ->
          220: name: sps
          221: operator: ->
          222: name: log2_max_poc_lsb
       223: argument: 
        224: expr: 
         225: literal: "poc_lsb"
   226: expr_stmt: 
    227: expr: 
     228: name: 
      229: name: si
      230: operator: ->
      231: name: recovery_point_valid
     232: operator: =
     233: literal: 0
   234: expr_stmt: 
    235: expr: 
     236: name: 
      237: name: si
      238: operator: ->
      239: name: gdr_recovery_count
     240: operator: =
     241: literal: 0
   242: if_stmt: 
    243: if: 
     244: condition: 
      245: expr: 
       246: name: 
        247: name: si
        248: operator: ->
        249: name: gdr_pic
     250: block: 
      251: block_content: 
       252: expr_stmt: 
        253: expr: 
         254: name: 
          255: name: si
          256: operator: ->
          257: name: recovery_point_valid
         258: operator: =
         259: literal: 1
       260: expr_stmt: 
        261: expr: 
         262: name: 
          263: name: si
          264: operator: ->
          265: name: gdr_recovery_count
         266: operator: =
         267: call: 
          268: name: gf_bs_read_ue_log
          269: argument_list: 
           270: argument: 
            271: expr: 
             272: name: bs
           273: argument: 
            274: expr: 
             275: literal: "gdr_recovery_count"
   276: expr_stmt: 
    277: expr: 
     278: call: 
      279: name: gf_bs_read_int_log
      280: argument_list: 
       281: argument: 
        282: expr: 
         283: name: bs
       284: argument: 
        285: expr: 
         286: name: 
          287: name: si
          288: operator: ->
          289: name: sps
          290: operator: ->
          291: name: ph_num_extra_bits
       292: argument: 
        293: expr: 
         294: literal: "ph_extra_bits"
   295: if_stmt: 
    296: if: 
     297: condition: 
      298: expr: 
       299: name: 
        300: name: si
        301: operator: ->
        302: name: sps
        303: operator: ->
        304: name: poc_msb_cycle_flag
     305: block: 
      306: block_content: 
       307: if_stmt: 
        308: if: 
         309: condition: 
          310: expr: 
           311: operator: (
           312: name: 
            313: name: si
            314: operator: ->
            315: name: poc_msb_cycle_present_flag
           316: operator: =
           317: call: 
            318: name: gf_bs_read_int_log
            319: argument_list: 
             320: argument: 
              321: expr: 
               322: name: bs
             323: argument: 
              324: expr: 
               325: literal: 1
             326: argument: 
              327: expr: 
               328: literal: "poc_msb_cycle_present_flag"
           329: operator: )
         330: block: 
          331: block_content: 
           332: expr_stmt: 
            333: expr: 
             334: name: 
              335: name: si
              336: operator: ->
              337: name: poc_msb_cycle
             338: operator: =
             339: call: 
              340: name: gf_bs_read_int_log
              341: argument_list: 
               342: argument: 
                343: expr: 
                 344: name: bs
               345: argument: 
                346: expr: 
                 347: name: 
                  348: name: si
                  349: operator: ->
                  350: name: sps
                  351: operator: ->
                  352: name: poc_msb_cycle_len
               353: argument: 
                354: expr: 
                 355: literal: "poc_msb_cycle"
   356: return: 
    357: expr: 
     358: literal: 0

----------------------------------------
0: function: 
 1: type: 
  2: name: s32
 3: name: vvc_parse_picture_header
 4: parameter_list: 
  5: parameter: 
   6: decl: 
    7: type: 
     8: name: GF_BitStream
     9: modifier: *
    10: name: bs
  11: parameter: 
   12: decl: 
    13: type: 
     14: name: VVCState
     15: modifier: *
    16: name: vvc
  17: parameter: 
   18: decl: 
    19: type: 
     20: name: VVCSliceInfo
     21: modifier: *
    22: name: si
 23: block: 
  24: block_content: 
   25: decl_stmt: 
    26: decl: 
     27: type: 
      28: name: u32
     29: name: pps_id
   30: expr_stmt: 
    31: expr: 
     32: name: 
      33: name: si
      34: operator: ->
      35: name: irap_or_gdr_pic
     36: operator: =
     37: call: 
      38: name: gf_bs_read_int_log
      39: argument_list: 
       40: argument: 
        41: expr: 
         42: name: bs
       43: argument: 
        44: expr: 
         45: literal: 1
       46: argument: 
        47: expr: 
         48: literal: "irap_or_gdr_pic"
   49: expr_stmt: 
    50: expr: 
     51: name: 
      52: name: si
      53: operator: ->
      54: name: non_ref_pic
     55: operator: =
     56: call: 
      57: name: gf_bs_read_int_log
      58: argument_list: 
       59: argument: 
        60: expr: 
         61: name: bs
       62: argument: 
        63: expr: 
         64: literal: 1
       65: argument: 
        66: expr: 
         67: literal: "non_ref_pic"
   68: if_stmt: 
    69: if: 
     70: condition: 
      71: expr: 
       72: name: 
        73: name: si
        74: operator: ->
        75: name: irap_or_gdr_pic
     76: block: 
      77: block_content: 
       78: expr_stmt: 
        79: expr: 
         80: name: 
          81: name: si
          82: operator: ->
          83: name: gdr_pic
         84: operator: =
         85: call: 
          86: name: gf_bs_read_int_log
          87: argument_list: 
           88: argument: 
            89: expr: 
             90: name: bs
           91: argument: 
            92: expr: 
             93: literal: 1
           94: argument: 
            95: expr: 
             96: literal: "gdr_pic"
   97: if_stmt: 
    98: if: 
     99: condition: 
      100: expr: 
       101: operator: (
       102: name: 
        103: name: si
        104: operator: ->
        105: name: inter_slice_allowed_flag
       106: operator: =
       107: call: 
        108: name: gf_bs_read_int_log
        109: argument_list: 
         110: argument: 
          111: expr: 
           112: name: bs
         113: argument: 
          114: expr: 
           115: literal: 1
         116: argument: 
          117: expr: 
           118: literal: "inter_slice_allowed_flag"
       119: operator: )
     120: block: 
      121: block_content: 
       122: expr_stmt: 
        123: expr: 
         124: name: 
          125: name: si
          126: operator: ->
          127: name: intra_slice_allowed_flag
         128: operator: =
         129: call: 
          130: name: gf_bs_read_int_log
          131: argument_list: 
           132: argument: 
            133: expr: 
             134: name: bs
           135: argument: 
            136: expr: 
             137: literal: 1
           138: argument: 
            139: expr: 
             140: literal: "intra_slice_allowed_flag"
   141: expr_stmt: 
    142: expr: 
     143: name: pps_id
     144: operator: =
     145: call: 
      146: name: gf_bs_read_ue_log
      147: argument_list: 
       148: argument: 
        149: expr: 
         150: name: bs
       151: argument: 
        152: expr: 
         153: literal: "pps_id"
   154: if_stmt: 
    155: if: 
     156: condition: 
      157: expr: 
       158: operator: (
       159: name: pps_id
       160: operator: <
       161: literal: 0
       162: operator: )
       163: operator: ||
       164: operator: (
       165: name: pps_id
       166: operator: >=
       167: literal: 64
       168: operator: )
     169: block: 
      170: block_content: 
       171: return: 
        172: expr: 
         173: operator: -
         174: literal: 1
   175: expr_stmt: 
    176: expr: 
     177: name: 
      178: name: si
      179: operator: ->
      180: name: pps
     181: operator: =
     182: operator: &
     183: name: 
      184: name: vvc
      185: operator: ->
      186: name: pps
      187: index: 
       188: expr: 
        189: name: pps_id
   190: expr_stmt: 
    191: expr: 
     192: name: 
      193: name: si
      194: operator: ->
      195: name: sps
     196: operator: =
     197: operator: &
     198: name: 
      199: name: vvc
      200: operator: ->
      201: name: sps
      202: index: 
       203: expr: 
        204: name: 
         205: name: si
         206: operator: ->
         207: name: pps
         208: operator: ->
         209: name: sps_id
   210: expr_stmt: 
    211: expr: 
     212: name: 
      213: name: si
      214: operator: ->
      215: name: poc_lsb
     216: operator: =
     217: call: 
      218: name: gf_bs_read_int_log
      219: argument_list: 
       220: argument: 
        221: expr: 
         222: name: bs
       223: argument: 
        224: expr: 
         225: name: 
          226: name: si
          227: operator: ->
          228: name: sps
          229: operator: ->
          230: name: log2_max_poc_lsb
       231: argument: 
        232: expr: 
         233: literal: "poc_lsb"
   234: expr_stmt: 
    235: expr: 
     236: name: 
      237: name: si
      238: operator: ->
      239: name: recovery_point_valid
     240: operator: =
     241: literal: 0
   242: expr_stmt: 
    243: expr: 
     244: name: 
      245: name: si
      246: operator: ->
      247: name: gdr_recovery_count
     248: operator: =
     249: literal: 0
   250: if_stmt: 
    251: if: 
     252: condition: 
      253: expr: 
       254: name: 
        255: name: si
        256: operator: ->
        257: name: gdr_pic
     258: block: 
      259: block_content: 
       260: expr_stmt: 
        261: expr: 
         262: name: 
          263: name: si
          264: operator: ->
          265: name: recovery_point_valid
         266: operator: =
         267: literal: 1
       268: expr_stmt: 
        269: expr: 
         270: name: 
          271: name: si
          272: operator: ->
          273: name: gdr_recovery_count
         274: operator: =
         275: call: 
          276: name: gf_bs_read_ue_log
          277: argument_list: 
           278: argument: 
            279: expr: 
             280: name: bs
           281: argument: 
            282: expr: 
             283: literal: "gdr_recovery_count"
   284: expr_stmt: 
    285: expr: 
     286: call: 
      287: name: gf_bs_read_int_log
      288: argument_list: 
       289: argument: 
        290: expr: 
         291: name: bs
       292: argument: 
        293: expr: 
         294: name: 
          295: name: si
          296: operator: ->
          297: name: sps
          298: operator: ->
          299: name: ph_num_extra_bits
       300: argument: 
        301: expr: 
         302: literal: "ph_extra_bits"
   303: if_stmt: 
    304: if: 
     305: condition: 
      306: expr: 
       307: name: 
        308: name: si
        309: operator: ->
        310: name: sps
        311: operator: ->
        312: name: poc_msb_cycle_flag
     313: block: 
      314: block_content: 
       315: if_stmt: 
        316: if: 
         317: condition: 
          318: expr: 
           319: operator: (
           320: name: 
            321: name: si
            322: operator: ->
            323: name: poc_msb_cycle_present_flag
           324: operator: =
           325: call: 
            326: name: gf_bs_read_int_log
            327: argument_list: 
             328: argument: 
              329: expr: 
               330: name: bs
             331: argument: 
              332: expr: 
               333: literal: 1
             334: argument: 
              335: expr: 
               336: literal: "poc_msb_cycle_present_flag"
           337: operator: )
         338: block: 
          339: block_content: 
           340: expr_stmt: 
            341: expr: 
             342: name: 
              343: name: si
              344: operator: ->
              345: name: poc_msb_cycle
             346: operator: =
             347: call: 
              348: name: gf_bs_read_int_log
              349: argument_list: 
               350: argument: 
                351: expr: 
                 352: name: bs
               353: argument: 
                354: expr: 
                 355: name: 
                  356: name: si
                  357: operator: ->
                  358: name: sps
                  359: operator: ->
                  360: name: poc_msb_cycle_len
               361: argument: 
                362: expr: 
                 363: literal: "poc_msb_cycle"
   364: return: 
    365: expr: 
     366: literal: 0
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: u32
    6: name: pps_id
  7: expr_stmt: 
   8: expr: 
    9: name: 
     10: name: si
     11: operator: ->
     12: name: irap_or_gdr_pic
    13: operator: =
    14: call: 
     15: name: gf_bs_read_int_log
     16: argument_list: 
      17: argument: 
       18: expr: 
        19: name: bs
      20: argument: 
       21: expr: 
        22: literal: 1
      23: argument: 
       24: expr: 
        25: literal: "irap_or_gdr_pic"
  26: expr_stmt: 
   27: expr: 
    28: name: 
     29: name: si
     30: operator: ->
     31: name: non_ref_pic
    32: operator: =
    33: call: 
     34: name: gf_bs_read_int_log
     35: argument_list: 
      36: argument: 
       37: expr: 
        38: name: bs
      39: argument: 
       40: expr: 
        41: literal: 1
      42: argument: 
       43: expr: 
        44: literal: "non_ref_pic"
  45: if_stmt: 
   46: if: 
    47: condition: 
     48: expr: 
      49: name: 
       50: name: si
       51: operator: ->
       52: name: irap_or_gdr_pic
    53: block: 
     54: block_content: 
      55: expr_stmt: 
       56: expr: 
        57: name: 
         58: name: si
         59: operator: ->
         60: name: gdr_pic
        61: operator: =
        62: call: 
         63: name: gf_bs_read_int_log
         64: argument_list: 
          65: argument: 
           66: expr: 
            67: name: bs
          68: argument: 
           69: expr: 
            70: literal: 1
          71: argument: 
           72: expr: 
            73: literal: "gdr_pic"
  74: if_stmt: 
   75: if: 
    76: condition: 
     77: expr: 
      78: operator: (
      79: name: 
       80: name: si
       81: operator: ->
       82: name: inter_slice_allowed_flag
      83: operator: =
      84: call: 
       85: name: gf_bs_read_int_log
       86: argument_list: 
        87: argument: 
         88: expr: 
          89: name: bs
        90: argument: 
         91: expr: 
          92: literal: 1
        93: argument: 
         94: expr: 
          95: literal: "inter_slice_allowed_flag"
      96: operator: )
    97: block: 
     98: block_content: 
      99: expr_stmt: 
       100: expr: 
        101: name: 
         102: name: si
         103: operator: ->
         104: name: intra_slice_allowed_flag
        105: operator: =
        106: call: 
         107: name: gf_bs_read_int_log
         108: argument_list: 
          109: argument: 
           110: expr: 
            111: name: bs
          112: argument: 
           113: expr: 
            114: literal: 1
          115: argument: 
           116: expr: 
            117: literal: "intra_slice_allowed_flag"
  118: expr_stmt: 
   119: expr: 
    120: name: pps_id
    121: operator: =
    122: call: 
     123: name: gf_bs_read_ue_log
     124: argument_list: 
      125: argument: 
       126: expr: 
        127: name: bs
      128: argument: 
       129: expr: 
        130: literal: "pps_id"
  131: if_stmt: 
   132: if: 
    133: condition: 
     134: expr: 
      135: name: pps_id
      136: operator: >=
      137: literal: 64
    138: block: 
     139: block_content: 
      140: return: 
       141: expr: 
        142: operator: -
        143: literal: 1
  144: expr_stmt: 
   145: expr: 
    146: name: 
     147: name: si
     148: operator: ->
     149: name: pps
    150: operator: =
    151: operator: &
    152: name: 
     153: name: vvc
     154: operator: ->
     155: name: pps
     156: index: 
      157: expr: 
       158: name: pps_id
  159: expr_stmt: 
   160: expr: 
    161: name: 
     162: name: si
     163: operator: ->
     164: name: sps
    165: operator: =
    166: operator: &
    167: name: 
     168: name: vvc
     169: operator: ->
     170: name: sps
     171: index: 
      172: expr: 
       173: name: 
        174: name: si
        175: operator: ->
        176: name: pps
        177: operator: ->
        178: name: sps_id
  179: expr_stmt: 
   180: expr: 
    181: name: 
     182: name: si
     183: operator: ->
     184: name: poc_lsb
    185: operator: =
    186: call: 
     187: name: gf_bs_read_int_log
     188: argument_list: 
      189: argument: 
       190: expr: 
        191: name: bs
      192: argument: 
       193: expr: 
        194: name: 
         195: name: si
         196: operator: ->
         197: name: sps
         198: operator: ->
         199: name: log2_max_poc_lsb
      200: argument: 
       201: expr: 
        202: literal: "poc_lsb"
  203: expr_stmt: 
   204: expr: 
    205: name: 
     206: name: si
     207: operator: ->
     208: name: recovery_point_valid
    209: operator: =
    210: literal: 0
  211: expr_stmt: 
   212: expr: 
    213: name: 
     214: name: si
     215: operator: ->
     216: name: gdr_recovery_count
    217: operator: =
    218: literal: 0
  219: if_stmt: 
   220: if: 
    221: condition: 
     222: expr: 
      223: name: 
       224: name: si
       225: operator: ->
       226: name: gdr_pic
    227: block: 
     228: block_content: 
      229: expr_stmt: 
       230: expr: 
        231: name: 
         232: name: si
         233: operator: ->
         234: name: recovery_point_valid
        235: operator: =
        236: literal: 1
      237: expr_stmt: 
       238: expr: 
        239: name: 
         240: name: si
         241: operator: ->
         242: name: gdr_recovery_count
        243: operator: =
        244: call: 
         245: name: gf_bs_read_ue_log
         246: argument_list: 
          247: argument: 
           248: expr: 
            249: name: bs
          250: argument: 
           251: expr: 
            252: literal: "gdr_recovery_count"
  253: expr_stmt: 
   254: expr: 
    255: call: 
     256: name: gf_bs_read_int_log
     257: argument_list: 
      258: argument: 
       259: expr: 
        260: name: bs
      261: argument: 
       262: expr: 
        263: name: 
         264: name: si
         265: operator: ->
         266: name: sps
         267: operator: ->
         268: name: ph_num_extra_bits
      269: argument: 
       270: expr: 
        271: literal: "ph_extra_bits"
  272: if_stmt: 
   273: if: 
    274: condition: 
     275: expr: 
      276: name: 
       277: name: si
       278: operator: ->
       279: name: sps
       280: operator: ->
       281: name: poc_msb_cycle_flag
    282: block: 
     283: block_content: 
      284: if_stmt: 
       285: if: 
        286: condition: 
         287: expr: 
          288: operator: (
          289: name: 
           290: name: si
           291: operator: ->
           292: name: poc_msb_cycle_present_flag
          293: operator: =
          294: call: 
           295: name: gf_bs_read_int_log
           296: argument_list: 
            297: argument: 
             298: expr: 
              299: name: bs
            300: argument: 
             301: expr: 
              302: literal: 1
            303: argument: 
             304: expr: 
              305: literal: "poc_msb_cycle_present_flag"
          306: operator: )
        307: block: 
         308: block_content: 
          309: expr_stmt: 
           310: expr: 
            311: name: 
             312: name: si
             313: operator: ->
             314: name: poc_msb_cycle
            315: operator: =
            316: call: 
             317: name: gf_bs_read_int_log
             318: argument_list: 
              319: argument: 
               320: expr: 
                321: name: bs
              322: argument: 
               323: expr: 
                324: name: 
                 325: name: si
                 326: operator: ->
                 327: name: sps
                 328: operator: ->
                 329: name: poc_msb_cycle_len
              330: argument: 
               331: expr: 
                332: literal: "poc_msb_cycle"
  333: return: 
   334: expr: 
    335: literal: 0

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: u32
    6: name: pps_id
  7: expr_stmt: 
   8: expr: 
    9: name: 
     10: name: si
     11: operator: ->
     12: name: irap_or_gdr_pic
    13: operator: =
    14: call: 
     15: name: gf_bs_read_int_log
     16: argument_list: 
      17: argument: 
       18: expr: 
        19: name: bs
      20: argument: 
       21: expr: 
        22: literal: 1
      23: argument: 
       24: expr: 
        25: literal: "irap_or_gdr_pic"
  26: expr_stmt: 
   27: expr: 
    28: name: 
     29: name: si
     30: operator: ->
     31: name: non_ref_pic
    32: operator: =
    33: call: 
     34: name: gf_bs_read_int_log
     35: argument_list: 
      36: argument: 
       37: expr: 
        38: name: bs
      39: argument: 
       40: expr: 
        41: literal: 1
      42: argument: 
       43: expr: 
        44: literal: "non_ref_pic"
  45: if_stmt: 
   46: if: 
    47: condition: 
     48: expr: 
      49: name: 
       50: name: si
       51: operator: ->
       52: name: irap_or_gdr_pic
    53: block: 
     54: block_content: 
      55: expr_stmt: 
       56: expr: 
        57: name: 
         58: name: si
         59: operator: ->
         60: name: gdr_pic
        61: operator: =
        62: call: 
         63: name: gf_bs_read_int_log
         64: argument_list: 
          65: argument: 
           66: expr: 
            67: name: bs
          68: argument: 
           69: expr: 
            70: literal: 1
          71: argument: 
           72: expr: 
            73: literal: "gdr_pic"
  74: if_stmt: 
   75: if: 
    76: condition: 
     77: expr: 
      78: operator: (
      79: name: 
       80: name: si
       81: operator: ->
       82: name: inter_slice_allowed_flag
      83: operator: =
      84: call: 
       85: name: gf_bs_read_int_log
       86: argument_list: 
        87: argument: 
         88: expr: 
          89: name: bs
        90: argument: 
         91: expr: 
          92: literal: 1
        93: argument: 
         94: expr: 
          95: literal: "inter_slice_allowed_flag"
      96: operator: )
    97: block: 
     98: block_content: 
      99: expr_stmt: 
       100: expr: 
        101: name: 
         102: name: si
         103: operator: ->
         104: name: intra_slice_allowed_flag
        105: operator: =
        106: call: 
         107: name: gf_bs_read_int_log
         108: argument_list: 
          109: argument: 
           110: expr: 
            111: name: bs
          112: argument: 
           113: expr: 
            114: literal: 1
          115: argument: 
           116: expr: 
            117: literal: "intra_slice_allowed_flag"
  118: expr_stmt: 
   119: expr: 
    120: name: pps_id
    121: operator: =
    122: call: 
     123: name: gf_bs_read_ue_log
     124: argument_list: 
      125: argument: 
       126: expr: 
        127: name: bs
      128: argument: 
       129: expr: 
        130: literal: "pps_id"
  131: if_stmt: 
   132: if: 
    133: condition: 
     134: expr: 
      135: operator: (
      136: name: pps_id
      137: operator: <
      138: literal: 0
      139: operator: )
      140: operator: ||
      141: operator: (
      142: name: pps_id
      143: operator: >=
      144: literal: 64
      145: operator: )
    146: block: 
     147: block_content: 
      148: return: 
       149: expr: 
        150: operator: -
        151: literal: 1
  152: expr_stmt: 
   153: expr: 
    154: name: 
     155: name: si
     156: operator: ->
     157: name: pps
    158: operator: =
    159: operator: &
    160: name: 
     161: name: vvc
     162: operator: ->
     163: name: pps
     164: index: 
      165: expr: 
       166: name: pps_id
  167: expr_stmt: 
   168: expr: 
    169: name: 
     170: name: si
     171: operator: ->
     172: name: sps
    173: operator: =
    174: operator: &
    175: name: 
     176: name: vvc
     177: operator: ->
     178: name: sps
     179: index: 
      180: expr: 
       181: name: 
        182: name: si
        183: operator: ->
        184: name: pps
        185: operator: ->
        186: name: sps_id
  187: expr_stmt: 
   188: expr: 
    189: name: 
     190: name: si
     191: operator: ->
     192: name: poc_lsb
    193: operator: =
    194: call: 
     195: name: gf_bs_read_int_log
     196: argument_list: 
      197: argument: 
       198: expr: 
        199: name: bs
      200: argument: 
       201: expr: 
        202: name: 
         203: name: si
         204: operator: ->
         205: name: sps
         206: operator: ->
         207: name: log2_max_poc_lsb
      208: argument: 
       209: expr: 
        210: literal: "poc_lsb"
  211: expr_stmt: 
   212: expr: 
    213: name: 
     214: name: si
     215: operator: ->
     216: name: recovery_point_valid
    217: operator: =
    218: literal: 0
  219: expr_stmt: 
   220: expr: 
    221: name: 
     222: name: si
     223: operator: ->
     224: name: gdr_recovery_count
    225: operator: =
    226: literal: 0
  227: if_stmt: 
   228: if: 
    229: condition: 
     230: expr: 
      231: name: 
       232: name: si
       233: operator: ->
       234: name: gdr_pic
    235: block: 
     236: block_content: 
      237: expr_stmt: 
       238: expr: 
        239: name: 
         240: name: si
         241: operator: ->
         242: name: recovery_point_valid
        243: operator: =
        244: literal: 1
      245: expr_stmt: 
       246: expr: 
        247: name: 
         248: name: si
         249: operator: ->
         250: name: gdr_recovery_count
        251: operator: =
        252: call: 
         253: name: gf_bs_read_ue_log
         254: argument_list: 
          255: argument: 
           256: expr: 
            257: name: bs
          258: argument: 
           259: expr: 
            260: literal: "gdr_recovery_count"
  261: expr_stmt: 
   262: expr: 
    263: call: 
     264: name: gf_bs_read_int_log
     265: argument_list: 
      266: argument: 
       267: expr: 
        268: name: bs
      269: argument: 
       270: expr: 
        271: name: 
         272: name: si
         273: operator: ->
         274: name: sps
         275: operator: ->
         276: name: ph_num_extra_bits
      277: argument: 
       278: expr: 
        279: literal: "ph_extra_bits"
  280: if_stmt: 
   281: if: 
    282: condition: 
     283: expr: 
      284: name: 
       285: name: si
       286: operator: ->
       287: name: sps
       288: operator: ->
       289: name: poc_msb_cycle_flag
    290: block: 
     291: block_content: 
      292: if_stmt: 
       293: if: 
        294: condition: 
         295: expr: 
          296: operator: (
          297: name: 
           298: name: si
           299: operator: ->
           300: name: poc_msb_cycle_present_flag
          301: operator: =
          302: call: 
           303: name: gf_bs_read_int_log
           304: argument_list: 
            305: argument: 
             306: expr: 
              307: name: bs
            308: argument: 
             309: expr: 
              310: literal: 1
            311: argument: 
             312: expr: 
              313: literal: "poc_msb_cycle_present_flag"
          314: operator: )
        315: block: 
         316: block_content: 
          317: expr_stmt: 
           318: expr: 
            319: name: 
             320: name: si
             321: operator: ->
             322: name: poc_msb_cycle
            323: operator: =
            324: call: 
             325: name: gf_bs_read_int_log
             326: argument_list: 
              327: argument: 
               328: expr: 
                329: name: bs
              330: argument: 
               331: expr: 
                332: name: 
                 333: name: si
                 334: operator: ->
                 335: name: sps
                 336: operator: ->
                 337: name: poc_msb_cycle_len
              338: argument: 
               339: expr: 
                340: literal: "poc_msb_cycle"
  341: return: 
   342: expr: 
    343: literal: 0
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: u32
   5: name: pps_id
 6: expr_stmt: 
  7: expr: 
   8: name: 
    9: name: si
    10: operator: ->
    11: name: irap_or_gdr_pic
   12: operator: =
   13: call: 
    14: name: gf_bs_read_int_log
    15: argument_list: 
     16: argument: 
      17: expr: 
       18: name: bs
     19: argument: 
      20: expr: 
       21: literal: 1
     22: argument: 
      23: expr: 
       24: literal: "irap_or_gdr_pic"
 25: expr_stmt: 
  26: expr: 
   27: name: 
    28: name: si
    29: operator: ->
    30: name: non_ref_pic
   31: operator: =
   32: call: 
    33: name: gf_bs_read_int_log
    34: argument_list: 
     35: argument: 
      36: expr: 
       37: name: bs
     38: argument: 
      39: expr: 
       40: literal: 1
     41: argument: 
      42: expr: 
       43: literal: "non_ref_pic"
 44: if_stmt: 
  45: if: 
   46: condition: 
    47: expr: 
     48: name: 
      49: name: si
      50: operator: ->
      51: name: irap_or_gdr_pic
   52: block: 
    53: block_content: 
     54: expr_stmt: 
      55: expr: 
       56: name: 
        57: name: si
        58: operator: ->
        59: name: gdr_pic
       60: operator: =
       61: call: 
        62: name: gf_bs_read_int_log
        63: argument_list: 
         64: argument: 
          65: expr: 
           66: name: bs
         67: argument: 
          68: expr: 
           69: literal: 1
         70: argument: 
          71: expr: 
           72: literal: "gdr_pic"
 73: if_stmt: 
  74: if: 
   75: condition: 
    76: expr: 
     77: operator: (
     78: name: 
      79: name: si
      80: operator: ->
      81: name: inter_slice_allowed_flag
     82: operator: =
     83: call: 
      84: name: gf_bs_read_int_log
      85: argument_list: 
       86: argument: 
        87: expr: 
         88: name: bs
       89: argument: 
        90: expr: 
         91: literal: 1
       92: argument: 
        93: expr: 
         94: literal: "inter_slice_allowed_flag"
     95: operator: )
   96: block: 
    97: block_content: 
     98: expr_stmt: 
      99: expr: 
       100: name: 
        101: name: si
        102: operator: ->
        103: name: intra_slice_allowed_flag
       104: operator: =
       105: call: 
        106: name: gf_bs_read_int_log
        107: argument_list: 
         108: argument: 
          109: expr: 
           110: name: bs
         111: argument: 
          112: expr: 
           113: literal: 1
         114: argument: 
          115: expr: 
           116: literal: "intra_slice_allowed_flag"
 117: expr_stmt: 
  118: expr: 
   119: name: pps_id
   120: operator: =
   121: call: 
    122: name: gf_bs_read_ue_log
    123: argument_list: 
     124: argument: 
      125: expr: 
       126: name: bs
     127: argument: 
      128: expr: 
       129: literal: "pps_id"
 130: if_stmt: 
  131: if: 
   132: condition: 
    133: expr: 
     134: name: pps_id
     135: operator: >=
     136: literal: 64
   137: block: 
    138: block_content: 
     139: return: 
      140: expr: 
       141: operator: -
       142: literal: 1
 143: expr_stmt: 
  144: expr: 
   145: name: 
    146: name: si
    147: operator: ->
    148: name: pps
   149: operator: =
   150: operator: &
   151: name: 
    152: name: vvc
    153: operator: ->
    154: name: pps
    155: index: 
     156: expr: 
      157: name: pps_id
 158: expr_stmt: 
  159: expr: 
   160: name: 
    161: name: si
    162: operator: ->
    163: name: sps
   164: operator: =
   165: operator: &
   166: name: 
    167: name: vvc
    168: operator: ->
    169: name: sps
    170: index: 
     171: expr: 
      172: name: 
       173: name: si
       174: operator: ->
       175: name: pps
       176: operator: ->
       177: name: sps_id
 178: expr_stmt: 
  179: expr: 
   180: name: 
    181: name: si
    182: operator: ->
    183: name: poc_lsb
   184: operator: =
   185: call: 
    186: name: gf_bs_read_int_log
    187: argument_list: 
     188: argument: 
      189: expr: 
       190: name: bs
     191: argument: 
      192: expr: 
       193: name: 
        194: name: si
        195: operator: ->
        196: name: sps
        197: operator: ->
        198: name: log2_max_poc_lsb
     199: argument: 
      200: expr: 
       201: literal: "poc_lsb"
 202: expr_stmt: 
  203: expr: 
   204: name: 
    205: name: si
    206: operator: ->
    207: name: recovery_point_valid
   208: operator: =
   209: literal: 0
 210: expr_stmt: 
  211: expr: 
   212: name: 
    213: name: si
    214: operator: ->
    215: name: gdr_recovery_count
   216: operator: =
   217: literal: 0
 218: if_stmt: 
  219: if: 
   220: condition: 
    221: expr: 
     222: name: 
      223: name: si
      224: operator: ->
      225: name: gdr_pic
   226: block: 
    227: block_content: 
     228: expr_stmt: 
      229: expr: 
       230: name: 
        231: name: si
        232: operator: ->
        233: name: recovery_point_valid
       234: operator: =
       235: literal: 1
     236: expr_stmt: 
      237: expr: 
       238: name: 
        239: name: si
        240: operator: ->
        241: name: gdr_recovery_count
       242: operator: =
       243: call: 
        244: name: gf_bs_read_ue_log
        245: argument_list: 
         246: argument: 
          247: expr: 
           248: name: bs
         249: argument: 
          250: expr: 
           251: literal: "gdr_recovery_count"
 252: expr_stmt: 
  253: expr: 
   254: call: 
    255: name: gf_bs_read_int_log
    256: argument_list: 
     257: argument: 
      258: expr: 
       259: name: bs
     260: argument: 
      261: expr: 
       262: name: 
        263: name: si
        264: operator: ->
        265: name: sps
        266: operator: ->
        267: name: ph_num_extra_bits
     268: argument: 
      269: expr: 
       270: literal: "ph_extra_bits"
 271: if_stmt: 
  272: if: 
   273: condition: 
    274: expr: 
     275: name: 
      276: name: si
      277: operator: ->
      278: name: sps
      279: operator: ->
      280: name: poc_msb_cycle_flag
   281: block: 
    282: block_content: 
     283: if_stmt: 
      284: if: 
       285: condition: 
        286: expr: 
         287: operator: (
         288: name: 
          289: name: si
          290: operator: ->
          291: name: poc_msb_cycle_present_flag
         292: operator: =
         293: call: 
          294: name: gf_bs_read_int_log
          295: argument_list: 
           296: argument: 
            297: expr: 
             298: name: bs
           299: argument: 
            300: expr: 
             301: literal: 1
           302: argument: 
            303: expr: 
             304: literal: "poc_msb_cycle_present_flag"
         305: operator: )
       306: block: 
        307: block_content: 
         308: expr_stmt: 
          309: expr: 
           310: name: 
            311: name: si
            312: operator: ->
            313: name: poc_msb_cycle
           314: operator: =
           315: call: 
            316: name: gf_bs_read_int_log
            317: argument_list: 
             318: argument: 
              319: expr: 
               320: name: bs
             321: argument: 
              322: expr: 
               323: name: 
                324: name: si
                325: operator: ->
                326: name: sps
                327: operator: ->
                328: name: poc_msb_cycle_len
             329: argument: 
              330: expr: 
               331: literal: "poc_msb_cycle"
 332: return: 
  333: expr: 
   334: literal: 0

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: u32
   5: name: pps_id
 6: expr_stmt: 
  7: expr: 
   8: name: 
    9: name: si
    10: operator: ->
    11: name: irap_or_gdr_pic
   12: operator: =
   13: call: 
    14: name: gf_bs_read_int_log
    15: argument_list: 
     16: argument: 
      17: expr: 
       18: name: bs
     19: argument: 
      20: expr: 
       21: literal: 1
     22: argument: 
      23: expr: 
       24: literal: "irap_or_gdr_pic"
 25: expr_stmt: 
  26: expr: 
   27: name: 
    28: name: si
    29: operator: ->
    30: name: non_ref_pic
   31: operator: =
   32: call: 
    33: name: gf_bs_read_int_log
    34: argument_list: 
     35: argument: 
      36: expr: 
       37: name: bs
     38: argument: 
      39: expr: 
       40: literal: 1
     41: argument: 
      42: expr: 
       43: literal: "non_ref_pic"
 44: if_stmt: 
  45: if: 
   46: condition: 
    47: expr: 
     48: name: 
      49: name: si
      50: operator: ->
      51: name: irap_or_gdr_pic
   52: block: 
    53: block_content: 
     54: expr_stmt: 
      55: expr: 
       56: name: 
        57: name: si
        58: operator: ->
        59: name: gdr_pic
       60: operator: =
       61: call: 
        62: name: gf_bs_read_int_log
        63: argument_list: 
         64: argument: 
          65: expr: 
           66: name: bs
         67: argument: 
          68: expr: 
           69: literal: 1
         70: argument: 
          71: expr: 
           72: literal: "gdr_pic"
 73: if_stmt: 
  74: if: 
   75: condition: 
    76: expr: 
     77: operator: (
     78: name: 
      79: name: si
      80: operator: ->
      81: name: inter_slice_allowed_flag
     82: operator: =
     83: call: 
      84: name: gf_bs_read_int_log
      85: argument_list: 
       86: argument: 
        87: expr: 
         88: name: bs
       89: argument: 
        90: expr: 
         91: literal: 1
       92: argument: 
        93: expr: 
         94: literal: "inter_slice_allowed_flag"
     95: operator: )
   96: block: 
    97: block_content: 
     98: expr_stmt: 
      99: expr: 
       100: name: 
        101: name: si
        102: operator: ->
        103: name: intra_slice_allowed_flag
       104: operator: =
       105: call: 
        106: name: gf_bs_read_int_log
        107: argument_list: 
         108: argument: 
          109: expr: 
           110: name: bs
         111: argument: 
          112: expr: 
           113: literal: 1
         114: argument: 
          115: expr: 
           116: literal: "intra_slice_allowed_flag"
 117: expr_stmt: 
  118: expr: 
   119: name: pps_id
   120: operator: =
   121: call: 
    122: name: gf_bs_read_ue_log
    123: argument_list: 
     124: argument: 
      125: expr: 
       126: name: bs
     127: argument: 
      128: expr: 
       129: literal: "pps_id"
 130: if_stmt: 
  131: if: 
   132: condition: 
    133: expr: 
     134: operator: (
     135: name: pps_id
     136: operator: <
     137: literal: 0
     138: operator: )
     139: operator: ||
     140: operator: (
     141: name: pps_id
     142: operator: >=
     143: literal: 64
     144: operator: )
   145: block: 
    146: block_content: 
     147: return: 
      148: expr: 
       149: operator: -
       150: literal: 1
 151: expr_stmt: 
  152: expr: 
   153: name: 
    154: name: si
    155: operator: ->
    156: name: pps
   157: operator: =
   158: operator: &
   159: name: 
    160: name: vvc
    161: operator: ->
    162: name: pps
    163: index: 
     164: expr: 
      165: name: pps_id
 166: expr_stmt: 
  167: expr: 
   168: name: 
    169: name: si
    170: operator: ->
    171: name: sps
   172: operator: =
   173: operator: &
   174: name: 
    175: name: vvc
    176: operator: ->
    177: name: sps
    178: index: 
     179: expr: 
      180: name: 
       181: name: si
       182: operator: ->
       183: name: pps
       184: operator: ->
       185: name: sps_id
 186: expr_stmt: 
  187: expr: 
   188: name: 
    189: name: si
    190: operator: ->
    191: name: poc_lsb
   192: operator: =
   193: call: 
    194: name: gf_bs_read_int_log
    195: argument_list: 
     196: argument: 
      197: expr: 
       198: name: bs
     199: argument: 
      200: expr: 
       201: name: 
        202: name: si
        203: operator: ->
        204: name: sps
        205: operator: ->
        206: name: log2_max_poc_lsb
     207: argument: 
      208: expr: 
       209: literal: "poc_lsb"
 210: expr_stmt: 
  211: expr: 
   212: name: 
    213: name: si
    214: operator: ->
    215: name: recovery_point_valid
   216: operator: =
   217: literal: 0
 218: expr_stmt: 
  219: expr: 
   220: name: 
    221: name: si
    222: operator: ->
    223: name: gdr_recovery_count
   224: operator: =
   225: literal: 0
 226: if_stmt: 
  227: if: 
   228: condition: 
    229: expr: 
     230: name: 
      231: name: si
      232: operator: ->
      233: name: gdr_pic
   234: block: 
    235: block_content: 
     236: expr_stmt: 
      237: expr: 
       238: name: 
        239: name: si
        240: operator: ->
        241: name: recovery_point_valid
       242: operator: =
       243: literal: 1
     244: expr_stmt: 
      245: expr: 
       246: name: 
        247: name: si
        248: operator: ->
        249: name: gdr_recovery_count
       250: operator: =
       251: call: 
        252: name: gf_bs_read_ue_log
        253: argument_list: 
         254: argument: 
          255: expr: 
           256: name: bs
         257: argument: 
          258: expr: 
           259: literal: "gdr_recovery_count"
 260: expr_stmt: 
  261: expr: 
   262: call: 
    263: name: gf_bs_read_int_log
    264: argument_list: 
     265: argument: 
      266: expr: 
       267: name: bs
     268: argument: 
      269: expr: 
       270: name: 
        271: name: si
        272: operator: ->
        273: name: sps
        274: operator: ->
        275: name: ph_num_extra_bits
     276: argument: 
      277: expr: 
       278: literal: "ph_extra_bits"
 279: if_stmt: 
  280: if: 
   281: condition: 
    282: expr: 
     283: name: 
      284: name: si
      285: operator: ->
      286: name: sps
      287: operator: ->
      288: name: poc_msb_cycle_flag
   289: block: 
    290: block_content: 
     291: if_stmt: 
      292: if: 
       293: condition: 
        294: expr: 
         295: operator: (
         296: name: 
          297: name: si
          298: operator: ->
          299: name: poc_msb_cycle_present_flag
         300: operator: =
         301: call: 
          302: name: gf_bs_read_int_log
          303: argument_list: 
           304: argument: 
            305: expr: 
             306: name: bs
           307: argument: 
            308: expr: 
             309: literal: 1
           310: argument: 
            311: expr: 
             312: literal: "poc_msb_cycle_present_flag"
         313: operator: )
       314: block: 
        315: block_content: 
         316: expr_stmt: 
          317: expr: 
           318: name: 
            319: name: si
            320: operator: ->
            321: name: poc_msb_cycle
           322: operator: =
           323: call: 
            324: name: gf_bs_read_int_log
            325: argument_list: 
             326: argument: 
              327: expr: 
               328: name: bs
             329: argument: 
              330: expr: 
               331: name: 
                332: name: si
                333: operator: ->
                334: name: sps
                335: operator: ->
                336: name: poc_msb_cycle_len
             337: argument: 
              338: expr: 
               339: literal: "poc_msb_cycle"
 340: return: 
  341: expr: 
   342: literal: 0
=====
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: pps_id
    5: operator: >=
    6: literal: 64
  7: block: 
   8: block_content: 
    9: return: 
     10: expr: 
      11: operator: -
      12: literal: 1

----------------------------------------
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: operator: (
    5: name: pps_id
    6: operator: <
    7: literal: 0
    8: operator: )
    9: operator: ||
    10: operator: (
    11: name: pps_id
    12: operator: >=
    13: literal: 64
    14: operator: )
  15: block: 
   16: block_content: 
    17: return: 
     18: expr: 
      19: operator: -
      20: literal: 1
=====
0: if: 
 1: condition: 
  2: expr: 
   3: name: pps_id
   4: operator: >=
   5: literal: 64
 6: block: 
  7: block_content: 
   8: return: 
    9: expr: 
     10: operator: -
     11: literal: 1

----------------------------------------
0: if: 
 1: condition: 
  2: expr: 
   3: operator: (
   4: name: pps_id
   5: operator: <
   6: literal: 0
   7: operator: )
   8: operator: ||
   9: operator: (
   10: name: pps_id
   11: operator: >=
   12: literal: 64
   13: operator: )
 14: block: 
  15: block_content: 
   16: return: 
    17: expr: 
     18: operator: -
     19: literal: 1
=====
0: condition: 
 1: expr: 
  2: name: pps_id
  3: operator: >=
  4: literal: 64

----------------------------------------
0: condition: 
 1: expr: 
  2: operator: (
  3: name: pps_id
  4: operator: <
  5: literal: 0
  6: operator: )
  7: operator: ||
  8: operator: (
  9: name: pps_id
  10: operator: >=
  11: literal: 64
  12: operator: )
=====
0: expr: 
 1: name: pps_id
 2: operator: >=
 3: literal: 64

----------------------------------------
0: expr: 
 1: operator: (
 2: name: pps_id
 3: operator: <
 4: literal: 0
 5: operator: )
 6: operator: ||
 7: operator: (
 8: name: pps_id
 9: operator: >=
 10: literal: 64
 11: operator: )
=====
