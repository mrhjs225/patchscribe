0: unit: 
 1: macro: 
  2: name: xfs_acl_from_disk
  3: argument_list: 
   4: argument: 
 5: block: 
  6: block_content: 
   7: decl_stmt: 
    8: decl: 
     9: type: 
      10: name: 
       11: name: struct
       12: name: posix_acl_entry
      13: modifier: *
     14: name: acl_e
   15: decl_stmt: 
    16: decl: 
     17: type: 
      18: name: 
       19: name: struct
       20: name: posix_acl
      21: modifier: *
     22: name: acl
   23: decl_stmt: 
    24: decl: 
     25: type: 
      26: name: 
       27: name: struct
       28: name: xfs_acl_entry
      29: modifier: *
     30: name: ace
   31: decl_stmt: 
    32: decl: 
     33: type: 
      34: name: int
     35: name: count
    36: decl: 
     37: type: 
     38: name: i
   39: expr_stmt: 
    40: expr: 
     41: name: count
     42: operator: =
     43: call: 
      44: name: be32_to_cpu
      45: argument_list: 
       46: argument: 
        47: expr: 
         48: name: 
          49: name: aclp
          50: operator: ->
          51: name: acl_cnt
   52: if_stmt: 
    53: if: 
     54: condition: 
      55: expr: 
       56: name: count
       57: operator: >
       58: name: XFS_ACL_MAX_ENTRIES
     59: block: 
      60: block_content: 
       61: return: 
        62: expr: 
         63: call: 
          64: name: ERR_PTR
          65: argument_list: 
           66: argument: 
            67: expr: 
             68: operator: -
             69: name: EFSCORRUPTED
   70: expr_stmt: 
    71: expr: 
     72: name: acl
     73: operator: =
     74: call: 
      75: name: posix_acl_alloc
      76: argument_list: 
       77: argument: 
        78: expr: 
         79: name: count
       80: argument: 
        81: expr: 
         82: name: GFP_KERNEL
   83: if_stmt: 
    84: if: 
     85: condition: 
      86: expr: 
       87: operator: !
       88: name: acl
     89: block: 
      90: block_content: 
       91: return: 
        92: expr: 
         93: call: 
          94: name: ERR_PTR
          95: argument_list: 
           96: argument: 
            97: expr: 
             98: operator: -
             99: name: ENOMEM
   100: for: 
    101: control: 
     102: init: 
      103: expr: 
       104: name: i
       105: operator: =
       106: literal: 0
     107: condition: 
      108: expr: 
       109: name: i
       110: operator: <
       111: name: count
     112: incr: 
      113: expr: 
       114: name: i
       115: operator: ++
    116: block: 
     117: block_content: 
      118: expr_stmt: 
       119: expr: 
        120: name: acl_e
        121: operator: =
        122: operator: &
        123: name: 
         124: name: acl
         125: operator: ->
         126: name: a_entries
         127: index: 
          128: expr: 
           129: name: i
      130: expr_stmt: 
       131: expr: 
        132: name: ace
        133: operator: =
        134: operator: &
        135: name: 
         136: name: aclp
         137: operator: ->
         138: name: acl_entry
         139: index: 
          140: expr: 
           141: name: i
      142: comment:: 

----------------------------------------
0: unit: 
 1: macro: 
  2: name: xfs_acl_from_disk
  3: argument_list: 
   4: argument: 
 5: block: 
  6: block_content: 
   7: decl_stmt: 
    8: decl: 
     9: type: 
      10: name: 
       11: name: struct
       12: name: posix_acl_entry
      13: modifier: *
     14: name: acl_e
   15: decl_stmt: 
    16: decl: 
     17: type: 
      18: name: 
       19: name: struct
       20: name: posix_acl
      21: modifier: *
     22: name: acl
   23: decl_stmt: 
    24: decl: 
     25: type: 
      26: name: 
       27: name: struct
       28: name: xfs_acl_entry
      29: modifier: *
     30: name: ace
   31: decl_stmt: 
    32: decl: 
     33: type: 
      34: name: unsigned
      35: name: int
     36: name: count
    37: decl: 
     38: type: 
     39: name: i
   40: expr_stmt: 
    41: expr: 
     42: name: count
     43: operator: =
     44: call: 
      45: name: be32_to_cpu
      46: argument_list: 
       47: argument: 
        48: expr: 
         49: name: 
          50: name: aclp
          51: operator: ->
          52: name: acl_cnt
   53: if_stmt: 
    54: if: 
     55: condition: 
      56: expr: 
       57: name: count
       58: operator: >
       59: name: XFS_ACL_MAX_ENTRIES
     60: block: 
      61: block_content: 
       62: return: 
        63: expr: 
         64: call: 
          65: name: ERR_PTR
          66: argument_list: 
           67: argument: 
            68: expr: 
             69: operator: -
             70: name: EFSCORRUPTED
   71: expr_stmt: 
    72: expr: 
     73: name: acl
     74: operator: =
     75: call: 
      76: name: posix_acl_alloc
      77: argument_list: 
       78: argument: 
        79: expr: 
         80: name: count
       81: argument: 
        82: expr: 
         83: name: GFP_KERNEL
   84: if_stmt: 
    85: if: 
     86: condition: 
      87: expr: 
       88: operator: !
       89: name: acl
     90: block: 
      91: block_content: 
       92: return: 
        93: expr: 
         94: call: 
          95: name: ERR_PTR
          96: argument_list: 
           97: argument: 
            98: expr: 
             99: operator: -
             100: name: ENOMEM
   101: for: 
    102: control: 
     103: init: 
      104: expr: 
       105: name: i
       106: operator: =
       107: literal: 0
     108: condition: 
      109: expr: 
       110: name: i
       111: operator: <
       112: name: count
     113: incr: 
      114: expr: 
       115: name: i
       116: operator: ++
    117: block: 
     118: block_content: 
      119: expr_stmt: 
       120: expr: 
        121: name: acl_e
        122: operator: =
        123: operator: &
        124: name: 
         125: name: acl
         126: operator: ->
         127: name: a_entries
         128: index: 
          129: expr: 
           130: name: i
      131: expr_stmt: 
       132: expr: 
        133: name: ace
        134: operator: =
        135: operator: &
        136: name: 
         137: name: aclp
         138: operator: ->
         139: name: acl_entry
         140: index: 
          141: expr: 
           142: name: i
      143: comment:: 
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: posix_acl_entry
     8: modifier: *
    9: name: acl_e
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: 
      14: name: struct
      15: name: posix_acl
     16: modifier: *
    17: name: acl
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: name: 
      22: name: struct
      23: name: xfs_acl_entry
     24: modifier: *
    25: name: ace
  26: decl_stmt: 
   27: decl: 
    28: type: 
     29: name: int
    30: name: count
   31: decl: 
    32: type: 
    33: name: i
  34: expr_stmt: 
   35: expr: 
    36: name: count
    37: operator: =
    38: call: 
     39: name: be32_to_cpu
     40: argument_list: 
      41: argument: 
       42: expr: 
        43: name: 
         44: name: aclp
         45: operator: ->
         46: name: acl_cnt
  47: if_stmt: 
   48: if: 
    49: condition: 
     50: expr: 
      51: name: count
      52: operator: >
      53: name: XFS_ACL_MAX_ENTRIES
    54: block: 
     55: block_content: 
      56: return: 
       57: expr: 
        58: call: 
         59: name: ERR_PTR
         60: argument_list: 
          61: argument: 
           62: expr: 
            63: operator: -
            64: name: EFSCORRUPTED
  65: expr_stmt: 
   66: expr: 
    67: name: acl
    68: operator: =
    69: call: 
     70: name: posix_acl_alloc
     71: argument_list: 
      72: argument: 
       73: expr: 
        74: name: count
      75: argument: 
       76: expr: 
        77: name: GFP_KERNEL
  78: if_stmt: 
   79: if: 
    80: condition: 
     81: expr: 
      82: operator: !
      83: name: acl
    84: block: 
     85: block_content: 
      86: return: 
       87: expr: 
        88: call: 
         89: name: ERR_PTR
         90: argument_list: 
          91: argument: 
           92: expr: 
            93: operator: -
            94: name: ENOMEM
  95: for: 
   96: control: 
    97: init: 
     98: expr: 
      99: name: i
      100: operator: =
      101: literal: 0
    102: condition: 
     103: expr: 
      104: name: i
      105: operator: <
      106: name: count
    107: incr: 
     108: expr: 
      109: name: i
      110: operator: ++
   111: block: 
    112: block_content: 
     113: expr_stmt: 
      114: expr: 
       115: name: acl_e
       116: operator: =
       117: operator: &
       118: name: 
        119: name: acl
        120: operator: ->
        121: name: a_entries
        122: index: 
         123: expr: 
          124: name: i
     125: expr_stmt: 
      126: expr: 
       127: name: ace
       128: operator: =
       129: operator: &
       130: name: 
        131: name: aclp
        132: operator: ->
        133: name: acl_entry
        134: index: 
         135: expr: 
          136: name: i
     137: comment:: 

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: posix_acl_entry
     8: modifier: *
    9: name: acl_e
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: 
      14: name: struct
      15: name: posix_acl
     16: modifier: *
    17: name: acl
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: name: 
      22: name: struct
      23: name: xfs_acl_entry
     24: modifier: *
    25: name: ace
  26: decl_stmt: 
   27: decl: 
    28: type: 
     29: name: unsigned
     30: name: int
    31: name: count
   32: decl: 
    33: type: 
    34: name: i
  35: expr_stmt: 
   36: expr: 
    37: name: count
    38: operator: =
    39: call: 
     40: name: be32_to_cpu
     41: argument_list: 
      42: argument: 
       43: expr: 
        44: name: 
         45: name: aclp
         46: operator: ->
         47: name: acl_cnt
  48: if_stmt: 
   49: if: 
    50: condition: 
     51: expr: 
      52: name: count
      53: operator: >
      54: name: XFS_ACL_MAX_ENTRIES
    55: block: 
     56: block_content: 
      57: return: 
       58: expr: 
        59: call: 
         60: name: ERR_PTR
         61: argument_list: 
          62: argument: 
           63: expr: 
            64: operator: -
            65: name: EFSCORRUPTED
  66: expr_stmt: 
   67: expr: 
    68: name: acl
    69: operator: =
    70: call: 
     71: name: posix_acl_alloc
     72: argument_list: 
      73: argument: 
       74: expr: 
        75: name: count
      76: argument: 
       77: expr: 
        78: name: GFP_KERNEL
  79: if_stmt: 
   80: if: 
    81: condition: 
     82: expr: 
      83: operator: !
      84: name: acl
    85: block: 
     86: block_content: 
      87: return: 
       88: expr: 
        89: call: 
         90: name: ERR_PTR
         91: argument_list: 
          92: argument: 
           93: expr: 
            94: operator: -
            95: name: ENOMEM
  96: for: 
   97: control: 
    98: init: 
     99: expr: 
      100: name: i
      101: operator: =
      102: literal: 0
    103: condition: 
     104: expr: 
      105: name: i
      106: operator: <
      107: name: count
    108: incr: 
     109: expr: 
      110: name: i
      111: operator: ++
   112: block: 
    113: block_content: 
     114: expr_stmt: 
      115: expr: 
       116: name: acl_e
       117: operator: =
       118: operator: &
       119: name: 
        120: name: acl
        121: operator: ->
        122: name: a_entries
        123: index: 
         124: expr: 
          125: name: i
     126: expr_stmt: 
      127: expr: 
       128: name: ace
       129: operator: =
       130: operator: &
       131: name: 
        132: name: aclp
        133: operator: ->
        134: name: acl_entry
        135: index: 
         136: expr: 
          137: name: i
     138: comment:: 
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: posix_acl_entry
    7: modifier: *
   8: name: acl_e
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: 
     13: name: struct
     14: name: posix_acl
    15: modifier: *
   16: name: acl
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: name: 
     21: name: struct
     22: name: xfs_acl_entry
    23: modifier: *
   24: name: ace
 25: decl_stmt: 
  26: decl: 
   27: type: 
    28: name: int
   29: name: count
  30: decl: 
   31: type: 
   32: name: i
 33: expr_stmt: 
  34: expr: 
   35: name: count
   36: operator: =
   37: call: 
    38: name: be32_to_cpu
    39: argument_list: 
     40: argument: 
      41: expr: 
       42: name: 
        43: name: aclp
        44: operator: ->
        45: name: acl_cnt
 46: if_stmt: 
  47: if: 
   48: condition: 
    49: expr: 
     50: name: count
     51: operator: >
     52: name: XFS_ACL_MAX_ENTRIES
   53: block: 
    54: block_content: 
     55: return: 
      56: expr: 
       57: call: 
        58: name: ERR_PTR
        59: argument_list: 
         60: argument: 
          61: expr: 
           62: operator: -
           63: name: EFSCORRUPTED
 64: expr_stmt: 
  65: expr: 
   66: name: acl
   67: operator: =
   68: call: 
    69: name: posix_acl_alloc
    70: argument_list: 
     71: argument: 
      72: expr: 
       73: name: count
     74: argument: 
      75: expr: 
       76: name: GFP_KERNEL
 77: if_stmt: 
  78: if: 
   79: condition: 
    80: expr: 
     81: operator: !
     82: name: acl
   83: block: 
    84: block_content: 
     85: return: 
      86: expr: 
       87: call: 
        88: name: ERR_PTR
        89: argument_list: 
         90: argument: 
          91: expr: 
           92: operator: -
           93: name: ENOMEM
 94: for: 
  95: control: 
   96: init: 
    97: expr: 
     98: name: i
     99: operator: =
     100: literal: 0
   101: condition: 
    102: expr: 
     103: name: i
     104: operator: <
     105: name: count
   106: incr: 
    107: expr: 
     108: name: i
     109: operator: ++
  110: block: 
   111: block_content: 
    112: expr_stmt: 
     113: expr: 
      114: name: acl_e
      115: operator: =
      116: operator: &
      117: name: 
       118: name: acl
       119: operator: ->
       120: name: a_entries
       121: index: 
        122: expr: 
         123: name: i
    124: expr_stmt: 
     125: expr: 
      126: name: ace
      127: operator: =
      128: operator: &
      129: name: 
       130: name: aclp
       131: operator: ->
       132: name: acl_entry
       133: index: 
        134: expr: 
         135: name: i
    136: comment:: 

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: posix_acl_entry
    7: modifier: *
   8: name: acl_e
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: 
     13: name: struct
     14: name: posix_acl
    15: modifier: *
   16: name: acl
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: name: 
     21: name: struct
     22: name: xfs_acl_entry
    23: modifier: *
   24: name: ace
 25: decl_stmt: 
  26: decl: 
   27: type: 
    28: name: unsigned
    29: name: int
   30: name: count
  31: decl: 
   32: type: 
   33: name: i
 34: expr_stmt: 
  35: expr: 
   36: name: count
   37: operator: =
   38: call: 
    39: name: be32_to_cpu
    40: argument_list: 
     41: argument: 
      42: expr: 
       43: name: 
        44: name: aclp
        45: operator: ->
        46: name: acl_cnt
 47: if_stmt: 
  48: if: 
   49: condition: 
    50: expr: 
     51: name: count
     52: operator: >
     53: name: XFS_ACL_MAX_ENTRIES
   54: block: 
    55: block_content: 
     56: return: 
      57: expr: 
       58: call: 
        59: name: ERR_PTR
        60: argument_list: 
         61: argument: 
          62: expr: 
           63: operator: -
           64: name: EFSCORRUPTED
 65: expr_stmt: 
  66: expr: 
   67: name: acl
   68: operator: =
   69: call: 
    70: name: posix_acl_alloc
    71: argument_list: 
     72: argument: 
      73: expr: 
       74: name: count
     75: argument: 
      76: expr: 
       77: name: GFP_KERNEL
 78: if_stmt: 
  79: if: 
   80: condition: 
    81: expr: 
     82: operator: !
     83: name: acl
   84: block: 
    85: block_content: 
     86: return: 
      87: expr: 
       88: call: 
        89: name: ERR_PTR
        90: argument_list: 
         91: argument: 
          92: expr: 
           93: operator: -
           94: name: ENOMEM
 95: for: 
  96: control: 
   97: init: 
    98: expr: 
     99: name: i
     100: operator: =
     101: literal: 0
   102: condition: 
    103: expr: 
     104: name: i
     105: operator: <
     106: name: count
   107: incr: 
    108: expr: 
     109: name: i
     110: operator: ++
  111: block: 
   112: block_content: 
    113: expr_stmt: 
     114: expr: 
      115: name: acl_e
      116: operator: =
      117: operator: &
      118: name: 
       119: name: acl
       120: operator: ->
       121: name: a_entries
       122: index: 
        123: expr: 
         124: name: i
    125: expr_stmt: 
     126: expr: 
      127: name: ace
      128: operator: =
      129: operator: &
      130: name: 
       131: name: aclp
       132: operator: ->
       133: name: acl_entry
       134: index: 
        135: expr: 
         136: name: i
    137: comment:: 
=====
0: decl_stmt: 
 1: decl: 
  2: type: 
   3: name: int
  4: name: count
 5: decl: 
  6: type: 
  7: name: i

----------------------------------------
0: decl_stmt: 
 1: decl: 
  2: type: 
   3: name: unsigned
   4: name: int
  5: name: count
 6: decl: 
  7: type: 
  8: name: i
=====
0: decl: 
 1: type: 
  2: name: int
 3: name: count

----------------------------------------
0: decl: 
 1: type: 
  2: name: unsigned
  3: name: int
 4: name: count
=====
