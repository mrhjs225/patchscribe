0: unit: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: int
  5: name: __videobuf_mmap_mapper
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: 
       11: name: struct
       12: name: videobuf_queue
      13: modifier: *
     14: name: q
   15: parameter: 
    16: decl: 
     17: type: 
      18: name: 
       19: name: struct
       20: name: vm_area_struct
      21: modifier: *
     22: name: vma
  23: block: 
   24: block_content: 
    25: decl_stmt: 
     26: decl: 
      27: type: 
       28: name: 
        29: name: struct
        30: name: videbuf_vmalloc_memory
       31: modifier: *
      32: name: mem
    33: decl_stmt: 
     34: decl: 
      35: type: 
       36: name: 
        37: name: struct
        38: name: videobuf_mapping
       39: modifier: *
      40: name: map
    41: decl_stmt: 
     42: decl: 
      43: type: 
       44: name: unsigned
       45: name: int
      46: name: first
    47: decl_stmt: 
     48: decl: 
      49: type: 
       50: name: int
      51: name: retval
    52: decl_stmt: 
     53: decl: 
      54: type: 
       55: name: unsigned
       56: name: long
      57: name: offset
      58: init: 
       59: expr: 
        60: name: 
         61: name: vma
         62: operator: ->
         63: name: vm_pgoff
        64: operator: <<
        65: name: PAGE_SHIFT
    66: if_stmt: 
     67: if: 
      68: condition: 
       69: expr: 
        70: operator: !
        71: operator: (
        72: name: 
         73: name: vma
         74: operator: ->
         75: name: vm_flags
        76: operator: &
        77: name: VM_WRITE
        78: operator: )
        79: operator: ||
        80: operator: !
        81: operator: (
        82: name: 
         83: name: vma
         84: operator: ->
         85: name: vm_flags
        86: operator: &
        87: name: VM_SHARED
        88: operator: )
      89: block: 
       90: block_content: 
        91: return: 
         92: expr: 
          93: operator: -
          94: name: EINVAL
    95: comment: /* look for first buffer to map */
    96: for: 
     97: control: 
      98: init: 
       99: expr: 
        100: name: first
        101: operator: =
        102: literal: 0
      103: condition: 
       104: expr: 
        105: name: first
        106: operator: <
        107: name: VIDEO_MAX_FRAME
      108: incr: 
       109: expr: 
        110: name: first
        111: operator: ++
     112: block: 
      113: block_content: 
       114: if_stmt: 
        115: if: 
         116: condition: 
          117: expr: 
           118: name: NULL
           119: operator: ==
           120: name: 
            121: name: q
            122: operator: ->
            123: name: bufs
            124: index: 
             125: expr: 
              126: name: first
         127: block: 
          128: block_content: 
           129: continue: 
       130: if_stmt: 
        131: if: 
         132: condition: 
          133: expr: 
           134: name: V4L2_MEMORY_MMAP
           135: operator: !=
           136: name: 
            137: name: q
            138: operator: ->
            139: name: bufs
            140: index: 
             141: expr: 
              142: name: first
           143: operator: ->
           144: name: memory
         145: block: 
          146: block_content: 
           147: continue: 
       148: if_stmt: 
        149: if: 
         150: condition: 
          151: expr: 
           152: name: 
            153: name: q
            154: operator: ->
            155: name: bufs
            156: index: 
             157: expr: 
              158: name: first
           159: operator: ->
           160: name: boff
           161: operator: ==
           162: name: offset
         163: block: 
          164: block_content: 
           165: break: 
    166: if_stmt: 
     167: if: 
      168: condition: 
       169: expr: 
        170: name: VIDEO_MAX_FRAME
        171: operator: ==
        172: name: first
      173: block: 
       174: block_content: 
        175: expr_stmt: 
         176: expr: 
          177: call: 
           178: name: dprintk
           179: argument_list: 
            180: argument: 
             181: expr: 
              182: literal: 1
            183: argument: 
             184: expr: 
              185: literal: "mmap app bug: offset invalid [offset=0x%lx]\n"
            186: argument: 
             187: expr: 
              188: operator: (
              189: name: 
               190: name: vma
               191: operator: ->
               192: name: vm_pgoff
              193: operator: <<
              194: name: PAGE_SHIFT
              195: operator: )
        196: return: 
         197: expr: 
          198: operator: -
          199: name: EINVAL
    200: comment: /* create mapping + update buffer list */
    201: expr_stmt: 
     202: expr: 
      203: name: map
      204: operator: =
      205: name: 
       206: name: q
       207: operator: ->
       208: name: bufs
       209: index: 
        210: expr: 
         211: name: first
      212: operator: ->
      213: name: map
      214: operator: =
      215: call: 
       216: name: kmalloc
       217: argument_list: 
        218: argument: 
         219: expr: 
          220: sizeof: 
           221: argument_list: 
            222: argument: 
             223: expr: 
              224: name: videobuf_mapping
        225: argument: 
         226: expr: 
          227: name: GFP_KERNEL
    228: if_stmt: 
     229: if: 
      230: condition: 
       231: expr: 
        232: name: NULL
        233: operator: ==
        234: name: map
      235: block: 
       236: block_content: 
        237: return: 
         238: expr: 
          239: operator: -
          240: name: ENOMEM
    241: expr_stmt: 
     242: expr: 
      243: name: 
       244: name: map
       245: operator: ->
       246: name: start
      247: operator: =
      248: name: 
       249: name: vma
       250: operator: ->
       251: name: vm_start
    252: expr_stmt: 
     253: expr: 
      254: name: 
       255: name: map
       256: operator: ->
       257: name: end
      258: operator: =
      259: name: 
       260: name: vma
       261: operator: ->
       262: name: vm_end
    263: expr_stmt: 
     264: expr: 
      265: name: 
       266: name: map
       267: operator: ->
       268: name: q
      269: operator: =
      270: name: q
    271: expr_stmt: 
     272: expr: 
      273: name: 
       274: name: q
       275: operator: ->
       276: name: bufs
       277: index: 
        278: expr: 
         279: name: first
      280: operator: ->
      281: name: baddr
      282: operator: =
      283: name: 
       284: name: vma
       285: operator: ->
       286: name: vm_start
    287: expr_stmt: 
     288: expr: 
      289: name: 
       290: name: vma
       291: operator: ->
       292: name: vm_ops
      293: operator: =
      294: operator: &
      295: name: videobuf_vm_ops
    296: expr_stmt: 
     297: expr: 
      298: name: 
       299: name: vma
       300: operator: ->
       301: name: vm_flags
      302: operator: |=
      303: name: VM_DONTEXPAND
      304: operator: |
      305: name: VM_RESERVED
    306: expr_stmt: 
     307: expr: 
      308: name: 
       309: name: vma
       310: operator: ->
       311: name: vm_private_data
      312: operator: =
      313: name: map
    314: expr_stmt: 
     315: expr: 
      316: name: mem
      317: operator: =
      318: name: 
       319: name: q
       320: operator: ->
       321: name: bufs
       322: index: 
        323: expr: 
         324: name: first
      325: operator: ->
      326: name: priv
    327: expr_stmt: 
     328: expr: 
      329: call: 
       330: name: BUG_ON
       331: argument_list: 
        332: argument: 
         333: expr: 
          334: operator: !
          335: name: mem
    336: expr_stmt: 
     337: expr: 
      338: call: 
       339: name: MAGIC_CHECK
       340: argument_list: 
        341: argument: 
         342: expr: 
          343: name: 
           344: name: mem
           345: operator: ->
           346: name: magic
        347: argument: 
         348: expr: 
          349: name: MAGIC_VMAL_MEM
    350: comment: /* Try to remap memory */
    351: expr_stmt: 
     352: expr: 
      353: name: retval
      354: operator: =
      355: call: 
       356: name: remap_vmalloc_range
       357: argument_list: 
        358: argument: 
         359: expr: 
          360: name: vma
        361: argument: 
         362: expr: 
          363: name: 
           364: name: mem
           365: operator: ->
           366: name: vmalloc
        367: argument: 
         368: expr: 
          369: literal: 0
    370: if_stmt: 
     371: if: 
      372: condition: 
       373: expr: 
        374: name: retval
        375: operator: <
        376: literal: 0
      377: block: 
       378: block_content: 
        379: expr_stmt: 
         380: expr: 
          381: call: 
           382: name: dprintk
           383: argument_list: 
            384: argument: 
             385: expr: 
              386: literal: 1
            387: argument: 
             388: expr: 
              389: literal: "mmap: postponing remap_vmalloc_range\n"
        390: expr_stmt: 
         391: expr: 
          392: name: 
           393: name: mem
           394: operator: ->
           395: name: vma
          396: operator: =
          397: call: 
           398: name: kmalloc
           399: argument_list: 
            400: argument: 
             401: expr: 
              402: sizeof: 
               403: argument_list: 
                404: argument: 
                 405: expr: 
                  406: operator: *
                  407: name: vma
            408: argument: 
             409: expr: 
              410: name: GFP_KERNEL
        411: if_stmt: 
         412: if: 
          413: condition: 
           414: expr: 
            415: operator: !
            416: name: 
             417: name: mem
             418: operator: ->
             419: name: vma
          420: block: 
           421: block_content: 
            422: expr_stmt: 
             423: expr: 
              424: call: 
               425: name: kfree
               426: argument_list: 
                427: argument: 
                 428: expr: 
                  429: name: map
            430: expr_stmt: 
             431: expr: 
              432: name: 
               433: name: q
               434: operator: ->
               435: name: bufs
               436: index: 
                437: expr: 
                 438: name: first
              439: operator: ->
              440: name: map
              441: operator: =
              442: name: NULL
            443: return: 
             444: expr: 
              445: operator: -
              446: name: ENOMEM
        447: expr_stmt: 
         448: expr: 
          449: call: 
           450: name: memcpy
           451: argument_list: 
            452: argument: 
             453: expr: 
              454: name: 
               455: name: mem
               456: operator: ->
               457: name: vma
            458: argument: 
             459: expr: 
              460: name: vma
            461: argument: 
             462: expr: 
              463: sizeof: 
               464: argument_list: 
                465: argument: 
                 466: expr: 
                  467: operator: *
                  468: name: vma
    469: expr_stmt: 
     470: expr: 
      471: call: 
       472: name: dprintk
       473: argument_list: 
        474: argument: 
         475: expr: 
          476: literal: 1
        477: argument: 
         478: expr: 
          479: literal: "mmap %p: q=%p %08lx-%08lx (%lx) pgoff %08lx buf %d\n"
        480: argument: 
         481: expr: 
          482: name: map
        483: argument: 
         484: expr: 
          485: name: q
        486: argument: 
         487: expr: 
          488: name: 
           489: name: vma
           490: operator: ->
           491: name: vm_start
        492: argument: 
         493: expr: 
          494: name: 
           495: name: vma
           496: operator: ->
           497: name: vm_end
        498: argument: 
         499: expr: 
          500: operator: (
          501: name: long
          502: name: int
          503: operator: )
          504: name: 
           505: name: q
           506: operator: ->
           507: name: bufs
           508: index: 
            509: expr: 
             510: name: first
          511: operator: ->
          512: name: bsize
        513: argument: 
         514: expr: 
          515: name: 
           516: name: vma
           517: operator: ->
           518: name: vm_pgoff
        519: argument: 
         520: expr: 
          521: name: first
    522: expr_stmt: 
     523: expr: 
      524: call: 
       525: name: videobuf_vm_open
       526: argument_list: 
        527: argument: 
         528: expr: 
          529: name: vma
    530: return: 
     531: expr: 
      532: operator: (
      533: literal: 0
      534: operator: )

----------------------------------------
0: unit: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: int
  5: name: __videobuf_mmap_mapper
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: 
       11: name: struct
       12: name: videobuf_queue
      13: modifier: *
     14: name: q
   15: parameter: 
    16: decl: 
     17: type: 
      18: name: 
       19: name: struct
       20: name: vm_area_struct
      21: modifier: *
     22: name: vma
  23: block: 
   24: block_content: 
    25: decl_stmt: 
     26: decl: 
      27: type: 
       28: name: 
        29: name: struct
        30: name: videbuf_vmalloc_memory
       31: modifier: *
      32: name: mem
    33: decl_stmt: 
     34: decl: 
      35: type: 
       36: name: 
        37: name: struct
        38: name: videobuf_mapping
       39: modifier: *
      40: name: map
    41: decl_stmt: 
     42: decl: 
      43: type: 
       44: name: unsigned
       45: name: int
      46: name: first
    47: decl_stmt: 
     48: decl: 
      49: type: 
       50: name: int
      51: name: retval
    52: decl_stmt: 
     53: decl: 
      54: type: 
       55: name: unsigned
       56: name: long
      57: name: offset
      58: init: 
       59: expr: 
        60: name: 
         61: name: vma
         62: operator: ->
         63: name: vm_pgoff
        64: operator: <<
        65: name: PAGE_SHIFT
    66: if_stmt: 
     67: if: 
      68: condition: 
       69: expr: 
        70: operator: !
        71: operator: (
        72: name: 
         73: name: vma
         74: operator: ->
         75: name: vm_flags
        76: operator: &
        77: name: VM_WRITE
        78: operator: )
        79: operator: ||
        80: operator: !
        81: operator: (
        82: name: 
         83: name: vma
         84: operator: ->
         85: name: vm_flags
        86: operator: &
        87: name: VM_SHARED
        88: operator: )
      89: block: 
       90: block_content: 
        91: return: 
         92: expr: 
          93: operator: -
          94: name: EINVAL
    95: comment: /* look for first buffer to map */
    96: for: 
     97: control: 
      98: init: 
       99: expr: 
        100: name: first
        101: operator: =
        102: literal: 0
      103: condition: 
       104: expr: 
        105: name: first
        106: operator: <
        107: name: VIDEO_MAX_FRAME
      108: incr: 
       109: expr: 
        110: name: first
        111: operator: ++
     112: block: 
      113: block_content: 
       114: if_stmt: 
        115: if: 
         116: condition: 
          117: expr: 
           118: name: NULL
           119: operator: ==
           120: name: 
            121: name: q
            122: operator: ->
            123: name: bufs
            124: index: 
             125: expr: 
              126: name: first
         127: block: 
          128: block_content: 
           129: continue: 
       130: if_stmt: 
        131: if: 
         132: condition: 
          133: expr: 
           134: name: V4L2_MEMORY_MMAP
           135: operator: !=
           136: name: 
            137: name: q
            138: operator: ->
            139: name: bufs
            140: index: 
             141: expr: 
              142: name: first
           143: operator: ->
           144: name: memory
         145: block: 
          146: block_content: 
           147: continue: 
       148: if_stmt: 
        149: if: 
         150: condition: 
          151: expr: 
           152: name: 
            153: name: q
            154: operator: ->
            155: name: bufs
            156: index: 
             157: expr: 
              158: name: first
           159: operator: ->
           160: name: boff
           161: operator: ==
           162: name: offset
         163: block: 
          164: block_content: 
           165: break: 
    166: if_stmt: 
     167: if: 
      168: condition: 
       169: expr: 
        170: name: VIDEO_MAX_FRAME
        171: operator: ==
        172: name: first
      173: block: 
       174: block_content: 
        175: expr_stmt: 
         176: expr: 
          177: call: 
           178: name: dprintk
           179: argument_list: 
            180: argument: 
             181: expr: 
              182: literal: 1
            183: argument: 
             184: expr: 
              185: literal: "mmap app bug: offset invalid [offset=0x%lx]\n"
            186: argument: 
             187: expr: 
              188: operator: (
              189: name: 
               190: name: vma
               191: operator: ->
               192: name: vm_pgoff
              193: operator: <<
              194: name: PAGE_SHIFT
              195: operator: )
        196: return: 
         197: expr: 
          198: operator: -
          199: name: EINVAL
    200: comment: /* create mapping + update buffer list */
    201: expr_stmt: 
     202: expr: 
      203: name: map
      204: operator: =
      205: name: 
       206: name: q
       207: operator: ->
       208: name: bufs
       209: index: 
        210: expr: 
         211: name: first
      212: operator: ->
      213: name: map
      214: operator: =
      215: call: 
       216: name: kzalloc
       217: argument_list: 
        218: argument: 
         219: expr: 
          220: sizeof: 
           221: argument_list: 
            222: argument: 
             223: expr: 
              224: name: videobuf_mapping
        225: argument: 
         226: expr: 
          227: name: GFP_KERNEL
    228: if_stmt: 
     229: if: 
      230: condition: 
       231: expr: 
        232: name: NULL
        233: operator: ==
        234: name: map
      235: block: 
       236: block_content: 
        237: return: 
         238: expr: 
          239: operator: -
          240: name: ENOMEM
    241: expr_stmt: 
     242: expr: 
      243: name: 
       244: name: map
       245: operator: ->
       246: name: start
      247: operator: =
      248: name: 
       249: name: vma
       250: operator: ->
       251: name: vm_start
    252: expr_stmt: 
     253: expr: 
      254: name: 
       255: name: map
       256: operator: ->
       257: name: end
      258: operator: =
      259: name: 
       260: name: vma
       261: operator: ->
       262: name: vm_end
    263: expr_stmt: 
     264: expr: 
      265: name: 
       266: name: map
       267: operator: ->
       268: name: q
      269: operator: =
      270: name: q
    271: expr_stmt: 
     272: expr: 
      273: name: 
       274: name: q
       275: operator: ->
       276: name: bufs
       277: index: 
        278: expr: 
         279: name: first
      280: operator: ->
      281: name: baddr
      282: operator: =
      283: name: 
       284: name: vma
       285: operator: ->
       286: name: vm_start
    287: expr_stmt: 
     288: expr: 
      289: name: 
       290: name: vma
       291: operator: ->
       292: name: vm_ops
      293: operator: =
      294: operator: &
      295: name: videobuf_vm_ops
    296: expr_stmt: 
     297: expr: 
      298: name: 
       299: name: vma
       300: operator: ->
       301: name: vm_flags
      302: operator: |=
      303: name: VM_DONTEXPAND
      304: operator: |
      305: name: VM_RESERVED
    306: expr_stmt: 
     307: expr: 
      308: name: 
       309: name: vma
       310: operator: ->
       311: name: vm_private_data
      312: operator: =
      313: name: map
    314: expr_stmt: 
     315: expr: 
      316: name: mem
      317: operator: =
      318: name: 
       319: name: q
       320: operator: ->
       321: name: bufs
       322: index: 
        323: expr: 
         324: name: first
      325: operator: ->
      326: name: priv
    327: expr_stmt: 
     328: expr: 
      329: call: 
       330: name: BUG_ON
       331: argument_list: 
        332: argument: 
         333: expr: 
          334: operator: !
          335: name: mem
    336: expr_stmt: 
     337: expr: 
      338: call: 
       339: name: MAGIC_CHECK
       340: argument_list: 
        341: argument: 
         342: expr: 
          343: name: 
           344: name: mem
           345: operator: ->
           346: name: magic
        347: argument: 
         348: expr: 
          349: name: MAGIC_VMAL_MEM
    350: comment: /* Try to remap memory */
    351: expr_stmt: 
     352: expr: 
      353: name: retval
      354: operator: =
      355: call: 
       356: name: remap_vmalloc_range
       357: argument_list: 
        358: argument: 
         359: expr: 
          360: name: vma
        361: argument: 
         362: expr: 
          363: name: 
           364: name: mem
           365: operator: ->
           366: name: vmalloc
        367: argument: 
         368: expr: 
          369: literal: 0
    370: if_stmt: 
     371: if: 
      372: condition: 
       373: expr: 
        374: name: retval
        375: operator: <
        376: literal: 0
      377: block: 
       378: block_content: 
        379: expr_stmt: 
         380: expr: 
          381: call: 
           382: name: dprintk
           383: argument_list: 
            384: argument: 
             385: expr: 
              386: literal: 1
            387: argument: 
             388: expr: 
              389: literal: "mmap: postponing remap_vmalloc_range\n"
        390: expr_stmt: 
         391: expr: 
          392: name: 
           393: name: mem
           394: operator: ->
           395: name: vma
          396: operator: =
          397: call: 
           398: name: kmalloc
           399: argument_list: 
            400: argument: 
             401: expr: 
              402: sizeof: 
               403: argument_list: 
                404: argument: 
                 405: expr: 
                  406: operator: *
                  407: name: vma
            408: argument: 
             409: expr: 
              410: name: GFP_KERNEL
        411: if_stmt: 
         412: if: 
          413: condition: 
           414: expr: 
            415: operator: !
            416: name: 
             417: name: mem
             418: operator: ->
             419: name: vma
          420: block: 
           421: block_content: 
            422: expr_stmt: 
             423: expr: 
              424: call: 
               425: name: kfree
               426: argument_list: 
                427: argument: 
                 428: expr: 
                  429: name: map
            430: expr_stmt: 
             431: expr: 
              432: name: 
               433: name: q
               434: operator: ->
               435: name: bufs
               436: index: 
                437: expr: 
                 438: name: first
              439: operator: ->
              440: name: map
              441: operator: =
              442: name: NULL
            443: return: 
             444: expr: 
              445: operator: -
              446: name: ENOMEM
        447: expr_stmt: 
         448: expr: 
          449: call: 
           450: name: memcpy
           451: argument_list: 
            452: argument: 
             453: expr: 
              454: name: 
               455: name: mem
               456: operator: ->
               457: name: vma
            458: argument: 
             459: expr: 
              460: name: vma
            461: argument: 
             462: expr: 
              463: sizeof: 
               464: argument_list: 
                465: argument: 
                 466: expr: 
                  467: operator: *
                  468: name: vma
    469: expr_stmt: 
     470: expr: 
      471: call: 
       472: name: dprintk
       473: argument_list: 
        474: argument: 
         475: expr: 
          476: literal: 1
        477: argument: 
         478: expr: 
          479: literal: "mmap %p: q=%p %08lx-%08lx (%lx) pgoff %08lx buf %d\n"
        480: argument: 
         481: expr: 
          482: name: map
        483: argument: 
         484: expr: 
          485: name: q
        486: argument: 
         487: expr: 
          488: name: 
           489: name: vma
           490: operator: ->
           491: name: vm_start
        492: argument: 
         493: expr: 
          494: name: 
           495: name: vma
           496: operator: ->
           497: name: vm_end
        498: argument: 
         499: expr: 
          500: operator: (
          501: name: long
          502: name: int
          503: operator: )
          504: name: 
           505: name: q
           506: operator: ->
           507: name: bufs
           508: index: 
            509: expr: 
             510: name: first
          511: operator: ->
          512: name: bsize
        513: argument: 
         514: expr: 
          515: name: 
           516: name: vma
           517: operator: ->
           518: name: vm_pgoff
        519: argument: 
         520: expr: 
          521: name: first
    522: expr_stmt: 
     523: expr: 
      524: call: 
       525: name: videobuf_vm_open
       526: argument_list: 
        527: argument: 
         528: expr: 
          529: name: vma
    530: return: 
     531: expr: 
      532: operator: (
      533: literal: 0
      534: operator: )
=====
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: __videobuf_mmap_mapper
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: 
      10: name: struct
      11: name: videobuf_queue
     12: modifier: *
    13: name: q
  14: parameter: 
   15: decl: 
    16: type: 
     17: name: 
      18: name: struct
      19: name: vm_area_struct
     20: modifier: *
    21: name: vma
 22: block: 
  23: block_content: 
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: 
       28: name: struct
       29: name: videbuf_vmalloc_memory
      30: modifier: *
     31: name: mem
   32: decl_stmt: 
    33: decl: 
     34: type: 
      35: name: 
       36: name: struct
       37: name: videobuf_mapping
      38: modifier: *
     39: name: map
   40: decl_stmt: 
    41: decl: 
     42: type: 
      43: name: unsigned
      44: name: int
     45: name: first
   46: decl_stmt: 
    47: decl: 
     48: type: 
      49: name: int
     50: name: retval
   51: decl_stmt: 
    52: decl: 
     53: type: 
      54: name: unsigned
      55: name: long
     56: name: offset
     57: init: 
      58: expr: 
       59: name: 
        60: name: vma
        61: operator: ->
        62: name: vm_pgoff
       63: operator: <<
       64: name: PAGE_SHIFT
   65: if_stmt: 
    66: if: 
     67: condition: 
      68: expr: 
       69: operator: !
       70: operator: (
       71: name: 
        72: name: vma
        73: operator: ->
        74: name: vm_flags
       75: operator: &
       76: name: VM_WRITE
       77: operator: )
       78: operator: ||
       79: operator: !
       80: operator: (
       81: name: 
        82: name: vma
        83: operator: ->
        84: name: vm_flags
       85: operator: &
       86: name: VM_SHARED
       87: operator: )
     88: block: 
      89: block_content: 
       90: return: 
        91: expr: 
         92: operator: -
         93: name: EINVAL
   94: comment: /* look for first buffer to map */
   95: for: 
    96: control: 
     97: init: 
      98: expr: 
       99: name: first
       100: operator: =
       101: literal: 0
     102: condition: 
      103: expr: 
       104: name: first
       105: operator: <
       106: name: VIDEO_MAX_FRAME
     107: incr: 
      108: expr: 
       109: name: first
       110: operator: ++
    111: block: 
     112: block_content: 
      113: if_stmt: 
       114: if: 
        115: condition: 
         116: expr: 
          117: name: NULL
          118: operator: ==
          119: name: 
           120: name: q
           121: operator: ->
           122: name: bufs
           123: index: 
            124: expr: 
             125: name: first
        126: block: 
         127: block_content: 
          128: continue: 
      129: if_stmt: 
       130: if: 
        131: condition: 
         132: expr: 
          133: name: V4L2_MEMORY_MMAP
          134: operator: !=
          135: name: 
           136: name: q
           137: operator: ->
           138: name: bufs
           139: index: 
            140: expr: 
             141: name: first
          142: operator: ->
          143: name: memory
        144: block: 
         145: block_content: 
          146: continue: 
      147: if_stmt: 
       148: if: 
        149: condition: 
         150: expr: 
          151: name: 
           152: name: q
           153: operator: ->
           154: name: bufs
           155: index: 
            156: expr: 
             157: name: first
          158: operator: ->
          159: name: boff
          160: operator: ==
          161: name: offset
        162: block: 
         163: block_content: 
          164: break: 
   165: if_stmt: 
    166: if: 
     167: condition: 
      168: expr: 
       169: name: VIDEO_MAX_FRAME
       170: operator: ==
       171: name: first
     172: block: 
      173: block_content: 
       174: expr_stmt: 
        175: expr: 
         176: call: 
          177: name: dprintk
          178: argument_list: 
           179: argument: 
            180: expr: 
             181: literal: 1
           182: argument: 
            183: expr: 
             184: literal: "mmap app bug: offset invalid [offset=0x%lx]\n"
           185: argument: 
            186: expr: 
             187: operator: (
             188: name: 
              189: name: vma
              190: operator: ->
              191: name: vm_pgoff
             192: operator: <<
             193: name: PAGE_SHIFT
             194: operator: )
       195: return: 
        196: expr: 
         197: operator: -
         198: name: EINVAL
   199: comment: /* create mapping + update buffer list */
   200: expr_stmt: 
    201: expr: 
     202: name: map
     203: operator: =
     204: name: 
      205: name: q
      206: operator: ->
      207: name: bufs
      208: index: 
       209: expr: 
        210: name: first
     211: operator: ->
     212: name: map
     213: operator: =
     214: call: 
      215: name: kmalloc
      216: argument_list: 
       217: argument: 
        218: expr: 
         219: sizeof: 
          220: argument_list: 
           221: argument: 
            222: expr: 
             223: name: videobuf_mapping
       224: argument: 
        225: expr: 
         226: name: GFP_KERNEL
   227: if_stmt: 
    228: if: 
     229: condition: 
      230: expr: 
       231: name: NULL
       232: operator: ==
       233: name: map
     234: block: 
      235: block_content: 
       236: return: 
        237: expr: 
         238: operator: -
         239: name: ENOMEM
   240: expr_stmt: 
    241: expr: 
     242: name: 
      243: name: map
      244: operator: ->
      245: name: start
     246: operator: =
     247: name: 
      248: name: vma
      249: operator: ->
      250: name: vm_start
   251: expr_stmt: 
    252: expr: 
     253: name: 
      254: name: map
      255: operator: ->
      256: name: end
     257: operator: =
     258: name: 
      259: name: vma
      260: operator: ->
      261: name: vm_end
   262: expr_stmt: 
    263: expr: 
     264: name: 
      265: name: map
      266: operator: ->
      267: name: q
     268: operator: =
     269: name: q
   270: expr_stmt: 
    271: expr: 
     272: name: 
      273: name: q
      274: operator: ->
      275: name: bufs
      276: index: 
       277: expr: 
        278: name: first
     279: operator: ->
     280: name: baddr
     281: operator: =
     282: name: 
      283: name: vma
      284: operator: ->
      285: name: vm_start
   286: expr_stmt: 
    287: expr: 
     288: name: 
      289: name: vma
      290: operator: ->
      291: name: vm_ops
     292: operator: =
     293: operator: &
     294: name: videobuf_vm_ops
   295: expr_stmt: 
    296: expr: 
     297: name: 
      298: name: vma
      299: operator: ->
      300: name: vm_flags
     301: operator: |=
     302: name: VM_DONTEXPAND
     303: operator: |
     304: name: VM_RESERVED
   305: expr_stmt: 
    306: expr: 
     307: name: 
      308: name: vma
      309: operator: ->
      310: name: vm_private_data
     311: operator: =
     312: name: map
   313: expr_stmt: 
    314: expr: 
     315: name: mem
     316: operator: =
     317: name: 
      318: name: q
      319: operator: ->
      320: name: bufs
      321: index: 
       322: expr: 
        323: name: first
     324: operator: ->
     325: name: priv
   326: expr_stmt: 
    327: expr: 
     328: call: 
      329: name: BUG_ON
      330: argument_list: 
       331: argument: 
        332: expr: 
         333: operator: !
         334: name: mem
   335: expr_stmt: 
    336: expr: 
     337: call: 
      338: name: MAGIC_CHECK
      339: argument_list: 
       340: argument: 
        341: expr: 
         342: name: 
          343: name: mem
          344: operator: ->
          345: name: magic
       346: argument: 
        347: expr: 
         348: name: MAGIC_VMAL_MEM
   349: comment: /* Try to remap memory */
   350: expr_stmt: 
    351: expr: 
     352: name: retval
     353: operator: =
     354: call: 
      355: name: remap_vmalloc_range
      356: argument_list: 
       357: argument: 
        358: expr: 
         359: name: vma
       360: argument: 
        361: expr: 
         362: name: 
          363: name: mem
          364: operator: ->
          365: name: vmalloc
       366: argument: 
        367: expr: 
         368: literal: 0
   369: if_stmt: 
    370: if: 
     371: condition: 
      372: expr: 
       373: name: retval
       374: operator: <
       375: literal: 0
     376: block: 
      377: block_content: 
       378: expr_stmt: 
        379: expr: 
         380: call: 
          381: name: dprintk
          382: argument_list: 
           383: argument: 
            384: expr: 
             385: literal: 1
           386: argument: 
            387: expr: 
             388: literal: "mmap: postponing remap_vmalloc_range\n"
       389: expr_stmt: 
        390: expr: 
         391: name: 
          392: name: mem
          393: operator: ->
          394: name: vma
         395: operator: =
         396: call: 
          397: name: kmalloc
          398: argument_list: 
           399: argument: 
            400: expr: 
             401: sizeof: 
              402: argument_list: 
               403: argument: 
                404: expr: 
                 405: operator: *
                 406: name: vma
           407: argument: 
            408: expr: 
             409: name: GFP_KERNEL
       410: if_stmt: 
        411: if: 
         412: condition: 
          413: expr: 
           414: operator: !
           415: name: 
            416: name: mem
            417: operator: ->
            418: name: vma
         419: block: 
          420: block_content: 
           421: expr_stmt: 
            422: expr: 
             423: call: 
              424: name: kfree
              425: argument_list: 
               426: argument: 
                427: expr: 
                 428: name: map
           429: expr_stmt: 
            430: expr: 
             431: name: 
              432: name: q
              433: operator: ->
              434: name: bufs
              435: index: 
               436: expr: 
                437: name: first
             438: operator: ->
             439: name: map
             440: operator: =
             441: name: NULL
           442: return: 
            443: expr: 
             444: operator: -
             445: name: ENOMEM
       446: expr_stmt: 
        447: expr: 
         448: call: 
          449: name: memcpy
          450: argument_list: 
           451: argument: 
            452: expr: 
             453: name: 
              454: name: mem
              455: operator: ->
              456: name: vma
           457: argument: 
            458: expr: 
             459: name: vma
           460: argument: 
            461: expr: 
             462: sizeof: 
              463: argument_list: 
               464: argument: 
                465: expr: 
                 466: operator: *
                 467: name: vma
   468: expr_stmt: 
    469: expr: 
     470: call: 
      471: name: dprintk
      472: argument_list: 
       473: argument: 
        474: expr: 
         475: literal: 1
       476: argument: 
        477: expr: 
         478: literal: "mmap %p: q=%p %08lx-%08lx (%lx) pgoff %08lx buf %d\n"
       479: argument: 
        480: expr: 
         481: name: map
       482: argument: 
        483: expr: 
         484: name: q
       485: argument: 
        486: expr: 
         487: name: 
          488: name: vma
          489: operator: ->
          490: name: vm_start
       491: argument: 
        492: expr: 
         493: name: 
          494: name: vma
          495: operator: ->
          496: name: vm_end
       497: argument: 
        498: expr: 
         499: operator: (
         500: name: long
         501: name: int
         502: operator: )
         503: name: 
          504: name: q
          505: operator: ->
          506: name: bufs
          507: index: 
           508: expr: 
            509: name: first
         510: operator: ->
         511: name: bsize
       512: argument: 
        513: expr: 
         514: name: 
          515: name: vma
          516: operator: ->
          517: name: vm_pgoff
       518: argument: 
        519: expr: 
         520: name: first
   521: expr_stmt: 
    522: expr: 
     523: call: 
      524: name: videobuf_vm_open
      525: argument_list: 
       526: argument: 
        527: expr: 
         528: name: vma
   529: return: 
    530: expr: 
     531: operator: (
     532: literal: 0
     533: operator: )

----------------------------------------
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: __videobuf_mmap_mapper
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: 
      10: name: struct
      11: name: videobuf_queue
     12: modifier: *
    13: name: q
  14: parameter: 
   15: decl: 
    16: type: 
     17: name: 
      18: name: struct
      19: name: vm_area_struct
     20: modifier: *
    21: name: vma
 22: block: 
  23: block_content: 
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: 
       28: name: struct
       29: name: videbuf_vmalloc_memory
      30: modifier: *
     31: name: mem
   32: decl_stmt: 
    33: decl: 
     34: type: 
      35: name: 
       36: name: struct
       37: name: videobuf_mapping
      38: modifier: *
     39: name: map
   40: decl_stmt: 
    41: decl: 
     42: type: 
      43: name: unsigned
      44: name: int
     45: name: first
   46: decl_stmt: 
    47: decl: 
     48: type: 
      49: name: int
     50: name: retval
   51: decl_stmt: 
    52: decl: 
     53: type: 
      54: name: unsigned
      55: name: long
     56: name: offset
     57: init: 
      58: expr: 
       59: name: 
        60: name: vma
        61: operator: ->
        62: name: vm_pgoff
       63: operator: <<
       64: name: PAGE_SHIFT
   65: if_stmt: 
    66: if: 
     67: condition: 
      68: expr: 
       69: operator: !
       70: operator: (
       71: name: 
        72: name: vma
        73: operator: ->
        74: name: vm_flags
       75: operator: &
       76: name: VM_WRITE
       77: operator: )
       78: operator: ||
       79: operator: !
       80: operator: (
       81: name: 
        82: name: vma
        83: operator: ->
        84: name: vm_flags
       85: operator: &
       86: name: VM_SHARED
       87: operator: )
     88: block: 
      89: block_content: 
       90: return: 
        91: expr: 
         92: operator: -
         93: name: EINVAL
   94: comment: /* look for first buffer to map */
   95: for: 
    96: control: 
     97: init: 
      98: expr: 
       99: name: first
       100: operator: =
       101: literal: 0
     102: condition: 
      103: expr: 
       104: name: first
       105: operator: <
       106: name: VIDEO_MAX_FRAME
     107: incr: 
      108: expr: 
       109: name: first
       110: operator: ++
    111: block: 
     112: block_content: 
      113: if_stmt: 
       114: if: 
        115: condition: 
         116: expr: 
          117: name: NULL
          118: operator: ==
          119: name: 
           120: name: q
           121: operator: ->
           122: name: bufs
           123: index: 
            124: expr: 
             125: name: first
        126: block: 
         127: block_content: 
          128: continue: 
      129: if_stmt: 
       130: if: 
        131: condition: 
         132: expr: 
          133: name: V4L2_MEMORY_MMAP
          134: operator: !=
          135: name: 
           136: name: q
           137: operator: ->
           138: name: bufs
           139: index: 
            140: expr: 
             141: name: first
          142: operator: ->
          143: name: memory
        144: block: 
         145: block_content: 
          146: continue: 
      147: if_stmt: 
       148: if: 
        149: condition: 
         150: expr: 
          151: name: 
           152: name: q
           153: operator: ->
           154: name: bufs
           155: index: 
            156: expr: 
             157: name: first
          158: operator: ->
          159: name: boff
          160: operator: ==
          161: name: offset
        162: block: 
         163: block_content: 
          164: break: 
   165: if_stmt: 
    166: if: 
     167: condition: 
      168: expr: 
       169: name: VIDEO_MAX_FRAME
       170: operator: ==
       171: name: first
     172: block: 
      173: block_content: 
       174: expr_stmt: 
        175: expr: 
         176: call: 
          177: name: dprintk
          178: argument_list: 
           179: argument: 
            180: expr: 
             181: literal: 1
           182: argument: 
            183: expr: 
             184: literal: "mmap app bug: offset invalid [offset=0x%lx]\n"
           185: argument: 
            186: expr: 
             187: operator: (
             188: name: 
              189: name: vma
              190: operator: ->
              191: name: vm_pgoff
             192: operator: <<
             193: name: PAGE_SHIFT
             194: operator: )
       195: return: 
        196: expr: 
         197: operator: -
         198: name: EINVAL
   199: comment: /* create mapping + update buffer list */
   200: expr_stmt: 
    201: expr: 
     202: name: map
     203: operator: =
     204: name: 
      205: name: q
      206: operator: ->
      207: name: bufs
      208: index: 
       209: expr: 
        210: name: first
     211: operator: ->
     212: name: map
     213: operator: =
     214: call: 
      215: name: kzalloc
      216: argument_list: 
       217: argument: 
        218: expr: 
         219: sizeof: 
          220: argument_list: 
           221: argument: 
            222: expr: 
             223: name: videobuf_mapping
       224: argument: 
        225: expr: 
         226: name: GFP_KERNEL
   227: if_stmt: 
    228: if: 
     229: condition: 
      230: expr: 
       231: name: NULL
       232: operator: ==
       233: name: map
     234: block: 
      235: block_content: 
       236: return: 
        237: expr: 
         238: operator: -
         239: name: ENOMEM
   240: expr_stmt: 
    241: expr: 
     242: name: 
      243: name: map
      244: operator: ->
      245: name: start
     246: operator: =
     247: name: 
      248: name: vma
      249: operator: ->
      250: name: vm_start
   251: expr_stmt: 
    252: expr: 
     253: name: 
      254: name: map
      255: operator: ->
      256: name: end
     257: operator: =
     258: name: 
      259: name: vma
      260: operator: ->
      261: name: vm_end
   262: expr_stmt: 
    263: expr: 
     264: name: 
      265: name: map
      266: operator: ->
      267: name: q
     268: operator: =
     269: name: q
   270: expr_stmt: 
    271: expr: 
     272: name: 
      273: name: q
      274: operator: ->
      275: name: bufs
      276: index: 
       277: expr: 
        278: name: first
     279: operator: ->
     280: name: baddr
     281: operator: =
     282: name: 
      283: name: vma
      284: operator: ->
      285: name: vm_start
   286: expr_stmt: 
    287: expr: 
     288: name: 
      289: name: vma
      290: operator: ->
      291: name: vm_ops
     292: operator: =
     293: operator: &
     294: name: videobuf_vm_ops
   295: expr_stmt: 
    296: expr: 
     297: name: 
      298: name: vma
      299: operator: ->
      300: name: vm_flags
     301: operator: |=
     302: name: VM_DONTEXPAND
     303: operator: |
     304: name: VM_RESERVED
   305: expr_stmt: 
    306: expr: 
     307: name: 
      308: name: vma
      309: operator: ->
      310: name: vm_private_data
     311: operator: =
     312: name: map
   313: expr_stmt: 
    314: expr: 
     315: name: mem
     316: operator: =
     317: name: 
      318: name: q
      319: operator: ->
      320: name: bufs
      321: index: 
       322: expr: 
        323: name: first
     324: operator: ->
     325: name: priv
   326: expr_stmt: 
    327: expr: 
     328: call: 
      329: name: BUG_ON
      330: argument_list: 
       331: argument: 
        332: expr: 
         333: operator: !
         334: name: mem
   335: expr_stmt: 
    336: expr: 
     337: call: 
      338: name: MAGIC_CHECK
      339: argument_list: 
       340: argument: 
        341: expr: 
         342: name: 
          343: name: mem
          344: operator: ->
          345: name: magic
       346: argument: 
        347: expr: 
         348: name: MAGIC_VMAL_MEM
   349: comment: /* Try to remap memory */
   350: expr_stmt: 
    351: expr: 
     352: name: retval
     353: operator: =
     354: call: 
      355: name: remap_vmalloc_range
      356: argument_list: 
       357: argument: 
        358: expr: 
         359: name: vma
       360: argument: 
        361: expr: 
         362: name: 
          363: name: mem
          364: operator: ->
          365: name: vmalloc
       366: argument: 
        367: expr: 
         368: literal: 0
   369: if_stmt: 
    370: if: 
     371: condition: 
      372: expr: 
       373: name: retval
       374: operator: <
       375: literal: 0
     376: block: 
      377: block_content: 
       378: expr_stmt: 
        379: expr: 
         380: call: 
          381: name: dprintk
          382: argument_list: 
           383: argument: 
            384: expr: 
             385: literal: 1
           386: argument: 
            387: expr: 
             388: literal: "mmap: postponing remap_vmalloc_range\n"
       389: expr_stmt: 
        390: expr: 
         391: name: 
          392: name: mem
          393: operator: ->
          394: name: vma
         395: operator: =
         396: call: 
          397: name: kmalloc
          398: argument_list: 
           399: argument: 
            400: expr: 
             401: sizeof: 
              402: argument_list: 
               403: argument: 
                404: expr: 
                 405: operator: *
                 406: name: vma
           407: argument: 
            408: expr: 
             409: name: GFP_KERNEL
       410: if_stmt: 
        411: if: 
         412: condition: 
          413: expr: 
           414: operator: !
           415: name: 
            416: name: mem
            417: operator: ->
            418: name: vma
         419: block: 
          420: block_content: 
           421: expr_stmt: 
            422: expr: 
             423: call: 
              424: name: kfree
              425: argument_list: 
               426: argument: 
                427: expr: 
                 428: name: map
           429: expr_stmt: 
            430: expr: 
             431: name: 
              432: name: q
              433: operator: ->
              434: name: bufs
              435: index: 
               436: expr: 
                437: name: first
             438: operator: ->
             439: name: map
             440: operator: =
             441: name: NULL
           442: return: 
            443: expr: 
             444: operator: -
             445: name: ENOMEM
       446: expr_stmt: 
        447: expr: 
         448: call: 
          449: name: memcpy
          450: argument_list: 
           451: argument: 
            452: expr: 
             453: name: 
              454: name: mem
              455: operator: ->
              456: name: vma
           457: argument: 
            458: expr: 
             459: name: vma
           460: argument: 
            461: expr: 
             462: sizeof: 
              463: argument_list: 
               464: argument: 
                465: expr: 
                 466: operator: *
                 467: name: vma
   468: expr_stmt: 
    469: expr: 
     470: call: 
      471: name: dprintk
      472: argument_list: 
       473: argument: 
        474: expr: 
         475: literal: 1
       476: argument: 
        477: expr: 
         478: literal: "mmap %p: q=%p %08lx-%08lx (%lx) pgoff %08lx buf %d\n"
       479: argument: 
        480: expr: 
         481: name: map
       482: argument: 
        483: expr: 
         484: name: q
       485: argument: 
        486: expr: 
         487: name: 
          488: name: vma
          489: operator: ->
          490: name: vm_start
       491: argument: 
        492: expr: 
         493: name: 
          494: name: vma
          495: operator: ->
          496: name: vm_end
       497: argument: 
        498: expr: 
         499: operator: (
         500: name: long
         501: name: int
         502: operator: )
         503: name: 
          504: name: q
          505: operator: ->
          506: name: bufs
          507: index: 
           508: expr: 
            509: name: first
         510: operator: ->
         511: name: bsize
       512: argument: 
        513: expr: 
         514: name: 
          515: name: vma
          516: operator: ->
          517: name: vm_pgoff
       518: argument: 
        519: expr: 
         520: name: first
   521: expr_stmt: 
    522: expr: 
     523: call: 
      524: name: videobuf_vm_open
      525: argument_list: 
       526: argument: 
        527: expr: 
         528: name: vma
   529: return: 
    530: expr: 
     531: operator: (
     532: literal: 0
     533: operator: )
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: videbuf_vmalloc_memory
     8: modifier: *
    9: name: mem
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: 
      14: name: struct
      15: name: videobuf_mapping
     16: modifier: *
    17: name: map
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: name: unsigned
     22: name: int
    23: name: first
  24: decl_stmt: 
   25: decl: 
    26: type: 
     27: name: int
    28: name: retval
  29: decl_stmt: 
   30: decl: 
    31: type: 
     32: name: unsigned
     33: name: long
    34: name: offset
    35: init: 
     36: expr: 
      37: name: 
       38: name: vma
       39: operator: ->
       40: name: vm_pgoff
      41: operator: <<
      42: name: PAGE_SHIFT
  43: if_stmt: 
   44: if: 
    45: condition: 
     46: expr: 
      47: operator: !
      48: operator: (
      49: name: 
       50: name: vma
       51: operator: ->
       52: name: vm_flags
      53: operator: &
      54: name: VM_WRITE
      55: operator: )
      56: operator: ||
      57: operator: !
      58: operator: (
      59: name: 
       60: name: vma
       61: operator: ->
       62: name: vm_flags
      63: operator: &
      64: name: VM_SHARED
      65: operator: )
    66: block: 
     67: block_content: 
      68: return: 
       69: expr: 
        70: operator: -
        71: name: EINVAL
  72: comment: /* look for first buffer to map */
  73: for: 
   74: control: 
    75: init: 
     76: expr: 
      77: name: first
      78: operator: =
      79: literal: 0
    80: condition: 
     81: expr: 
      82: name: first
      83: operator: <
      84: name: VIDEO_MAX_FRAME
    85: incr: 
     86: expr: 
      87: name: first
      88: operator: ++
   89: block: 
    90: block_content: 
     91: if_stmt: 
      92: if: 
       93: condition: 
        94: expr: 
         95: name: NULL
         96: operator: ==
         97: name: 
          98: name: q
          99: operator: ->
          100: name: bufs
          101: index: 
           102: expr: 
            103: name: first
       104: block: 
        105: block_content: 
         106: continue: 
     107: if_stmt: 
      108: if: 
       109: condition: 
        110: expr: 
         111: name: V4L2_MEMORY_MMAP
         112: operator: !=
         113: name: 
          114: name: q
          115: operator: ->
          116: name: bufs
          117: index: 
           118: expr: 
            119: name: first
         120: operator: ->
         121: name: memory
       122: block: 
        123: block_content: 
         124: continue: 
     125: if_stmt: 
      126: if: 
       127: condition: 
        128: expr: 
         129: name: 
          130: name: q
          131: operator: ->
          132: name: bufs
          133: index: 
           134: expr: 
            135: name: first
         136: operator: ->
         137: name: boff
         138: operator: ==
         139: name: offset
       140: block: 
        141: block_content: 
         142: break: 
  143: if_stmt: 
   144: if: 
    145: condition: 
     146: expr: 
      147: name: VIDEO_MAX_FRAME
      148: operator: ==
      149: name: first
    150: block: 
     151: block_content: 
      152: expr_stmt: 
       153: expr: 
        154: call: 
         155: name: dprintk
         156: argument_list: 
          157: argument: 
           158: expr: 
            159: literal: 1
          160: argument: 
           161: expr: 
            162: literal: "mmap app bug: offset invalid [offset=0x%lx]\n"
          163: argument: 
           164: expr: 
            165: operator: (
            166: name: 
             167: name: vma
             168: operator: ->
             169: name: vm_pgoff
            170: operator: <<
            171: name: PAGE_SHIFT
            172: operator: )
      173: return: 
       174: expr: 
        175: operator: -
        176: name: EINVAL
  177: comment: /* create mapping + update buffer list */
  178: expr_stmt: 
   179: expr: 
    180: name: map
    181: operator: =
    182: name: 
     183: name: q
     184: operator: ->
     185: name: bufs
     186: index: 
      187: expr: 
       188: name: first
    189: operator: ->
    190: name: map
    191: operator: =
    192: call: 
     193: name: kmalloc
     194: argument_list: 
      195: argument: 
       196: expr: 
        197: sizeof: 
         198: argument_list: 
          199: argument: 
           200: expr: 
            201: name: videobuf_mapping
      202: argument: 
       203: expr: 
        204: name: GFP_KERNEL
  205: if_stmt: 
   206: if: 
    207: condition: 
     208: expr: 
      209: name: NULL
      210: operator: ==
      211: name: map
    212: block: 
     213: block_content: 
      214: return: 
       215: expr: 
        216: operator: -
        217: name: ENOMEM
  218: expr_stmt: 
   219: expr: 
    220: name: 
     221: name: map
     222: operator: ->
     223: name: start
    224: operator: =
    225: name: 
     226: name: vma
     227: operator: ->
     228: name: vm_start
  229: expr_stmt: 
   230: expr: 
    231: name: 
     232: name: map
     233: operator: ->
     234: name: end
    235: operator: =
    236: name: 
     237: name: vma
     238: operator: ->
     239: name: vm_end
  240: expr_stmt: 
   241: expr: 
    242: name: 
     243: name: map
     244: operator: ->
     245: name: q
    246: operator: =
    247: name: q
  248: expr_stmt: 
   249: expr: 
    250: name: 
     251: name: q
     252: operator: ->
     253: name: bufs
     254: index: 
      255: expr: 
       256: name: first
    257: operator: ->
    258: name: baddr
    259: operator: =
    260: name: 
     261: name: vma
     262: operator: ->
     263: name: vm_start
  264: expr_stmt: 
   265: expr: 
    266: name: 
     267: name: vma
     268: operator: ->
     269: name: vm_ops
    270: operator: =
    271: operator: &
    272: name: videobuf_vm_ops
  273: expr_stmt: 
   274: expr: 
    275: name: 
     276: name: vma
     277: operator: ->
     278: name: vm_flags
    279: operator: |=
    280: name: VM_DONTEXPAND
    281: operator: |
    282: name: VM_RESERVED
  283: expr_stmt: 
   284: expr: 
    285: name: 
     286: name: vma
     287: operator: ->
     288: name: vm_private_data
    289: operator: =
    290: name: map
  291: expr_stmt: 
   292: expr: 
    293: name: mem
    294: operator: =
    295: name: 
     296: name: q
     297: operator: ->
     298: name: bufs
     299: index: 
      300: expr: 
       301: name: first
    302: operator: ->
    303: name: priv
  304: expr_stmt: 
   305: expr: 
    306: call: 
     307: name: BUG_ON
     308: argument_list: 
      309: argument: 
       310: expr: 
        311: operator: !
        312: name: mem
  313: expr_stmt: 
   314: expr: 
    315: call: 
     316: name: MAGIC_CHECK
     317: argument_list: 
      318: argument: 
       319: expr: 
        320: name: 
         321: name: mem
         322: operator: ->
         323: name: magic
      324: argument: 
       325: expr: 
        326: name: MAGIC_VMAL_MEM
  327: comment: /* Try to remap memory */
  328: expr_stmt: 
   329: expr: 
    330: name: retval
    331: operator: =
    332: call: 
     333: name: remap_vmalloc_range
     334: argument_list: 
      335: argument: 
       336: expr: 
        337: name: vma
      338: argument: 
       339: expr: 
        340: name: 
         341: name: mem
         342: operator: ->
         343: name: vmalloc
      344: argument: 
       345: expr: 
        346: literal: 0
  347: if_stmt: 
   348: if: 
    349: condition: 
     350: expr: 
      351: name: retval
      352: operator: <
      353: literal: 0
    354: block: 
     355: block_content: 
      356: expr_stmt: 
       357: expr: 
        358: call: 
         359: name: dprintk
         360: argument_list: 
          361: argument: 
           362: expr: 
            363: literal: 1
          364: argument: 
           365: expr: 
            366: literal: "mmap: postponing remap_vmalloc_range\n"
      367: expr_stmt: 
       368: expr: 
        369: name: 
         370: name: mem
         371: operator: ->
         372: name: vma
        373: operator: =
        374: call: 
         375: name: kmalloc
         376: argument_list: 
          377: argument: 
           378: expr: 
            379: sizeof: 
             380: argument_list: 
              381: argument: 
               382: expr: 
                383: operator: *
                384: name: vma
          385: argument: 
           386: expr: 
            387: name: GFP_KERNEL
      388: if_stmt: 
       389: if: 
        390: condition: 
         391: expr: 
          392: operator: !
          393: name: 
           394: name: mem
           395: operator: ->
           396: name: vma
        397: block: 
         398: block_content: 
          399: expr_stmt: 
           400: expr: 
            401: call: 
             402: name: kfree
             403: argument_list: 
              404: argument: 
               405: expr: 
                406: name: map
          407: expr_stmt: 
           408: expr: 
            409: name: 
             410: name: q
             411: operator: ->
             412: name: bufs
             413: index: 
              414: expr: 
               415: name: first
            416: operator: ->
            417: name: map
            418: operator: =
            419: name: NULL
          420: return: 
           421: expr: 
            422: operator: -
            423: name: ENOMEM
      424: expr_stmt: 
       425: expr: 
        426: call: 
         427: name: memcpy
         428: argument_list: 
          429: argument: 
           430: expr: 
            431: name: 
             432: name: mem
             433: operator: ->
             434: name: vma
          435: argument: 
           436: expr: 
            437: name: vma
          438: argument: 
           439: expr: 
            440: sizeof: 
             441: argument_list: 
              442: argument: 
               443: expr: 
                444: operator: *
                445: name: vma
  446: expr_stmt: 
   447: expr: 
    448: call: 
     449: name: dprintk
     450: argument_list: 
      451: argument: 
       452: expr: 
        453: literal: 1
      454: argument: 
       455: expr: 
        456: literal: "mmap %p: q=%p %08lx-%08lx (%lx) pgoff %08lx buf %d\n"
      457: argument: 
       458: expr: 
        459: name: map
      460: argument: 
       461: expr: 
        462: name: q
      463: argument: 
       464: expr: 
        465: name: 
         466: name: vma
         467: operator: ->
         468: name: vm_start
      469: argument: 
       470: expr: 
        471: name: 
         472: name: vma
         473: operator: ->
         474: name: vm_end
      475: argument: 
       476: expr: 
        477: operator: (
        478: name: long
        479: name: int
        480: operator: )
        481: name: 
         482: name: q
         483: operator: ->
         484: name: bufs
         485: index: 
          486: expr: 
           487: name: first
        488: operator: ->
        489: name: bsize
      490: argument: 
       491: expr: 
        492: name: 
         493: name: vma
         494: operator: ->
         495: name: vm_pgoff
      496: argument: 
       497: expr: 
        498: name: first
  499: expr_stmt: 
   500: expr: 
    501: call: 
     502: name: videobuf_vm_open
     503: argument_list: 
      504: argument: 
       505: expr: 
        506: name: vma
  507: return: 
   508: expr: 
    509: operator: (
    510: literal: 0
    511: operator: )

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: videbuf_vmalloc_memory
     8: modifier: *
    9: name: mem
  10: decl_stmt: 
   11: decl: 
    12: type: 
     13: name: 
      14: name: struct
      15: name: videobuf_mapping
     16: modifier: *
    17: name: map
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: name: unsigned
     22: name: int
    23: name: first
  24: decl_stmt: 
   25: decl: 
    26: type: 
     27: name: int
    28: name: retval
  29: decl_stmt: 
   30: decl: 
    31: type: 
     32: name: unsigned
     33: name: long
    34: name: offset
    35: init: 
     36: expr: 
      37: name: 
       38: name: vma
       39: operator: ->
       40: name: vm_pgoff
      41: operator: <<
      42: name: PAGE_SHIFT
  43: if_stmt: 
   44: if: 
    45: condition: 
     46: expr: 
      47: operator: !
      48: operator: (
      49: name: 
       50: name: vma
       51: operator: ->
       52: name: vm_flags
      53: operator: &
      54: name: VM_WRITE
      55: operator: )
      56: operator: ||
      57: operator: !
      58: operator: (
      59: name: 
       60: name: vma
       61: operator: ->
       62: name: vm_flags
      63: operator: &
      64: name: VM_SHARED
      65: operator: )
    66: block: 
     67: block_content: 
      68: return: 
       69: expr: 
        70: operator: -
        71: name: EINVAL
  72: comment: /* look for first buffer to map */
  73: for: 
   74: control: 
    75: init: 
     76: expr: 
      77: name: first
      78: operator: =
      79: literal: 0
    80: condition: 
     81: expr: 
      82: name: first
      83: operator: <
      84: name: VIDEO_MAX_FRAME
    85: incr: 
     86: expr: 
      87: name: first
      88: operator: ++
   89: block: 
    90: block_content: 
     91: if_stmt: 
      92: if: 
       93: condition: 
        94: expr: 
         95: name: NULL
         96: operator: ==
         97: name: 
          98: name: q
          99: operator: ->
          100: name: bufs
          101: index: 
           102: expr: 
            103: name: first
       104: block: 
        105: block_content: 
         106: continue: 
     107: if_stmt: 
      108: if: 
       109: condition: 
        110: expr: 
         111: name: V4L2_MEMORY_MMAP
         112: operator: !=
         113: name: 
          114: name: q
          115: operator: ->
          116: name: bufs
          117: index: 
           118: expr: 
            119: name: first
         120: operator: ->
         121: name: memory
       122: block: 
        123: block_content: 
         124: continue: 
     125: if_stmt: 
      126: if: 
       127: condition: 
        128: expr: 
         129: name: 
          130: name: q
          131: operator: ->
          132: name: bufs
          133: index: 
           134: expr: 
            135: name: first
         136: operator: ->
         137: name: boff
         138: operator: ==
         139: name: offset
       140: block: 
        141: block_content: 
         142: break: 
  143: if_stmt: 
   144: if: 
    145: condition: 
     146: expr: 
      147: name: VIDEO_MAX_FRAME
      148: operator: ==
      149: name: first
    150: block: 
     151: block_content: 
      152: expr_stmt: 
       153: expr: 
        154: call: 
         155: name: dprintk
         156: argument_list: 
          157: argument: 
           158: expr: 
            159: literal: 1
          160: argument: 
           161: expr: 
            162: literal: "mmap app bug: offset invalid [offset=0x%lx]\n"
          163: argument: 
           164: expr: 
            165: operator: (
            166: name: 
             167: name: vma
             168: operator: ->
             169: name: vm_pgoff
            170: operator: <<
            171: name: PAGE_SHIFT
            172: operator: )
      173: return: 
       174: expr: 
        175: operator: -
        176: name: EINVAL
  177: comment: /* create mapping + update buffer list */
  178: expr_stmt: 
   179: expr: 
    180: name: map
    181: operator: =
    182: name: 
     183: name: q
     184: operator: ->
     185: name: bufs
     186: index: 
      187: expr: 
       188: name: first
    189: operator: ->
    190: name: map
    191: operator: =
    192: call: 
     193: name: kzalloc
     194: argument_list: 
      195: argument: 
       196: expr: 
        197: sizeof: 
         198: argument_list: 
          199: argument: 
           200: expr: 
            201: name: videobuf_mapping
      202: argument: 
       203: expr: 
        204: name: GFP_KERNEL
  205: if_stmt: 
   206: if: 
    207: condition: 
     208: expr: 
      209: name: NULL
      210: operator: ==
      211: name: map
    212: block: 
     213: block_content: 
      214: return: 
       215: expr: 
        216: operator: -
        217: name: ENOMEM
  218: expr_stmt: 
   219: expr: 
    220: name: 
     221: name: map
     222: operator: ->
     223: name: start
    224: operator: =
    225: name: 
     226: name: vma
     227: operator: ->
     228: name: vm_start
  229: expr_stmt: 
   230: expr: 
    231: name: 
     232: name: map
     233: operator: ->
     234: name: end
    235: operator: =
    236: name: 
     237: name: vma
     238: operator: ->
     239: name: vm_end
  240: expr_stmt: 
   241: expr: 
    242: name: 
     243: name: map
     244: operator: ->
     245: name: q
    246: operator: =
    247: name: q
  248: expr_stmt: 
   249: expr: 
    250: name: 
     251: name: q
     252: operator: ->
     253: name: bufs
     254: index: 
      255: expr: 
       256: name: first
    257: operator: ->
    258: name: baddr
    259: operator: =
    260: name: 
     261: name: vma
     262: operator: ->
     263: name: vm_start
  264: expr_stmt: 
   265: expr: 
    266: name: 
     267: name: vma
     268: operator: ->
     269: name: vm_ops
    270: operator: =
    271: operator: &
    272: name: videobuf_vm_ops
  273: expr_stmt: 
   274: expr: 
    275: name: 
     276: name: vma
     277: operator: ->
     278: name: vm_flags
    279: operator: |=
    280: name: VM_DONTEXPAND
    281: operator: |
    282: name: VM_RESERVED
  283: expr_stmt: 
   284: expr: 
    285: name: 
     286: name: vma
     287: operator: ->
     288: name: vm_private_data
    289: operator: =
    290: name: map
  291: expr_stmt: 
   292: expr: 
    293: name: mem
    294: operator: =
    295: name: 
     296: name: q
     297: operator: ->
     298: name: bufs
     299: index: 
      300: expr: 
       301: name: first
    302: operator: ->
    303: name: priv
  304: expr_stmt: 
   305: expr: 
    306: call: 
     307: name: BUG_ON
     308: argument_list: 
      309: argument: 
       310: expr: 
        311: operator: !
        312: name: mem
  313: expr_stmt: 
   314: expr: 
    315: call: 
     316: name: MAGIC_CHECK
     317: argument_list: 
      318: argument: 
       319: expr: 
        320: name: 
         321: name: mem
         322: operator: ->
         323: name: magic
      324: argument: 
       325: expr: 
        326: name: MAGIC_VMAL_MEM
  327: comment: /* Try to remap memory */
  328: expr_stmt: 
   329: expr: 
    330: name: retval
    331: operator: =
    332: call: 
     333: name: remap_vmalloc_range
     334: argument_list: 
      335: argument: 
       336: expr: 
        337: name: vma
      338: argument: 
       339: expr: 
        340: name: 
         341: name: mem
         342: operator: ->
         343: name: vmalloc
      344: argument: 
       345: expr: 
        346: literal: 0
  347: if_stmt: 
   348: if: 
    349: condition: 
     350: expr: 
      351: name: retval
      352: operator: <
      353: literal: 0
    354: block: 
     355: block_content: 
      356: expr_stmt: 
       357: expr: 
        358: call: 
         359: name: dprintk
         360: argument_list: 
          361: argument: 
           362: expr: 
            363: literal: 1
          364: argument: 
           365: expr: 
            366: literal: "mmap: postponing remap_vmalloc_range\n"
      367: expr_stmt: 
       368: expr: 
        369: name: 
         370: name: mem
         371: operator: ->
         372: name: vma
        373: operator: =
        374: call: 
         375: name: kmalloc
         376: argument_list: 
          377: argument: 
           378: expr: 
            379: sizeof: 
             380: argument_list: 
              381: argument: 
               382: expr: 
                383: operator: *
                384: name: vma
          385: argument: 
           386: expr: 
            387: name: GFP_KERNEL
      388: if_stmt: 
       389: if: 
        390: condition: 
         391: expr: 
          392: operator: !
          393: name: 
           394: name: mem
           395: operator: ->
           396: name: vma
        397: block: 
         398: block_content: 
          399: expr_stmt: 
           400: expr: 
            401: call: 
             402: name: kfree
             403: argument_list: 
              404: argument: 
               405: expr: 
                406: name: map
          407: expr_stmt: 
           408: expr: 
            409: name: 
             410: name: q
             411: operator: ->
             412: name: bufs
             413: index: 
              414: expr: 
               415: name: first
            416: operator: ->
            417: name: map
            418: operator: =
            419: name: NULL
          420: return: 
           421: expr: 
            422: operator: -
            423: name: ENOMEM
      424: expr_stmt: 
       425: expr: 
        426: call: 
         427: name: memcpy
         428: argument_list: 
          429: argument: 
           430: expr: 
            431: name: 
             432: name: mem
             433: operator: ->
             434: name: vma
          435: argument: 
           436: expr: 
            437: name: vma
          438: argument: 
           439: expr: 
            440: sizeof: 
             441: argument_list: 
              442: argument: 
               443: expr: 
                444: operator: *
                445: name: vma
  446: expr_stmt: 
   447: expr: 
    448: call: 
     449: name: dprintk
     450: argument_list: 
      451: argument: 
       452: expr: 
        453: literal: 1
      454: argument: 
       455: expr: 
        456: literal: "mmap %p: q=%p %08lx-%08lx (%lx) pgoff %08lx buf %d\n"
      457: argument: 
       458: expr: 
        459: name: map
      460: argument: 
       461: expr: 
        462: name: q
      463: argument: 
       464: expr: 
        465: name: 
         466: name: vma
         467: operator: ->
         468: name: vm_start
      469: argument: 
       470: expr: 
        471: name: 
         472: name: vma
         473: operator: ->
         474: name: vm_end
      475: argument: 
       476: expr: 
        477: operator: (
        478: name: long
        479: name: int
        480: operator: )
        481: name: 
         482: name: q
         483: operator: ->
         484: name: bufs
         485: index: 
          486: expr: 
           487: name: first
        488: operator: ->
        489: name: bsize
      490: argument: 
       491: expr: 
        492: name: 
         493: name: vma
         494: operator: ->
         495: name: vm_pgoff
      496: argument: 
       497: expr: 
        498: name: first
  499: expr_stmt: 
   500: expr: 
    501: call: 
     502: name: videobuf_vm_open
     503: argument_list: 
      504: argument: 
       505: expr: 
        506: name: vma
  507: return: 
   508: expr: 
    509: operator: (
    510: literal: 0
    511: operator: )
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: videbuf_vmalloc_memory
    7: modifier: *
   8: name: mem
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: 
     13: name: struct
     14: name: videobuf_mapping
    15: modifier: *
   16: name: map
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: name: unsigned
    21: name: int
   22: name: first
 23: decl_stmt: 
  24: decl: 
   25: type: 
    26: name: int
   27: name: retval
 28: decl_stmt: 
  29: decl: 
   30: type: 
    31: name: unsigned
    32: name: long
   33: name: offset
   34: init: 
    35: expr: 
     36: name: 
      37: name: vma
      38: operator: ->
      39: name: vm_pgoff
     40: operator: <<
     41: name: PAGE_SHIFT
 42: if_stmt: 
  43: if: 
   44: condition: 
    45: expr: 
     46: operator: !
     47: operator: (
     48: name: 
      49: name: vma
      50: operator: ->
      51: name: vm_flags
     52: operator: &
     53: name: VM_WRITE
     54: operator: )
     55: operator: ||
     56: operator: !
     57: operator: (
     58: name: 
      59: name: vma
      60: operator: ->
      61: name: vm_flags
     62: operator: &
     63: name: VM_SHARED
     64: operator: )
   65: block: 
    66: block_content: 
     67: return: 
      68: expr: 
       69: operator: -
       70: name: EINVAL
 71: comment: /* look for first buffer to map */
 72: for: 
  73: control: 
   74: init: 
    75: expr: 
     76: name: first
     77: operator: =
     78: literal: 0
   79: condition: 
    80: expr: 
     81: name: first
     82: operator: <
     83: name: VIDEO_MAX_FRAME
   84: incr: 
    85: expr: 
     86: name: first
     87: operator: ++
  88: block: 
   89: block_content: 
    90: if_stmt: 
     91: if: 
      92: condition: 
       93: expr: 
        94: name: NULL
        95: operator: ==
        96: name: 
         97: name: q
         98: operator: ->
         99: name: bufs
         100: index: 
          101: expr: 
           102: name: first
      103: block: 
       104: block_content: 
        105: continue: 
    106: if_stmt: 
     107: if: 
      108: condition: 
       109: expr: 
        110: name: V4L2_MEMORY_MMAP
        111: operator: !=
        112: name: 
         113: name: q
         114: operator: ->
         115: name: bufs
         116: index: 
          117: expr: 
           118: name: first
        119: operator: ->
        120: name: memory
      121: block: 
       122: block_content: 
        123: continue: 
    124: if_stmt: 
     125: if: 
      126: condition: 
       127: expr: 
        128: name: 
         129: name: q
         130: operator: ->
         131: name: bufs
         132: index: 
          133: expr: 
           134: name: first
        135: operator: ->
        136: name: boff
        137: operator: ==
        138: name: offset
      139: block: 
       140: block_content: 
        141: break: 
 142: if_stmt: 
  143: if: 
   144: condition: 
    145: expr: 
     146: name: VIDEO_MAX_FRAME
     147: operator: ==
     148: name: first
   149: block: 
    150: block_content: 
     151: expr_stmt: 
      152: expr: 
       153: call: 
        154: name: dprintk
        155: argument_list: 
         156: argument: 
          157: expr: 
           158: literal: 1
         159: argument: 
          160: expr: 
           161: literal: "mmap app bug: offset invalid [offset=0x%lx]\n"
         162: argument: 
          163: expr: 
           164: operator: (
           165: name: 
            166: name: vma
            167: operator: ->
            168: name: vm_pgoff
           169: operator: <<
           170: name: PAGE_SHIFT
           171: operator: )
     172: return: 
      173: expr: 
       174: operator: -
       175: name: EINVAL
 176: comment: /* create mapping + update buffer list */
 177: expr_stmt: 
  178: expr: 
   179: name: map
   180: operator: =
   181: name: 
    182: name: q
    183: operator: ->
    184: name: bufs
    185: index: 
     186: expr: 
      187: name: first
   188: operator: ->
   189: name: map
   190: operator: =
   191: call: 
    192: name: kmalloc
    193: argument_list: 
     194: argument: 
      195: expr: 
       196: sizeof: 
        197: argument_list: 
         198: argument: 
          199: expr: 
           200: name: videobuf_mapping
     201: argument: 
      202: expr: 
       203: name: GFP_KERNEL
 204: if_stmt: 
  205: if: 
   206: condition: 
    207: expr: 
     208: name: NULL
     209: operator: ==
     210: name: map
   211: block: 
    212: block_content: 
     213: return: 
      214: expr: 
       215: operator: -
       216: name: ENOMEM
 217: expr_stmt: 
  218: expr: 
   219: name: 
    220: name: map
    221: operator: ->
    222: name: start
   223: operator: =
   224: name: 
    225: name: vma
    226: operator: ->
    227: name: vm_start
 228: expr_stmt: 
  229: expr: 
   230: name: 
    231: name: map
    232: operator: ->
    233: name: end
   234: operator: =
   235: name: 
    236: name: vma
    237: operator: ->
    238: name: vm_end
 239: expr_stmt: 
  240: expr: 
   241: name: 
    242: name: map
    243: operator: ->
    244: name: q
   245: operator: =
   246: name: q
 247: expr_stmt: 
  248: expr: 
   249: name: 
    250: name: q
    251: operator: ->
    252: name: bufs
    253: index: 
     254: expr: 
      255: name: first
   256: operator: ->
   257: name: baddr
   258: operator: =
   259: name: 
    260: name: vma
    261: operator: ->
    262: name: vm_start
 263: expr_stmt: 
  264: expr: 
   265: name: 
    266: name: vma
    267: operator: ->
    268: name: vm_ops
   269: operator: =
   270: operator: &
   271: name: videobuf_vm_ops
 272: expr_stmt: 
  273: expr: 
   274: name: 
    275: name: vma
    276: operator: ->
    277: name: vm_flags
   278: operator: |=
   279: name: VM_DONTEXPAND
   280: operator: |
   281: name: VM_RESERVED
 282: expr_stmt: 
  283: expr: 
   284: name: 
    285: name: vma
    286: operator: ->
    287: name: vm_private_data
   288: operator: =
   289: name: map
 290: expr_stmt: 
  291: expr: 
   292: name: mem
   293: operator: =
   294: name: 
    295: name: q
    296: operator: ->
    297: name: bufs
    298: index: 
     299: expr: 
      300: name: first
   301: operator: ->
   302: name: priv
 303: expr_stmt: 
  304: expr: 
   305: call: 
    306: name: BUG_ON
    307: argument_list: 
     308: argument: 
      309: expr: 
       310: operator: !
       311: name: mem
 312: expr_stmt: 
  313: expr: 
   314: call: 
    315: name: MAGIC_CHECK
    316: argument_list: 
     317: argument: 
      318: expr: 
       319: name: 
        320: name: mem
        321: operator: ->
        322: name: magic
     323: argument: 
      324: expr: 
       325: name: MAGIC_VMAL_MEM
 326: comment: /* Try to remap memory */
 327: expr_stmt: 
  328: expr: 
   329: name: retval
   330: operator: =
   331: call: 
    332: name: remap_vmalloc_range
    333: argument_list: 
     334: argument: 
      335: expr: 
       336: name: vma
     337: argument: 
      338: expr: 
       339: name: 
        340: name: mem
        341: operator: ->
        342: name: vmalloc
     343: argument: 
      344: expr: 
       345: literal: 0
 346: if_stmt: 
  347: if: 
   348: condition: 
    349: expr: 
     350: name: retval
     351: operator: <
     352: literal: 0
   353: block: 
    354: block_content: 
     355: expr_stmt: 
      356: expr: 
       357: call: 
        358: name: dprintk
        359: argument_list: 
         360: argument: 
          361: expr: 
           362: literal: 1
         363: argument: 
          364: expr: 
           365: literal: "mmap: postponing remap_vmalloc_range\n"
     366: expr_stmt: 
      367: expr: 
       368: name: 
        369: name: mem
        370: operator: ->
        371: name: vma
       372: operator: =
       373: call: 
        374: name: kmalloc
        375: argument_list: 
         376: argument: 
          377: expr: 
           378: sizeof: 
            379: argument_list: 
             380: argument: 
              381: expr: 
               382: operator: *
               383: name: vma
         384: argument: 
          385: expr: 
           386: name: GFP_KERNEL
     387: if_stmt: 
      388: if: 
       389: condition: 
        390: expr: 
         391: operator: !
         392: name: 
          393: name: mem
          394: operator: ->
          395: name: vma
       396: block: 
        397: block_content: 
         398: expr_stmt: 
          399: expr: 
           400: call: 
            401: name: kfree
            402: argument_list: 
             403: argument: 
              404: expr: 
               405: name: map
         406: expr_stmt: 
          407: expr: 
           408: name: 
            409: name: q
            410: operator: ->
            411: name: bufs
            412: index: 
             413: expr: 
              414: name: first
           415: operator: ->
           416: name: map
           417: operator: =
           418: name: NULL
         419: return: 
          420: expr: 
           421: operator: -
           422: name: ENOMEM
     423: expr_stmt: 
      424: expr: 
       425: call: 
        426: name: memcpy
        427: argument_list: 
         428: argument: 
          429: expr: 
           430: name: 
            431: name: mem
            432: operator: ->
            433: name: vma
         434: argument: 
          435: expr: 
           436: name: vma
         437: argument: 
          438: expr: 
           439: sizeof: 
            440: argument_list: 
             441: argument: 
              442: expr: 
               443: operator: *
               444: name: vma
 445: expr_stmt: 
  446: expr: 
   447: call: 
    448: name: dprintk
    449: argument_list: 
     450: argument: 
      451: expr: 
       452: literal: 1
     453: argument: 
      454: expr: 
       455: literal: "mmap %p: q=%p %08lx-%08lx (%lx) pgoff %08lx buf %d\n"
     456: argument: 
      457: expr: 
       458: name: map
     459: argument: 
      460: expr: 
       461: name: q
     462: argument: 
      463: expr: 
       464: name: 
        465: name: vma
        466: operator: ->
        467: name: vm_start
     468: argument: 
      469: expr: 
       470: name: 
        471: name: vma
        472: operator: ->
        473: name: vm_end
     474: argument: 
      475: expr: 
       476: operator: (
       477: name: long
       478: name: int
       479: operator: )
       480: name: 
        481: name: q
        482: operator: ->
        483: name: bufs
        484: index: 
         485: expr: 
          486: name: first
       487: operator: ->
       488: name: bsize
     489: argument: 
      490: expr: 
       491: name: 
        492: name: vma
        493: operator: ->
        494: name: vm_pgoff
     495: argument: 
      496: expr: 
       497: name: first
 498: expr_stmt: 
  499: expr: 
   500: call: 
    501: name: videobuf_vm_open
    502: argument_list: 
     503: argument: 
      504: expr: 
       505: name: vma
 506: return: 
  507: expr: 
   508: operator: (
   509: literal: 0
   510: operator: )

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: videbuf_vmalloc_memory
    7: modifier: *
   8: name: mem
 9: decl_stmt: 
  10: decl: 
   11: type: 
    12: name: 
     13: name: struct
     14: name: videobuf_mapping
    15: modifier: *
   16: name: map
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: name: unsigned
    21: name: int
   22: name: first
 23: decl_stmt: 
  24: decl: 
   25: type: 
    26: name: int
   27: name: retval
 28: decl_stmt: 
  29: decl: 
   30: type: 
    31: name: unsigned
    32: name: long
   33: name: offset
   34: init: 
    35: expr: 
     36: name: 
      37: name: vma
      38: operator: ->
      39: name: vm_pgoff
     40: operator: <<
     41: name: PAGE_SHIFT
 42: if_stmt: 
  43: if: 
   44: condition: 
    45: expr: 
     46: operator: !
     47: operator: (
     48: name: 
      49: name: vma
      50: operator: ->
      51: name: vm_flags
     52: operator: &
     53: name: VM_WRITE
     54: operator: )
     55: operator: ||
     56: operator: !
     57: operator: (
     58: name: 
      59: name: vma
      60: operator: ->
      61: name: vm_flags
     62: operator: &
     63: name: VM_SHARED
     64: operator: )
   65: block: 
    66: block_content: 
     67: return: 
      68: expr: 
       69: operator: -
       70: name: EINVAL
 71: comment: /* look for first buffer to map */
 72: for: 
  73: control: 
   74: init: 
    75: expr: 
     76: name: first
     77: operator: =
     78: literal: 0
   79: condition: 
    80: expr: 
     81: name: first
     82: operator: <
     83: name: VIDEO_MAX_FRAME
   84: incr: 
    85: expr: 
     86: name: first
     87: operator: ++
  88: block: 
   89: block_content: 
    90: if_stmt: 
     91: if: 
      92: condition: 
       93: expr: 
        94: name: NULL
        95: operator: ==
        96: name: 
         97: name: q
         98: operator: ->
         99: name: bufs
         100: index: 
          101: expr: 
           102: name: first
      103: block: 
       104: block_content: 
        105: continue: 
    106: if_stmt: 
     107: if: 
      108: condition: 
       109: expr: 
        110: name: V4L2_MEMORY_MMAP
        111: operator: !=
        112: name: 
         113: name: q
         114: operator: ->
         115: name: bufs
         116: index: 
          117: expr: 
           118: name: first
        119: operator: ->
        120: name: memory
      121: block: 
       122: block_content: 
        123: continue: 
    124: if_stmt: 
     125: if: 
      126: condition: 
       127: expr: 
        128: name: 
         129: name: q
         130: operator: ->
         131: name: bufs
         132: index: 
          133: expr: 
           134: name: first
        135: operator: ->
        136: name: boff
        137: operator: ==
        138: name: offset
      139: block: 
       140: block_content: 
        141: break: 
 142: if_stmt: 
  143: if: 
   144: condition: 
    145: expr: 
     146: name: VIDEO_MAX_FRAME
     147: operator: ==
     148: name: first
   149: block: 
    150: block_content: 
     151: expr_stmt: 
      152: expr: 
       153: call: 
        154: name: dprintk
        155: argument_list: 
         156: argument: 
          157: expr: 
           158: literal: 1
         159: argument: 
          160: expr: 
           161: literal: "mmap app bug: offset invalid [offset=0x%lx]\n"
         162: argument: 
          163: expr: 
           164: operator: (
           165: name: 
            166: name: vma
            167: operator: ->
            168: name: vm_pgoff
           169: operator: <<
           170: name: PAGE_SHIFT
           171: operator: )
     172: return: 
      173: expr: 
       174: operator: -
       175: name: EINVAL
 176: comment: /* create mapping + update buffer list */
 177: expr_stmt: 
  178: expr: 
   179: name: map
   180: operator: =
   181: name: 
    182: name: q
    183: operator: ->
    184: name: bufs
    185: index: 
     186: expr: 
      187: name: first
   188: operator: ->
   189: name: map
   190: operator: =
   191: call: 
    192: name: kzalloc
    193: argument_list: 
     194: argument: 
      195: expr: 
       196: sizeof: 
        197: argument_list: 
         198: argument: 
          199: expr: 
           200: name: videobuf_mapping
     201: argument: 
      202: expr: 
       203: name: GFP_KERNEL
 204: if_stmt: 
  205: if: 
   206: condition: 
    207: expr: 
     208: name: NULL
     209: operator: ==
     210: name: map
   211: block: 
    212: block_content: 
     213: return: 
      214: expr: 
       215: operator: -
       216: name: ENOMEM
 217: expr_stmt: 
  218: expr: 
   219: name: 
    220: name: map
    221: operator: ->
    222: name: start
   223: operator: =
   224: name: 
    225: name: vma
    226: operator: ->
    227: name: vm_start
 228: expr_stmt: 
  229: expr: 
   230: name: 
    231: name: map
    232: operator: ->
    233: name: end
   234: operator: =
   235: name: 
    236: name: vma
    237: operator: ->
    238: name: vm_end
 239: expr_stmt: 
  240: expr: 
   241: name: 
    242: name: map
    243: operator: ->
    244: name: q
   245: operator: =
   246: name: q
 247: expr_stmt: 
  248: expr: 
   249: name: 
    250: name: q
    251: operator: ->
    252: name: bufs
    253: index: 
     254: expr: 
      255: name: first
   256: operator: ->
   257: name: baddr
   258: operator: =
   259: name: 
    260: name: vma
    261: operator: ->
    262: name: vm_start
 263: expr_stmt: 
  264: expr: 
   265: name: 
    266: name: vma
    267: operator: ->
    268: name: vm_ops
   269: operator: =
   270: operator: &
   271: name: videobuf_vm_ops
 272: expr_stmt: 
  273: expr: 
   274: name: 
    275: name: vma
    276: operator: ->
    277: name: vm_flags
   278: operator: |=
   279: name: VM_DONTEXPAND
   280: operator: |
   281: name: VM_RESERVED
 282: expr_stmt: 
  283: expr: 
   284: name: 
    285: name: vma
    286: operator: ->
    287: name: vm_private_data
   288: operator: =
   289: name: map
 290: expr_stmt: 
  291: expr: 
   292: name: mem
   293: operator: =
   294: name: 
    295: name: q
    296: operator: ->
    297: name: bufs
    298: index: 
     299: expr: 
      300: name: first
   301: operator: ->
   302: name: priv
 303: expr_stmt: 
  304: expr: 
   305: call: 
    306: name: BUG_ON
    307: argument_list: 
     308: argument: 
      309: expr: 
       310: operator: !
       311: name: mem
 312: expr_stmt: 
  313: expr: 
   314: call: 
    315: name: MAGIC_CHECK
    316: argument_list: 
     317: argument: 
      318: expr: 
       319: name: 
        320: name: mem
        321: operator: ->
        322: name: magic
     323: argument: 
      324: expr: 
       325: name: MAGIC_VMAL_MEM
 326: comment: /* Try to remap memory */
 327: expr_stmt: 
  328: expr: 
   329: name: retval
   330: operator: =
   331: call: 
    332: name: remap_vmalloc_range
    333: argument_list: 
     334: argument: 
      335: expr: 
       336: name: vma
     337: argument: 
      338: expr: 
       339: name: 
        340: name: mem
        341: operator: ->
        342: name: vmalloc
     343: argument: 
      344: expr: 
       345: literal: 0
 346: if_stmt: 
  347: if: 
   348: condition: 
    349: expr: 
     350: name: retval
     351: operator: <
     352: literal: 0
   353: block: 
    354: block_content: 
     355: expr_stmt: 
      356: expr: 
       357: call: 
        358: name: dprintk
        359: argument_list: 
         360: argument: 
          361: expr: 
           362: literal: 1
         363: argument: 
          364: expr: 
           365: literal: "mmap: postponing remap_vmalloc_range\n"
     366: expr_stmt: 
      367: expr: 
       368: name: 
        369: name: mem
        370: operator: ->
        371: name: vma
       372: operator: =
       373: call: 
        374: name: kmalloc
        375: argument_list: 
         376: argument: 
          377: expr: 
           378: sizeof: 
            379: argument_list: 
             380: argument: 
              381: expr: 
               382: operator: *
               383: name: vma
         384: argument: 
          385: expr: 
           386: name: GFP_KERNEL
     387: if_stmt: 
      388: if: 
       389: condition: 
        390: expr: 
         391: operator: !
         392: name: 
          393: name: mem
          394: operator: ->
          395: name: vma
       396: block: 
        397: block_content: 
         398: expr_stmt: 
          399: expr: 
           400: call: 
            401: name: kfree
            402: argument_list: 
             403: argument: 
              404: expr: 
               405: name: map
         406: expr_stmt: 
          407: expr: 
           408: name: 
            409: name: q
            410: operator: ->
            411: name: bufs
            412: index: 
             413: expr: 
              414: name: first
           415: operator: ->
           416: name: map
           417: operator: =
           418: name: NULL
         419: return: 
          420: expr: 
           421: operator: -
           422: name: ENOMEM
     423: expr_stmt: 
      424: expr: 
       425: call: 
        426: name: memcpy
        427: argument_list: 
         428: argument: 
          429: expr: 
           430: name: 
            431: name: mem
            432: operator: ->
            433: name: vma
         434: argument: 
          435: expr: 
           436: name: vma
         437: argument: 
          438: expr: 
           439: sizeof: 
            440: argument_list: 
             441: argument: 
              442: expr: 
               443: operator: *
               444: name: vma
 445: expr_stmt: 
  446: expr: 
   447: call: 
    448: name: dprintk
    449: argument_list: 
     450: argument: 
      451: expr: 
       452: literal: 1
     453: argument: 
      454: expr: 
       455: literal: "mmap %p: q=%p %08lx-%08lx (%lx) pgoff %08lx buf %d\n"
     456: argument: 
      457: expr: 
       458: name: map
     459: argument: 
      460: expr: 
       461: name: q
     462: argument: 
      463: expr: 
       464: name: 
        465: name: vma
        466: operator: ->
        467: name: vm_start
     468: argument: 
      469: expr: 
       470: name: 
        471: name: vma
        472: operator: ->
        473: name: vm_end
     474: argument: 
      475: expr: 
       476: operator: (
       477: name: long
       478: name: int
       479: operator: )
       480: name: 
        481: name: q
        482: operator: ->
        483: name: bufs
        484: index: 
         485: expr: 
          486: name: first
       487: operator: ->
       488: name: bsize
     489: argument: 
      490: expr: 
       491: name: 
        492: name: vma
        493: operator: ->
        494: name: vm_pgoff
     495: argument: 
      496: expr: 
       497: name: first
 498: expr_stmt: 
  499: expr: 
   500: call: 
    501: name: videobuf_vm_open
    502: argument_list: 
     503: argument: 
      504: expr: 
       505: name: vma
 506: return: 
  507: expr: 
   508: operator: (
   509: literal: 0
   510: operator: )
=====
0: expr_stmt: 
 1: expr: 
  2: name: map
  3: operator: =
  4: name: 
   5: name: q
   6: operator: ->
   7: name: bufs
   8: index: 
    9: expr: 
     10: name: first
  11: operator: ->
  12: name: map
  13: operator: =
  14: call: 
   15: name: kmalloc
   16: argument_list: 
    17: argument: 
     18: expr: 
      19: sizeof: 
       20: argument_list: 
        21: argument: 
         22: expr: 
          23: name: videobuf_mapping
    24: argument: 
     25: expr: 
      26: name: GFP_KERNEL

----------------------------------------
0: expr_stmt: 
 1: expr: 
  2: name: map
  3: operator: =
  4: name: 
   5: name: q
   6: operator: ->
   7: name: bufs
   8: index: 
    9: expr: 
     10: name: first
  11: operator: ->
  12: name: map
  13: operator: =
  14: call: 
   15: name: kzalloc
   16: argument_list: 
    17: argument: 
     18: expr: 
      19: sizeof: 
       20: argument_list: 
        21: argument: 
         22: expr: 
          23: name: videobuf_mapping
    24: argument: 
     25: expr: 
      26: name: GFP_KERNEL
=====
0: expr: 
 1: name: map
 2: operator: =
 3: name: 
  4: name: q
  5: operator: ->
  6: name: bufs
  7: index: 
   8: expr: 
    9: name: first
 10: operator: ->
 11: name: map
 12: operator: =
 13: call: 
  14: name: kmalloc
  15: argument_list: 
   16: argument: 
    17: expr: 
     18: sizeof: 
      19: argument_list: 
       20: argument: 
        21: expr: 
         22: name: videobuf_mapping
   23: argument: 
    24: expr: 
     25: name: GFP_KERNEL

----------------------------------------
0: expr: 
 1: name: map
 2: operator: =
 3: name: 
  4: name: q
  5: operator: ->
  6: name: bufs
  7: index: 
   8: expr: 
    9: name: first
 10: operator: ->
 11: name: map
 12: operator: =
 13: call: 
  14: name: kzalloc
  15: argument_list: 
   16: argument: 
    17: expr: 
     18: sizeof: 
      19: argument_list: 
       20: argument: 
        21: expr: 
         22: name: videobuf_mapping
   23: argument: 
    24: expr: 
     25: name: GFP_KERNEL
=====
0: call: 
 1: name: kmalloc
 2: argument_list: 
  3: argument: 
   4: expr: 
    5: sizeof: 
     6: argument_list: 
      7: argument: 
       8: expr: 
        9: name: videobuf_mapping
  10: argument: 
   11: expr: 
    12: name: GFP_KERNEL

----------------------------------------
0: call: 
 1: name: kzalloc
 2: argument_list: 
  3: argument: 
   4: expr: 
    5: sizeof: 
     6: argument_list: 
      7: argument: 
       8: expr: 
        9: name: videobuf_mapping
  10: argument: 
   11: expr: 
    12: name: GFP_KERNEL
=====
0: name: kmalloc

----------------------------------------
0: name: kzalloc
=====
