0: expr: 
 1: ?: !@#$holes0
 2: name: bufsize
 3: operator: =
 4: name: 
  5: name: file
  6: operator: ->
  7: name: size
 8: ?: !@#$holes1

----------------------------------------
0: expr: 
 1: ?: !@#$holes0
 2: name: 
  3: name: file
  4: operator: ->
  5: name: size
 6: ?: !@#$holes1
=====
0: comment: /* the last command failed, but previous ones

----------------------------------------
0: 		: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: int
  5: name: read_private_key
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: RSA
      11: modifier: *
     12: name: rsa
  13: block: 
   14: block_content: 
    15: decl_stmt: 
     16: decl: 
      17: type: 
       18: name: int
      19: name: r
    20: decl_stmt: 
     21: decl: 
      22: type: 
       23: name: sc_path_t
      24: name: path
    25: decl_stmt: 
     26: decl: 
      27: type: 
       28: name: sc_file_t
       29: modifier: *
      30: name: file
    31: decl_stmt: 
     32: decl: 
      33: type: 
       34: specifier: const
       35: name: sc_acl_entry_t
       36: modifier: *
      37: name: e
    38: decl_stmt: 
     39: decl: 
      40: type: 
       41: name: u8
      42: name: 
       43: name: buf
       44: index: 
        45: expr: 
         46: literal: 2048
     47: decl: 
      48: type: 
       49: modifier: *
      50: name: p
      51: init: 
       52: expr: 
        53: name: buf
    54: decl_stmt: 
     55: decl: 
      56: type: 
       57: name: size_t
      58: name: bufsize
     59: decl: 
      60: type: 
      61: name: keysize
    62: expr_stmt: 
     63: expr: 
      64: name: r
      65: operator: =
      66: call: 
       67: name: select_app_df
       68: argument_list: 
    69: if_stmt: 
     70: if: 
      71: condition: 
       72: expr: 
        73: name: r
      74: block: 
       75: block_content: 
        76: return: 
         77: expr: 
          78: literal: 1
    79: expr_stmt: 
     80: expr: 
      81: call: 
       82: name: sc_format_path
       83: argument_list: 
        84: argument: 
         85: expr: 
          86: literal: "I0012"
        87: argument: 
         88: expr: 
          89: operator: &
          90: name: path
    91: expr_stmt: 
     92: expr: 
      93: name: r
      94: operator: =
      95: call: 
       96: name: sc_select_file
       97: argument_list: 
        98: argument: 
         99: expr: 
          100: name: card
        101: argument: 
         102: expr: 
          103: operator: &
          104: name: path
        105: argument: 
         106: expr: 
          107: operator: &
          108: name: file
    109: if_stmt: 
     110: if: 
      111: condition: 
       112: expr: 
        113: name: r
      114: block: 
       115: block_content: 
        116: expr_stmt: 
         117: expr: 
          118: call: 
           119: name: fprintf
           120: argument_list: 
            121: argument: 
             122: expr: 
              123: name: stderr
            124: argument: 
             125: expr: 
              126: literal: "Unable to select private key file: %s\n"
            127: argument: 
             128: expr: 
              129: call: 
               130: name: sc_strerror
               131: argument_list: 
                132: argument: 
                 133: expr: 
                  134: name: r
        135: return: 
         136: expr: 
          137: literal: 2
    138: expr_stmt: 
     139: expr: 
      140: name: e
      141: operator: =
      142: call: 
       143: name: sc_file_get_acl_entry
       144: argument_list: 
        145: argument: 
         146: expr: 
          147: name: file
        148: argument: 
         149: expr: 
          150: name: SC_AC_OP_READ
    151: if_stmt: 
     152: if: 
      153: condition: 
       154: expr: 
        155: name: e
        156: operator: ==
        157: name: NULL
        158: operator: ||
        159: name: 
         160: name: e
         161: operator: ->
         162: name: method
        163: operator: ==
        164: name: SC_AC_NEVER
      165: block: 
       166: block_content: 
        167: return: 
         168: expr: 
          169: literal: 10
    170: expr_stmt: 
     171: expr: 
      172: name: bufsize
      173: operator: =
      174: call: 
       175: name: MIN
       176: argument_list: 
        177: argument: 
         178: expr: 
          179: name: 
           180: name: file
           181: operator: ->
           182: name: size
        183: argument: 
         184: expr: 
          185: sizeof: 
           186: name: buf
    187: expr_stmt: 
     188: expr: 
      189: call: 
       190: name: sc_file_free
       191: argument_list: 
        192: argument: 
         193: expr: 
          194: name: file
    195: expr_stmt: 
     196: expr: 
      197: name: r
      198: operator: =
      199: call: 
       200: name: sc_read_binary
       201: argument_list: 
        202: argument: 
         203: expr: 
          204: name: card
        205: argument: 
         206: expr: 
          207: literal: 0
        208: argument: 
         209: expr: 
          210: name: buf
        211: argument: 
         212: expr: 
          213: name: bufsize
        214: argument: 
         215: expr: 
          216: literal: 0
    217: if_stmt: 
     218: if: 
      219: condition: 
       220: expr: 
        221: name: r
        222: operator: <
        223: literal: 0
      224: block: 
       225: block_content: 
        226: expr_stmt: 
         227: expr: 
          228: call: 
           229: name: fprintf
           230: argument_list: 
            231: argument: 
             232: expr: 
              233: name: stderr
            234: argument: 
             235: expr: 
              236: literal: "Unable to read private key file: %s\n"
            237: argument: 
             238: expr: 
              239: call: 
               240: name: sc_strerror
               241: argument_list: 
                242: argument: 
                 243: expr: 
                  244: name: r
        245: return: 
         246: expr: 
          247: literal: 2
    248: expr_stmt: 
     249: expr: 
      250: name: bufsize
      251: operator: =
      252: name: r
    253: do: 
     254: block: 
      255: block_content: 
       256: if_stmt: 
        257: if: 
         258: condition: 
          259: expr: 
           260: name: bufsize
           261: operator: <
           262: literal: 4
         263: block: 
          264: block_content: 
           265: return: 
            266: expr: 
             267: literal: 3
       268: expr_stmt: 
        269: expr: 
         270: name: keysize
         271: operator: =
         272: operator: (
         273: name: 
          274: name: p
          275: index: 
           276: expr: 
            277: literal: 0
         278: operator: <<
         279: literal: 8
         280: operator: )
         281: operator: |
         282: name: 
          283: name: p
          284: index: 
           285: expr: 
            286: literal: 1
       287: if_stmt: 
        288: if: 
         289: condition: 
          290: expr: 
           291: name: keysize
           292: operator: ==
           293: literal: 0
         294: block: 
          295: block_content: 
           296: break: 
       297: if_stmt: 
        298: if: 
         299: condition: 
          300: expr: 
           301: name: keysize
           302: operator: <
           303: literal: 3
         304: block: 
          305: block_content: 
           306: return: 
            307: expr: 
             308: literal: 3
       309: if_stmt: 
        310: if: 
         311: condition: 
          312: expr: 
           313: name: 
            314: name: p
            315: index: 
             316: expr: 
              317: literal: 2
           318: operator: ==
           319: name: opt_key_num
         320: block: 
          321: block_content: 
           322: break: 
       323: expr_stmt: 
        324: expr: 
         325: name: p
         326: operator: +=
         327: name: keysize
       328: expr_stmt: 
        329: expr: 
         330: name: bufsize
         331: operator: -=
         332: name: keysize
     333: condition: 
      334: expr: 
       335: literal: 1
    336: if_stmt: 
     337: if: 
      338: condition: 
       339: expr: 
        340: name: keysize
        341: operator: ==
        342: literal: 0
      343: block: 
       344: block_content: 
        345: expr_stmt: 
         346: expr: 
          347: call: 
           348: name: printf
           349: argument_list: 
            350: argument: 
             351: expr: 
              352: literal: "Key number %d not found.\n"
            353: argument: 
             354: expr: 
              355: name: opt_key_num
        356: return: 
         357: expr: 
          358: literal: 2
    359: return: 
     360: expr: 
      361: call: 
       362: name: parse_private_key
       363: argument_list: 
        364: argument: 
         365: expr: 
          366: name: p
        367: argument: 
         368: expr: 
          369: name: keysize
        370: argument: 
         371: expr: 
          372: name: rsa
=====
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: read_private_key
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: RSA
     10: modifier: *
    11: name: rsa
 12: block: 
  13: block_content: 
   14: decl_stmt: 
    15: decl: 
     16: type: 
      17: name: int
     18: name: r
   19: decl_stmt: 
    20: decl: 
     21: type: 
      22: name: sc_path_t
     23: name: path
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: sc_file_t
      28: modifier: *
     29: name: file
   30: decl_stmt: 
    31: decl: 
     32: type: 
      33: specifier: const
      34: name: sc_acl_entry_t
      35: modifier: *
     36: name: e
   37: decl_stmt: 
    38: decl: 
     39: type: 
      40: name: u8
     41: name: 
      42: name: buf
      43: index: 
       44: expr: 
        45: literal: 2048
    46: decl: 
     47: type: 
      48: modifier: *
     49: name: p
     50: init: 
      51: expr: 
       52: name: buf
   53: decl_stmt: 
    54: decl: 
     55: type: 
      56: name: size_t
     57: name: bufsize
    58: decl: 
     59: type: 
     60: name: keysize
   61: expr_stmt: 
    62: expr: 
     63: name: r
     64: operator: =
     65: call: 
      66: name: select_app_df
      67: argument_list: 
   68: if_stmt: 
    69: if: 
     70: condition: 
      71: expr: 
       72: name: r
     73: block: 
      74: block_content: 
       75: return: 
        76: expr: 
         77: literal: 1
   78: expr_stmt: 
    79: expr: 
     80: call: 
      81: name: sc_format_path
      82: argument_list: 
       83: argument: 
        84: expr: 
         85: literal: "I0012"
       86: argument: 
        87: expr: 
         88: operator: &
         89: name: path
   90: expr_stmt: 
    91: expr: 
     92: name: r
     93: operator: =
     94: call: 
      95: name: sc_select_file
      96: argument_list: 
       97: argument: 
        98: expr: 
         99: name: card
       100: argument: 
        101: expr: 
         102: operator: &
         103: name: path
       104: argument: 
        105: expr: 
         106: operator: &
         107: name: file
   108: if_stmt: 
    109: if: 
     110: condition: 
      111: expr: 
       112: name: r
     113: block: 
      114: block_content: 
       115: expr_stmt: 
        116: expr: 
         117: call: 
          118: name: fprintf
          119: argument_list: 
           120: argument: 
            121: expr: 
             122: name: stderr
           123: argument: 
            124: expr: 
             125: literal: "Unable to select private key file: %s\n"
           126: argument: 
            127: expr: 
             128: call: 
              129: name: sc_strerror
              130: argument_list: 
               131: argument: 
                132: expr: 
                 133: name: r
       134: return: 
        135: expr: 
         136: literal: 2
   137: expr_stmt: 
    138: expr: 
     139: name: e
     140: operator: =
     141: call: 
      142: name: sc_file_get_acl_entry
      143: argument_list: 
       144: argument: 
        145: expr: 
         146: name: file
       147: argument: 
        148: expr: 
         149: name: SC_AC_OP_READ
   150: if_stmt: 
    151: if: 
     152: condition: 
      153: expr: 
       154: name: e
       155: operator: ==
       156: name: NULL
       157: operator: ||
       158: name: 
        159: name: e
        160: operator: ->
        161: name: method
       162: operator: ==
       163: name: SC_AC_NEVER
     164: block: 
      165: block_content: 
       166: return: 
        167: expr: 
         168: literal: 10
   169: expr_stmt: 
    170: expr: 
     171: name: bufsize
     172: operator: =
     173: name: 
      174: name: file
      175: operator: ->
      176: name: size
   177: expr_stmt: 
    178: expr: 
     179: call: 
      180: name: sc_file_free
      181: argument_list: 
       182: argument: 
        183: expr: 
         184: name: file
   185: expr_stmt: 
    186: expr: 
     187: name: r
     188: operator: =
     189: call: 
      190: name: sc_read_binary
      191: argument_list: 
       192: argument: 
        193: expr: 
         194: name: card
       195: argument: 
        196: expr: 
         197: literal: 0
       198: argument: 
        199: expr: 
         200: name: buf
       201: argument: 
        202: expr: 
         203: name: bufsize
       204: argument: 
        205: expr: 
         206: literal: 0
   207: if_stmt: 
    208: if: 
     209: condition: 
      210: expr: 
       211: name: r
       212: operator: <
       213: literal: 0
     214: block: 
      215: block_content: 
       216: expr_stmt: 
        217: expr: 
         218: call: 
          219: name: fprintf
          220: argument_list: 
           221: argument: 
            222: expr: 
             223: name: stderr
           224: argument: 
            225: expr: 
             226: literal: "Unable to read private key file: %s\n"
           227: argument: 
            228: expr: 
             229: call: 
              230: name: sc_strerror
              231: argument_list: 
               232: argument: 
                233: expr: 
                 234: name: r
       235: return: 
        236: expr: 
         237: literal: 2
   238: expr_stmt: 
    239: expr: 
     240: name: bufsize
     241: operator: =
     242: name: r
   243: do: 
    244: block: 
     245: block_content: 
      246: if_stmt: 
       247: if: 
        248: condition: 
         249: expr: 
          250: name: bufsize
          251: operator: <
          252: literal: 4
        253: block: 
         254: block_content: 
          255: return: 
           256: expr: 
            257: literal: 3
      258: expr_stmt: 
       259: expr: 
        260: name: keysize
        261: operator: =
        262: operator: (
        263: name: 
         264: name: p
         265: index: 
          266: expr: 
           267: literal: 0
        268: operator: <<
        269: literal: 8
        270: operator: )
        271: operator: |
        272: name: 
         273: name: p
         274: index: 
          275: expr: 
           276: literal: 1
      277: if_stmt: 
       278: if: 
        279: condition: 
         280: expr: 
          281: name: keysize
          282: operator: ==
          283: literal: 0
        284: block: 
         285: block_content: 
          286: break: 
      287: if_stmt: 
       288: if: 
        289: condition: 
         290: expr: 
          291: name: keysize
          292: operator: <
          293: literal: 3
        294: block: 
         295: block_content: 
          296: return: 
           297: expr: 
            298: literal: 3
      299: if_stmt: 
       300: if: 
        301: condition: 
         302: expr: 
          303: name: 
           304: name: p
           305: index: 
            306: expr: 
             307: literal: 2
          308: operator: ==
          309: name: opt_key_num
        310: block: 
         311: block_content: 
          312: break: 
      313: expr_stmt: 
       314: expr: 
        315: name: p
        316: operator: +=
        317: name: keysize
      318: expr_stmt: 
       319: expr: 
        320: name: bufsize
        321: operator: -=
        322: name: keysize
    323: condition: 
     324: expr: 
      325: literal: 1
   326: if_stmt: 
    327: if: 
     328: condition: 
      329: expr: 
       330: name: keysize
       331: operator: ==
       332: literal: 0
     333: block: 
      334: block_content: 
       335: expr_stmt: 
        336: expr: 
         337: call: 
          338: name: printf
          339: argument_list: 
           340: argument: 
            341: expr: 
             342: literal: "Key number %d not found.\n"
           343: argument: 
            344: expr: 
             345: name: opt_key_num
       346: return: 
        347: expr: 
         348: literal: 2
   349: return: 
    350: expr: 
     351: call: 
      352: name: parse_private_key
      353: argument_list: 
       354: argument: 
        355: expr: 
         356: name: p
       357: argument: 
        358: expr: 
         359: name: keysize
       360: argument: 
        361: expr: 
         362: name: rsa

----------------------------------------
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: read_private_key
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: RSA
     10: modifier: *
    11: name: rsa
 12: block: 
  13: block_content: 
   14: decl_stmt: 
    15: decl: 
     16: type: 
      17: name: int
     18: name: r
   19: decl_stmt: 
    20: decl: 
     21: type: 
      22: name: sc_path_t
     23: name: path
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: sc_file_t
      28: modifier: *
     29: name: file
   30: decl_stmt: 
    31: decl: 
     32: type: 
      33: specifier: const
      34: name: sc_acl_entry_t
      35: modifier: *
     36: name: e
   37: decl_stmt: 
    38: decl: 
     39: type: 
      40: name: u8
     41: name: 
      42: name: buf
      43: index: 
       44: expr: 
        45: literal: 2048
    46: decl: 
     47: type: 
      48: modifier: *
     49: name: p
     50: init: 
      51: expr: 
       52: name: buf
   53: decl_stmt: 
    54: decl: 
     55: type: 
      56: name: size_t
     57: name: bufsize
    58: decl: 
     59: type: 
     60: name: keysize
   61: expr_stmt: 
    62: expr: 
     63: name: r
     64: operator: =
     65: call: 
      66: name: select_app_df
      67: argument_list: 
   68: if_stmt: 
    69: if: 
     70: condition: 
      71: expr: 
       72: name: r
     73: block: 
      74: block_content: 
       75: return: 
        76: expr: 
         77: literal: 1
   78: expr_stmt: 
    79: expr: 
     80: call: 
      81: name: sc_format_path
      82: argument_list: 
       83: argument: 
        84: expr: 
         85: literal: "I0012"
       86: argument: 
        87: expr: 
         88: operator: &
         89: name: path
   90: expr_stmt: 
    91: expr: 
     92: name: r
     93: operator: =
     94: call: 
      95: name: sc_select_file
      96: argument_list: 
       97: argument: 
        98: expr: 
         99: name: card
       100: argument: 
        101: expr: 
         102: operator: &
         103: name: path
       104: argument: 
        105: expr: 
         106: operator: &
         107: name: file
   108: if_stmt: 
    109: if: 
     110: condition: 
      111: expr: 
       112: name: r
     113: block: 
      114: block_content: 
       115: expr_stmt: 
        116: expr: 
         117: call: 
          118: name: fprintf
          119: argument_list: 
           120: argument: 
            121: expr: 
             122: name: stderr
           123: argument: 
            124: expr: 
             125: literal: "Unable to select private key file: %s\n"
           126: argument: 
            127: expr: 
             128: call: 
              129: name: sc_strerror
              130: argument_list: 
               131: argument: 
                132: expr: 
                 133: name: r
       134: return: 
        135: expr: 
         136: literal: 2
   137: expr_stmt: 
    138: expr: 
     139: name: e
     140: operator: =
     141: call: 
      142: name: sc_file_get_acl_entry
      143: argument_list: 
       144: argument: 
        145: expr: 
         146: name: file
       147: argument: 
        148: expr: 
         149: name: SC_AC_OP_READ
   150: if_stmt: 
    151: if: 
     152: condition: 
      153: expr: 
       154: name: e
       155: operator: ==
       156: name: NULL
       157: operator: ||
       158: name: 
        159: name: e
        160: operator: ->
        161: name: method
       162: operator: ==
       163: name: SC_AC_NEVER
     164: block: 
      165: block_content: 
       166: return: 
        167: expr: 
         168: literal: 10
   169: expr_stmt: 
    170: expr: 
     171: name: bufsize
     172: operator: =
     173: call: 
      174: name: MIN
      175: argument_list: 
       176: argument: 
        177: expr: 
         178: name: 
          179: name: file
          180: operator: ->
          181: name: size
       182: argument: 
        183: expr: 
         184: sizeof: 
          185: name: buf
   186: expr_stmt: 
    187: expr: 
     188: call: 
      189: name: sc_file_free
      190: argument_list: 
       191: argument: 
        192: expr: 
         193: name: file
   194: expr_stmt: 
    195: expr: 
     196: name: r
     197: operator: =
     198: call: 
      199: name: sc_read_binary
      200: argument_list: 
       201: argument: 
        202: expr: 
         203: name: card
       204: argument: 
        205: expr: 
         206: literal: 0
       207: argument: 
        208: expr: 
         209: name: buf
       210: argument: 
        211: expr: 
         212: name: bufsize
       213: argument: 
        214: expr: 
         215: literal: 0
   216: if_stmt: 
    217: if: 
     218: condition: 
      219: expr: 
       220: name: r
       221: operator: <
       222: literal: 0
     223: block: 
      224: block_content: 
       225: expr_stmt: 
        226: expr: 
         227: call: 
          228: name: fprintf
          229: argument_list: 
           230: argument: 
            231: expr: 
             232: name: stderr
           233: argument: 
            234: expr: 
             235: literal: "Unable to read private key file: %s\n"
           236: argument: 
            237: expr: 
             238: call: 
              239: name: sc_strerror
              240: argument_list: 
               241: argument: 
                242: expr: 
                 243: name: r
       244: return: 
        245: expr: 
         246: literal: 2
   247: expr_stmt: 
    248: expr: 
     249: name: bufsize
     250: operator: =
     251: name: r
   252: do: 
    253: block: 
     254: block_content: 
      255: if_stmt: 
       256: if: 
        257: condition: 
         258: expr: 
          259: name: bufsize
          260: operator: <
          261: literal: 4
        262: block: 
         263: block_content: 
          264: return: 
           265: expr: 
            266: literal: 3
      267: expr_stmt: 
       268: expr: 
        269: name: keysize
        270: operator: =
        271: operator: (
        272: name: 
         273: name: p
         274: index: 
          275: expr: 
           276: literal: 0
        277: operator: <<
        278: literal: 8
        279: operator: )
        280: operator: |
        281: name: 
         282: name: p
         283: index: 
          284: expr: 
           285: literal: 1
      286: if_stmt: 
       287: if: 
        288: condition: 
         289: expr: 
          290: name: keysize
          291: operator: ==
          292: literal: 0
        293: block: 
         294: block_content: 
          295: break: 
      296: if_stmt: 
       297: if: 
        298: condition: 
         299: expr: 
          300: name: keysize
          301: operator: <
          302: literal: 3
        303: block: 
         304: block_content: 
          305: return: 
           306: expr: 
            307: literal: 3
      308: if_stmt: 
       309: if: 
        310: condition: 
         311: expr: 
          312: name: 
           313: name: p
           314: index: 
            315: expr: 
             316: literal: 2
          317: operator: ==
          318: name: opt_key_num
        319: block: 
         320: block_content: 
          321: break: 
      322: expr_stmt: 
       323: expr: 
        324: name: p
        325: operator: +=
        326: name: keysize
      327: expr_stmt: 
       328: expr: 
        329: name: bufsize
        330: operator: -=
        331: name: keysize
    332: condition: 
     333: expr: 
      334: literal: 1
   335: if_stmt: 
    336: if: 
     337: condition: 
      338: expr: 
       339: name: keysize
       340: operator: ==
       341: literal: 0
     342: block: 
      343: block_content: 
       344: expr_stmt: 
        345: expr: 
         346: call: 
          347: name: printf
          348: argument_list: 
           349: argument: 
            350: expr: 
             351: literal: "Key number %d not found.\n"
           352: argument: 
            353: expr: 
             354: name: opt_key_num
       355: return: 
        356: expr: 
         357: literal: 2
   358: return: 
    359: expr: 
     360: call: 
      361: name: parse_private_key
      362: argument_list: 
       363: argument: 
        364: expr: 
         365: name: p
       366: argument: 
        367: expr: 
         368: name: keysize
       369: argument: 
        370: expr: 
         371: name: rsa
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: r
  7: decl_stmt: 
   8: decl: 
    9: type: 
     10: name: sc_path_t
    11: name: path
  12: decl_stmt: 
   13: decl: 
    14: type: 
     15: name: sc_file_t
     16: modifier: *
    17: name: file
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: specifier: const
     22: name: sc_acl_entry_t
     23: modifier: *
    24: name: e
  25: decl_stmt: 
   26: decl: 
    27: type: 
     28: name: u8
    29: name: 
     30: name: buf
     31: index: 
      32: expr: 
       33: literal: 2048
   34: decl: 
    35: type: 
     36: modifier: *
    37: name: p
    38: init: 
     39: expr: 
      40: name: buf
  41: decl_stmt: 
   42: decl: 
    43: type: 
     44: name: size_t
    45: name: bufsize
   46: decl: 
    47: type: 
    48: name: keysize
  49: expr_stmt: 
   50: expr: 
    51: name: r
    52: operator: =
    53: call: 
     54: name: select_app_df
     55: argument_list: 
  56: if_stmt: 
   57: if: 
    58: condition: 
     59: expr: 
      60: name: r
    61: block: 
     62: block_content: 
      63: return: 
       64: expr: 
        65: literal: 1
  66: expr_stmt: 
   67: expr: 
    68: call: 
     69: name: sc_format_path
     70: argument_list: 
      71: argument: 
       72: expr: 
        73: literal: "I0012"
      74: argument: 
       75: expr: 
        76: operator: &
        77: name: path
  78: expr_stmt: 
   79: expr: 
    80: name: r
    81: operator: =
    82: call: 
     83: name: sc_select_file
     84: argument_list: 
      85: argument: 
       86: expr: 
        87: name: card
      88: argument: 
       89: expr: 
        90: operator: &
        91: name: path
      92: argument: 
       93: expr: 
        94: operator: &
        95: name: file
  96: if_stmt: 
   97: if: 
    98: condition: 
     99: expr: 
      100: name: r
    101: block: 
     102: block_content: 
      103: expr_stmt: 
       104: expr: 
        105: call: 
         106: name: fprintf
         107: argument_list: 
          108: argument: 
           109: expr: 
            110: name: stderr
          111: argument: 
           112: expr: 
            113: literal: "Unable to select private key file: %s\n"
          114: argument: 
           115: expr: 
            116: call: 
             117: name: sc_strerror
             118: argument_list: 
              119: argument: 
               120: expr: 
                121: name: r
      122: return: 
       123: expr: 
        124: literal: 2
  125: expr_stmt: 
   126: expr: 
    127: name: e
    128: operator: =
    129: call: 
     130: name: sc_file_get_acl_entry
     131: argument_list: 
      132: argument: 
       133: expr: 
        134: name: file
      135: argument: 
       136: expr: 
        137: name: SC_AC_OP_READ
  138: if_stmt: 
   139: if: 
    140: condition: 
     141: expr: 
      142: name: e
      143: operator: ==
      144: name: NULL
      145: operator: ||
      146: name: 
       147: name: e
       148: operator: ->
       149: name: method
      150: operator: ==
      151: name: SC_AC_NEVER
    152: block: 
     153: block_content: 
      154: return: 
       155: expr: 
        156: literal: 10
  157: expr_stmt: 
   158: expr: 
    159: name: bufsize
    160: operator: =
    161: name: 
     162: name: file
     163: operator: ->
     164: name: size
  165: expr_stmt: 
   166: expr: 
    167: call: 
     168: name: sc_file_free
     169: argument_list: 
      170: argument: 
       171: expr: 
        172: name: file
  173: expr_stmt: 
   174: expr: 
    175: name: r
    176: operator: =
    177: call: 
     178: name: sc_read_binary
     179: argument_list: 
      180: argument: 
       181: expr: 
        182: name: card
      183: argument: 
       184: expr: 
        185: literal: 0
      186: argument: 
       187: expr: 
        188: name: buf
      189: argument: 
       190: expr: 
        191: name: bufsize
      192: argument: 
       193: expr: 
        194: literal: 0
  195: if_stmt: 
   196: if: 
    197: condition: 
     198: expr: 
      199: name: r
      200: operator: <
      201: literal: 0
    202: block: 
     203: block_content: 
      204: expr_stmt: 
       205: expr: 
        206: call: 
         207: name: fprintf
         208: argument_list: 
          209: argument: 
           210: expr: 
            211: name: stderr
          212: argument: 
           213: expr: 
            214: literal: "Unable to read private key file: %s\n"
          215: argument: 
           216: expr: 
            217: call: 
             218: name: sc_strerror
             219: argument_list: 
              220: argument: 
               221: expr: 
                222: name: r
      223: return: 
       224: expr: 
        225: literal: 2
  226: expr_stmt: 
   227: expr: 
    228: name: bufsize
    229: operator: =
    230: name: r
  231: do: 
   232: block: 
    233: block_content: 
     234: if_stmt: 
      235: if: 
       236: condition: 
        237: expr: 
         238: name: bufsize
         239: operator: <
         240: literal: 4
       241: block: 
        242: block_content: 
         243: return: 
          244: expr: 
           245: literal: 3
     246: expr_stmt: 
      247: expr: 
       248: name: keysize
       249: operator: =
       250: operator: (
       251: name: 
        252: name: p
        253: index: 
         254: expr: 
          255: literal: 0
       256: operator: <<
       257: literal: 8
       258: operator: )
       259: operator: |
       260: name: 
        261: name: p
        262: index: 
         263: expr: 
          264: literal: 1
     265: if_stmt: 
      266: if: 
       267: condition: 
        268: expr: 
         269: name: keysize
         270: operator: ==
         271: literal: 0
       272: block: 
        273: block_content: 
         274: break: 
     275: if_stmt: 
      276: if: 
       277: condition: 
        278: expr: 
         279: name: keysize
         280: operator: <
         281: literal: 3
       282: block: 
        283: block_content: 
         284: return: 
          285: expr: 
           286: literal: 3
     287: if_stmt: 
      288: if: 
       289: condition: 
        290: expr: 
         291: name: 
          292: name: p
          293: index: 
           294: expr: 
            295: literal: 2
         296: operator: ==
         297: name: opt_key_num
       298: block: 
        299: block_content: 
         300: break: 
     301: expr_stmt: 
      302: expr: 
       303: name: p
       304: operator: +=
       305: name: keysize
     306: expr_stmt: 
      307: expr: 
       308: name: bufsize
       309: operator: -=
       310: name: keysize
   311: condition: 
    312: expr: 
     313: literal: 1
  314: if_stmt: 
   315: if: 
    316: condition: 
     317: expr: 
      318: name: keysize
      319: operator: ==
      320: literal: 0
    321: block: 
     322: block_content: 
      323: expr_stmt: 
       324: expr: 
        325: call: 
         326: name: printf
         327: argument_list: 
          328: argument: 
           329: expr: 
            330: literal: "Key number %d not found.\n"
          331: argument: 
           332: expr: 
            333: name: opt_key_num
      334: return: 
       335: expr: 
        336: literal: 2
  337: return: 
   338: expr: 
    339: call: 
     340: name: parse_private_key
     341: argument_list: 
      342: argument: 
       343: expr: 
        344: name: p
      345: argument: 
       346: expr: 
        347: name: keysize
      348: argument: 
       349: expr: 
        350: name: rsa

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: r
  7: decl_stmt: 
   8: decl: 
    9: type: 
     10: name: sc_path_t
    11: name: path
  12: decl_stmt: 
   13: decl: 
    14: type: 
     15: name: sc_file_t
     16: modifier: *
    17: name: file
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: specifier: const
     22: name: sc_acl_entry_t
     23: modifier: *
    24: name: e
  25: decl_stmt: 
   26: decl: 
    27: type: 
     28: name: u8
    29: name: 
     30: name: buf
     31: index: 
      32: expr: 
       33: literal: 2048
   34: decl: 
    35: type: 
     36: modifier: *
    37: name: p
    38: init: 
     39: expr: 
      40: name: buf
  41: decl_stmt: 
   42: decl: 
    43: type: 
     44: name: size_t
    45: name: bufsize
   46: decl: 
    47: type: 
    48: name: keysize
  49: expr_stmt: 
   50: expr: 
    51: name: r
    52: operator: =
    53: call: 
     54: name: select_app_df
     55: argument_list: 
  56: if_stmt: 
   57: if: 
    58: condition: 
     59: expr: 
      60: name: r
    61: block: 
     62: block_content: 
      63: return: 
       64: expr: 
        65: literal: 1
  66: expr_stmt: 
   67: expr: 
    68: call: 
     69: name: sc_format_path
     70: argument_list: 
      71: argument: 
       72: expr: 
        73: literal: "I0012"
      74: argument: 
       75: expr: 
        76: operator: &
        77: name: path
  78: expr_stmt: 
   79: expr: 
    80: name: r
    81: operator: =
    82: call: 
     83: name: sc_select_file
     84: argument_list: 
      85: argument: 
       86: expr: 
        87: name: card
      88: argument: 
       89: expr: 
        90: operator: &
        91: name: path
      92: argument: 
       93: expr: 
        94: operator: &
        95: name: file
  96: if_stmt: 
   97: if: 
    98: condition: 
     99: expr: 
      100: name: r
    101: block: 
     102: block_content: 
      103: expr_stmt: 
       104: expr: 
        105: call: 
         106: name: fprintf
         107: argument_list: 
          108: argument: 
           109: expr: 
            110: name: stderr
          111: argument: 
           112: expr: 
            113: literal: "Unable to select private key file: %s\n"
          114: argument: 
           115: expr: 
            116: call: 
             117: name: sc_strerror
             118: argument_list: 
              119: argument: 
               120: expr: 
                121: name: r
      122: return: 
       123: expr: 
        124: literal: 2
  125: expr_stmt: 
   126: expr: 
    127: name: e
    128: operator: =
    129: call: 
     130: name: sc_file_get_acl_entry
     131: argument_list: 
      132: argument: 
       133: expr: 
        134: name: file
      135: argument: 
       136: expr: 
        137: name: SC_AC_OP_READ
  138: if_stmt: 
   139: if: 
    140: condition: 
     141: expr: 
      142: name: e
      143: operator: ==
      144: name: NULL
      145: operator: ||
      146: name: 
       147: name: e
       148: operator: ->
       149: name: method
      150: operator: ==
      151: name: SC_AC_NEVER
    152: block: 
     153: block_content: 
      154: return: 
       155: expr: 
        156: literal: 10
  157: expr_stmt: 
   158: expr: 
    159: name: bufsize
    160: operator: =
    161: call: 
     162: name: MIN
     163: argument_list: 
      164: argument: 
       165: expr: 
        166: name: 
         167: name: file
         168: operator: ->
         169: name: size
      170: argument: 
       171: expr: 
        172: sizeof: 
         173: name: buf
  174: expr_stmt: 
   175: expr: 
    176: call: 
     177: name: sc_file_free
     178: argument_list: 
      179: argument: 
       180: expr: 
        181: name: file
  182: expr_stmt: 
   183: expr: 
    184: name: r
    185: operator: =
    186: call: 
     187: name: sc_read_binary
     188: argument_list: 
      189: argument: 
       190: expr: 
        191: name: card
      192: argument: 
       193: expr: 
        194: literal: 0
      195: argument: 
       196: expr: 
        197: name: buf
      198: argument: 
       199: expr: 
        200: name: bufsize
      201: argument: 
       202: expr: 
        203: literal: 0
  204: if_stmt: 
   205: if: 
    206: condition: 
     207: expr: 
      208: name: r
      209: operator: <
      210: literal: 0
    211: block: 
     212: block_content: 
      213: expr_stmt: 
       214: expr: 
        215: call: 
         216: name: fprintf
         217: argument_list: 
          218: argument: 
           219: expr: 
            220: name: stderr
          221: argument: 
           222: expr: 
            223: literal: "Unable to read private key file: %s\n"
          224: argument: 
           225: expr: 
            226: call: 
             227: name: sc_strerror
             228: argument_list: 
              229: argument: 
               230: expr: 
                231: name: r
      232: return: 
       233: expr: 
        234: literal: 2
  235: expr_stmt: 
   236: expr: 
    237: name: bufsize
    238: operator: =
    239: name: r
  240: do: 
   241: block: 
    242: block_content: 
     243: if_stmt: 
      244: if: 
       245: condition: 
        246: expr: 
         247: name: bufsize
         248: operator: <
         249: literal: 4
       250: block: 
        251: block_content: 
         252: return: 
          253: expr: 
           254: literal: 3
     255: expr_stmt: 
      256: expr: 
       257: name: keysize
       258: operator: =
       259: operator: (
       260: name: 
        261: name: p
        262: index: 
         263: expr: 
          264: literal: 0
       265: operator: <<
       266: literal: 8
       267: operator: )
       268: operator: |
       269: name: 
        270: name: p
        271: index: 
         272: expr: 
          273: literal: 1
     274: if_stmt: 
      275: if: 
       276: condition: 
        277: expr: 
         278: name: keysize
         279: operator: ==
         280: literal: 0
       281: block: 
        282: block_content: 
         283: break: 
     284: if_stmt: 
      285: if: 
       286: condition: 
        287: expr: 
         288: name: keysize
         289: operator: <
         290: literal: 3
       291: block: 
        292: block_content: 
         293: return: 
          294: expr: 
           295: literal: 3
     296: if_stmt: 
      297: if: 
       298: condition: 
        299: expr: 
         300: name: 
          301: name: p
          302: index: 
           303: expr: 
            304: literal: 2
         305: operator: ==
         306: name: opt_key_num
       307: block: 
        308: block_content: 
         309: break: 
     310: expr_stmt: 
      311: expr: 
       312: name: p
       313: operator: +=
       314: name: keysize
     315: expr_stmt: 
      316: expr: 
       317: name: bufsize
       318: operator: -=
       319: name: keysize
   320: condition: 
    321: expr: 
     322: literal: 1
  323: if_stmt: 
   324: if: 
    325: condition: 
     326: expr: 
      327: name: keysize
      328: operator: ==
      329: literal: 0
    330: block: 
     331: block_content: 
      332: expr_stmt: 
       333: expr: 
        334: call: 
         335: name: printf
         336: argument_list: 
          337: argument: 
           338: expr: 
            339: literal: "Key number %d not found.\n"
          340: argument: 
           341: expr: 
            342: name: opt_key_num
      343: return: 
       344: expr: 
        345: literal: 2
  346: return: 
   347: expr: 
    348: call: 
     349: name: parse_private_key
     350: argument_list: 
      351: argument: 
       352: expr: 
        353: name: p
      354: argument: 
       355: expr: 
        356: name: keysize
      357: argument: 
       358: expr: 
        359: name: rsa
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: r
 6: decl_stmt: 
  7: decl: 
   8: type: 
    9: name: sc_path_t
   10: name: path
 11: decl_stmt: 
  12: decl: 
   13: type: 
    14: name: sc_file_t
    15: modifier: *
   16: name: file
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: specifier: const
    21: name: sc_acl_entry_t
    22: modifier: *
   23: name: e
 24: decl_stmt: 
  25: decl: 
   26: type: 
    27: name: u8
   28: name: 
    29: name: buf
    30: index: 
     31: expr: 
      32: literal: 2048
  33: decl: 
   34: type: 
    35: modifier: *
   36: name: p
   37: init: 
    38: expr: 
     39: name: buf
 40: decl_stmt: 
  41: decl: 
   42: type: 
    43: name: size_t
   44: name: bufsize
  45: decl: 
   46: type: 
   47: name: keysize
 48: expr_stmt: 
  49: expr: 
   50: name: r
   51: operator: =
   52: call: 
    53: name: select_app_df
    54: argument_list: 
 55: if_stmt: 
  56: if: 
   57: condition: 
    58: expr: 
     59: name: r
   60: block: 
    61: block_content: 
     62: return: 
      63: expr: 
       64: literal: 1
 65: expr_stmt: 
  66: expr: 
   67: call: 
    68: name: sc_format_path
    69: argument_list: 
     70: argument: 
      71: expr: 
       72: literal: "I0012"
     73: argument: 
      74: expr: 
       75: operator: &
       76: name: path
 77: expr_stmt: 
  78: expr: 
   79: name: r
   80: operator: =
   81: call: 
    82: name: sc_select_file
    83: argument_list: 
     84: argument: 
      85: expr: 
       86: name: card
     87: argument: 
      88: expr: 
       89: operator: &
       90: name: path
     91: argument: 
      92: expr: 
       93: operator: &
       94: name: file
 95: if_stmt: 
  96: if: 
   97: condition: 
    98: expr: 
     99: name: r
   100: block: 
    101: block_content: 
     102: expr_stmt: 
      103: expr: 
       104: call: 
        105: name: fprintf
        106: argument_list: 
         107: argument: 
          108: expr: 
           109: name: stderr
         110: argument: 
          111: expr: 
           112: literal: "Unable to select private key file: %s\n"
         113: argument: 
          114: expr: 
           115: call: 
            116: name: sc_strerror
            117: argument_list: 
             118: argument: 
              119: expr: 
               120: name: r
     121: return: 
      122: expr: 
       123: literal: 2
 124: expr_stmt: 
  125: expr: 
   126: name: e
   127: operator: =
   128: call: 
    129: name: sc_file_get_acl_entry
    130: argument_list: 
     131: argument: 
      132: expr: 
       133: name: file
     134: argument: 
      135: expr: 
       136: name: SC_AC_OP_READ
 137: if_stmt: 
  138: if: 
   139: condition: 
    140: expr: 
     141: name: e
     142: operator: ==
     143: name: NULL
     144: operator: ||
     145: name: 
      146: name: e
      147: operator: ->
      148: name: method
     149: operator: ==
     150: name: SC_AC_NEVER
   151: block: 
    152: block_content: 
     153: return: 
      154: expr: 
       155: literal: 10
 156: expr_stmt: 
  157: expr: 
   158: name: bufsize
   159: operator: =
   160: name: 
    161: name: file
    162: operator: ->
    163: name: size
 164: expr_stmt: 
  165: expr: 
   166: call: 
    167: name: sc_file_free
    168: argument_list: 
     169: argument: 
      170: expr: 
       171: name: file
 172: expr_stmt: 
  173: expr: 
   174: name: r
   175: operator: =
   176: call: 
    177: name: sc_read_binary
    178: argument_list: 
     179: argument: 
      180: expr: 
       181: name: card
     182: argument: 
      183: expr: 
       184: literal: 0
     185: argument: 
      186: expr: 
       187: name: buf
     188: argument: 
      189: expr: 
       190: name: bufsize
     191: argument: 
      192: expr: 
       193: literal: 0
 194: if_stmt: 
  195: if: 
   196: condition: 
    197: expr: 
     198: name: r
     199: operator: <
     200: literal: 0
   201: block: 
    202: block_content: 
     203: expr_stmt: 
      204: expr: 
       205: call: 
        206: name: fprintf
        207: argument_list: 
         208: argument: 
          209: expr: 
           210: name: stderr
         211: argument: 
          212: expr: 
           213: literal: "Unable to read private key file: %s\n"
         214: argument: 
          215: expr: 
           216: call: 
            217: name: sc_strerror
            218: argument_list: 
             219: argument: 
              220: expr: 
               221: name: r
     222: return: 
      223: expr: 
       224: literal: 2
 225: expr_stmt: 
  226: expr: 
   227: name: bufsize
   228: operator: =
   229: name: r
 230: do: 
  231: block: 
   232: block_content: 
    233: if_stmt: 
     234: if: 
      235: condition: 
       236: expr: 
        237: name: bufsize
        238: operator: <
        239: literal: 4
      240: block: 
       241: block_content: 
        242: return: 
         243: expr: 
          244: literal: 3
    245: expr_stmt: 
     246: expr: 
      247: name: keysize
      248: operator: =
      249: operator: (
      250: name: 
       251: name: p
       252: index: 
        253: expr: 
         254: literal: 0
      255: operator: <<
      256: literal: 8
      257: operator: )
      258: operator: |
      259: name: 
       260: name: p
       261: index: 
        262: expr: 
         263: literal: 1
    264: if_stmt: 
     265: if: 
      266: condition: 
       267: expr: 
        268: name: keysize
        269: operator: ==
        270: literal: 0
      271: block: 
       272: block_content: 
        273: break: 
    274: if_stmt: 
     275: if: 
      276: condition: 
       277: expr: 
        278: name: keysize
        279: operator: <
        280: literal: 3
      281: block: 
       282: block_content: 
        283: return: 
         284: expr: 
          285: literal: 3
    286: if_stmt: 
     287: if: 
      288: condition: 
       289: expr: 
        290: name: 
         291: name: p
         292: index: 
          293: expr: 
           294: literal: 2
        295: operator: ==
        296: name: opt_key_num
      297: block: 
       298: block_content: 
        299: break: 
    300: expr_stmt: 
     301: expr: 
      302: name: p
      303: operator: +=
      304: name: keysize
    305: expr_stmt: 
     306: expr: 
      307: name: bufsize
      308: operator: -=
      309: name: keysize
  310: condition: 
   311: expr: 
    312: literal: 1
 313: if_stmt: 
  314: if: 
   315: condition: 
    316: expr: 
     317: name: keysize
     318: operator: ==
     319: literal: 0
   320: block: 
    321: block_content: 
     322: expr_stmt: 
      323: expr: 
       324: call: 
        325: name: printf
        326: argument_list: 
         327: argument: 
          328: expr: 
           329: literal: "Key number %d not found.\n"
         330: argument: 
          331: expr: 
           332: name: opt_key_num
     333: return: 
      334: expr: 
       335: literal: 2
 336: return: 
  337: expr: 
   338: call: 
    339: name: parse_private_key
    340: argument_list: 
     341: argument: 
      342: expr: 
       343: name: p
     344: argument: 
      345: expr: 
       346: name: keysize
     347: argument: 
      348: expr: 
       349: name: rsa

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: r
 6: decl_stmt: 
  7: decl: 
   8: type: 
    9: name: sc_path_t
   10: name: path
 11: decl_stmt: 
  12: decl: 
   13: type: 
    14: name: sc_file_t
    15: modifier: *
   16: name: file
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: specifier: const
    21: name: sc_acl_entry_t
    22: modifier: *
   23: name: e
 24: decl_stmt: 
  25: decl: 
   26: type: 
    27: name: u8
   28: name: 
    29: name: buf
    30: index: 
     31: expr: 
      32: literal: 2048
  33: decl: 
   34: type: 
    35: modifier: *
   36: name: p
   37: init: 
    38: expr: 
     39: name: buf
 40: decl_stmt: 
  41: decl: 
   42: type: 
    43: name: size_t
   44: name: bufsize
  45: decl: 
   46: type: 
   47: name: keysize
 48: expr_stmt: 
  49: expr: 
   50: name: r
   51: operator: =
   52: call: 
    53: name: select_app_df
    54: argument_list: 
 55: if_stmt: 
  56: if: 
   57: condition: 
    58: expr: 
     59: name: r
   60: block: 
    61: block_content: 
     62: return: 
      63: expr: 
       64: literal: 1
 65: expr_stmt: 
  66: expr: 
   67: call: 
    68: name: sc_format_path
    69: argument_list: 
     70: argument: 
      71: expr: 
       72: literal: "I0012"
     73: argument: 
      74: expr: 
       75: operator: &
       76: name: path
 77: expr_stmt: 
  78: expr: 
   79: name: r
   80: operator: =
   81: call: 
    82: name: sc_select_file
    83: argument_list: 
     84: argument: 
      85: expr: 
       86: name: card
     87: argument: 
      88: expr: 
       89: operator: &
       90: name: path
     91: argument: 
      92: expr: 
       93: operator: &
       94: name: file
 95: if_stmt: 
  96: if: 
   97: condition: 
    98: expr: 
     99: name: r
   100: block: 
    101: block_content: 
     102: expr_stmt: 
      103: expr: 
       104: call: 
        105: name: fprintf
        106: argument_list: 
         107: argument: 
          108: expr: 
           109: name: stderr
         110: argument: 
          111: expr: 
           112: literal: "Unable to select private key file: %s\n"
         113: argument: 
          114: expr: 
           115: call: 
            116: name: sc_strerror
            117: argument_list: 
             118: argument: 
              119: expr: 
               120: name: r
     121: return: 
      122: expr: 
       123: literal: 2
 124: expr_stmt: 
  125: expr: 
   126: name: e
   127: operator: =
   128: call: 
    129: name: sc_file_get_acl_entry
    130: argument_list: 
     131: argument: 
      132: expr: 
       133: name: file
     134: argument: 
      135: expr: 
       136: name: SC_AC_OP_READ
 137: if_stmt: 
  138: if: 
   139: condition: 
    140: expr: 
     141: name: e
     142: operator: ==
     143: name: NULL
     144: operator: ||
     145: name: 
      146: name: e
      147: operator: ->
      148: name: method
     149: operator: ==
     150: name: SC_AC_NEVER
   151: block: 
    152: block_content: 
     153: return: 
      154: expr: 
       155: literal: 10
 156: expr_stmt: 
  157: expr: 
   158: name: bufsize
   159: operator: =
   160: call: 
    161: name: MIN
    162: argument_list: 
     163: argument: 
      164: expr: 
       165: name: 
        166: name: file
        167: operator: ->
        168: name: size
     169: argument: 
      170: expr: 
       171: sizeof: 
        172: name: buf
 173: expr_stmt: 
  174: expr: 
   175: call: 
    176: name: sc_file_free
    177: argument_list: 
     178: argument: 
      179: expr: 
       180: name: file
 181: expr_stmt: 
  182: expr: 
   183: name: r
   184: operator: =
   185: call: 
    186: name: sc_read_binary
    187: argument_list: 
     188: argument: 
      189: expr: 
       190: name: card
     191: argument: 
      192: expr: 
       193: literal: 0
     194: argument: 
      195: expr: 
       196: name: buf
     197: argument: 
      198: expr: 
       199: name: bufsize
     200: argument: 
      201: expr: 
       202: literal: 0
 203: if_stmt: 
  204: if: 
   205: condition: 
    206: expr: 
     207: name: r
     208: operator: <
     209: literal: 0
   210: block: 
    211: block_content: 
     212: expr_stmt: 
      213: expr: 
       214: call: 
        215: name: fprintf
        216: argument_list: 
         217: argument: 
          218: expr: 
           219: name: stderr
         220: argument: 
          221: expr: 
           222: literal: "Unable to read private key file: %s\n"
         223: argument: 
          224: expr: 
           225: call: 
            226: name: sc_strerror
            227: argument_list: 
             228: argument: 
              229: expr: 
               230: name: r
     231: return: 
      232: expr: 
       233: literal: 2
 234: expr_stmt: 
  235: expr: 
   236: name: bufsize
   237: operator: =
   238: name: r
 239: do: 
  240: block: 
   241: block_content: 
    242: if_stmt: 
     243: if: 
      244: condition: 
       245: expr: 
        246: name: bufsize
        247: operator: <
        248: literal: 4
      249: block: 
       250: block_content: 
        251: return: 
         252: expr: 
          253: literal: 3
    254: expr_stmt: 
     255: expr: 
      256: name: keysize
      257: operator: =
      258: operator: (
      259: name: 
       260: name: p
       261: index: 
        262: expr: 
         263: literal: 0
      264: operator: <<
      265: literal: 8
      266: operator: )
      267: operator: |
      268: name: 
       269: name: p
       270: index: 
        271: expr: 
         272: literal: 1
    273: if_stmt: 
     274: if: 
      275: condition: 
       276: expr: 
        277: name: keysize
        278: operator: ==
        279: literal: 0
      280: block: 
       281: block_content: 
        282: break: 
    283: if_stmt: 
     284: if: 
      285: condition: 
       286: expr: 
        287: name: keysize
        288: operator: <
        289: literal: 3
      290: block: 
       291: block_content: 
        292: return: 
         293: expr: 
          294: literal: 3
    295: if_stmt: 
     296: if: 
      297: condition: 
       298: expr: 
        299: name: 
         300: name: p
         301: index: 
          302: expr: 
           303: literal: 2
        304: operator: ==
        305: name: opt_key_num
      306: block: 
       307: block_content: 
        308: break: 
    309: expr_stmt: 
     310: expr: 
      311: name: p
      312: operator: +=
      313: name: keysize
    314: expr_stmt: 
     315: expr: 
      316: name: bufsize
      317: operator: -=
      318: name: keysize
  319: condition: 
   320: expr: 
    321: literal: 1
 322: if_stmt: 
  323: if: 
   324: condition: 
    325: expr: 
     326: name: keysize
     327: operator: ==
     328: literal: 0
   329: block: 
    330: block_content: 
     331: expr_stmt: 
      332: expr: 
       333: call: 
        334: name: printf
        335: argument_list: 
         336: argument: 
          337: expr: 
           338: literal: "Key number %d not found.\n"
         339: argument: 
          340: expr: 
           341: name: opt_key_num
     342: return: 
      343: expr: 
       344: literal: 2
 345: return: 
  346: expr: 
   347: call: 
    348: name: parse_private_key
    349: argument_list: 
     350: argument: 
      351: expr: 
       352: name: p
     353: argument: 
      354: expr: 
       355: name: keysize
     356: argument: 
      357: expr: 
       358: name: rsa
=====
0: expr_stmt: 
 1: expr: 
  2: name: bufsize
  3: operator: =
  4: name: 
   5: name: file
   6: operator: ->
   7: name: size

----------------------------------------
0: expr_stmt: 
 1: expr: 
  2: name: bufsize
  3: operator: =
  4: call: 
   5: name: MIN
   6: argument_list: 
    7: argument: 
     8: expr: 
      9: name: 
       10: name: file
       11: operator: ->
       12: name: size
    13: argument: 
     14: expr: 
      15: sizeof: 
       16: name: buf
=====
