0: expr: 
 1: ?: !@#$holes0
 2: operator: *
 3: sizeof: 
  4: argument_list: 
   5: argument: 
    6: expr: 
     7: name: u8
 8: ?: !@#$holes1

----------------------------------------
0: expr: 
 1: ?: !@#$holes0
 2: ?: !@#$holes1
=====
0: unit: 
 1: function: 
  2: type: 
   3: name: int
  4: name: tpm_open
  5: parameter_list: 
   6: parameter: 
    7: decl: 
     8: type: 
      9: name: 
       10: name: struct
       11: name: inode
      12: modifier: *
     13: name: inode
   14: parameter: 
    15: decl: 
     16: type: 
      17: name: 
       18: name: struct
       19: name: file
      20: modifier: *
     21: name: file
  22: block: 
   23: block_content: 
    24: decl_stmt: 
     25: decl: 
      26: type: 
       27: name: int
      28: name: minor
      29: init: 
       30: expr: 
        31: call: 
         32: name: iminor
         33: argument_list: 
          34: argument: 
           35: expr: 
            36: name: inode
    37: decl_stmt: 
     38: decl: 
      39: type: 
       40: name: 
        41: name: struct
        42: name: tpm_chip
       43: modifier: *
      44: name: chip
      45: init: 
       46: expr: 
        47: name: NULL
     48: decl: 
      49: type: 
       50: modifier: *
      51: name: pos
    52: expr_stmt: 
     53: expr: 
      54: call: 
       55: name: rcu_read_lock
       56: argument_list: 
    57: macro: 
     58: name: list_for_each_entry_rcu
     59: argument_list: 
      60: argument: 
      61: argument: 
      62: argument: 
    63: block: 
     64: block_content: 
      65: if_stmt: 
       66: if: 
        67: condition: 
         68: expr: 
          69: name: 
           70: name: pos
           71: operator: ->
           72: name: vendor
           73: operator: .
           74: name: miscdev
           75: operator: .
           76: name: minor
          77: operator: ==
          78: name: minor
        79: block: 
         80: block_content: 
          81: expr_stmt: 
           82: expr: 
            83: name: chip
            84: operator: =
            85: name: pos
          86: expr_stmt: 
           87: expr: 
            88: call: 
             89: name: get_device
             90: argument_list: 
              91: argument: 
               92: expr: 
                93: name: 
                 94: name: chip
                 95: operator: ->
                 96: name: dev
          97: break: 
    98: expr_stmt: 
     99: expr: 
      100: call: 
       101: name: rcu_read_unlock
       102: argument_list: 
    103: if_stmt: 
     104: if: 
      105: condition: 
       106: expr: 
        107: operator: !
        108: name: chip
      109: block: 
       110: block_content: 
        111: return: 
         112: expr: 
          113: operator: -
          114: name: ENODEV
    115: if_stmt: 
     116: if: 
      117: condition: 
       118: expr: 
        119: call: 
         120: name: test_and_set_bit
         121: argument_list: 
          122: argument: 
           123: expr: 
            124: literal: 0
          125: argument: 
           126: expr: 
            127: operator: &
            128: name: 
             129: name: chip
             130: operator: ->
             131: name: is_open
      132: block: 
       133: block_content: 
        134: expr_stmt: 
         135: expr: 
          136: call: 
           137: name: dev_dbg
           138: argument_list: 
            139: argument: 
             140: expr: 
              141: name: 
               142: name: chip
               143: operator: ->
               144: name: dev
            145: argument: 
             146: expr: 
              147: literal: "Another process owns this TPM\n"
        148: expr_stmt: 
         149: expr: 
          150: call: 
           151: name: put_device
           152: argument_list: 
            153: argument: 
             154: expr: 
              155: name: 
               156: name: chip
               157: operator: ->
               158: name: dev
        159: return: 
         160: expr: 
          161: operator: -
          162: name: EBUSY
    163: expr_stmt: 
     164: expr: 
      165: name: 
       166: name: chip
       167: operator: ->
       168: name: data_buffer
      169: operator: =
      170: call: 
       171: name: kmalloc
       172: argument_list: 
        173: argument: 
         174: expr: 
          175: name: TPM_BUFSIZE
          176: operator: *
          177: sizeof: 
           178: argument_list: 
            179: argument: 
             180: expr: 
              181: name: u8
        182: argument: 
         183: expr: 
          184: name: GFP_KERNEL
    185: if_stmt: 
     186: if: 
      187: condition: 
       188: expr: 
        189: name: 
         190: name: chip
         191: operator: ->
         192: name: data_buffer
        193: operator: ==
        194: name: NULL
      195: block: 
       196: block_content: 
        197: expr_stmt: 
         198: expr: 
          199: call: 
           200: name: clear_bit
           201: argument_list: 
            202: argument: 
             203: expr: 
              204: literal: 0
            205: argument: 
             206: expr: 
              207: operator: &
              208: name: 
               209: name: chip
               210: operator: ->
               211: name: is_open
        212: expr_stmt: 
         213: expr: 
          214: call: 
           215: name: put_device
           216: argument_list: 
            217: argument: 
             218: expr: 
              219: name: 
               220: name: chip
               221: operator: ->
               222: name: dev
        223: return: 
         224: expr: 
          225: operator: -
          226: name: ENOMEM
    227: expr_stmt: 
     228: expr: 
      229: call: 
       230: name: atomic_set
       231: argument_list: 
        232: argument: 
         233: expr: 
          234: operator: &
          235: name: 
           236: name: chip
           237: operator: ->
           238: name: data_pending
        239: argument: 
         240: expr: 
          241: literal: 0
    242: expr_stmt: 
     243: expr: 
      244: name: 
       245: name: file
       246: operator: ->
       247: name: private_data
      248: operator: =
      249: name: chip
    250: return: 
     251: expr: 
      252: literal: 0

----------------------------------------
0: unit: 
 1: function: 
  2: type: 
   3: name: int
  4: name: tpm_open
  5: parameter_list: 
   6: parameter: 
    7: decl: 
     8: type: 
      9: name: 
       10: name: struct
       11: name: inode
      12: modifier: *
     13: name: inode
   14: parameter: 
    15: decl: 
     16: type: 
      17: name: 
       18: name: struct
       19: name: file
      20: modifier: *
     21: name: file
  22: block: 
   23: block_content: 
    24: decl_stmt: 
     25: decl: 
      26: type: 
       27: name: int
      28: name: minor
      29: init: 
       30: expr: 
        31: call: 
         32: name: iminor
         33: argument_list: 
          34: argument: 
           35: expr: 
            36: name: inode
    37: decl_stmt: 
     38: decl: 
      39: type: 
       40: name: 
        41: name: struct
        42: name: tpm_chip
       43: modifier: *
      44: name: chip
      45: init: 
       46: expr: 
        47: name: NULL
     48: decl: 
      49: type: 
       50: modifier: *
      51: name: pos
    52: expr_stmt: 
     53: expr: 
      54: call: 
       55: name: rcu_read_lock
       56: argument_list: 
    57: macro: 
     58: name: list_for_each_entry_rcu
     59: argument_list: 
      60: argument: 
      61: argument: 
      62: argument: 
    63: block: 
     64: block_content: 
      65: if_stmt: 
       66: if: 
        67: condition: 
         68: expr: 
          69: name: 
           70: name: pos
           71: operator: ->
           72: name: vendor
           73: operator: .
           74: name: miscdev
           75: operator: .
           76: name: minor
          77: operator: ==
          78: name: minor
        79: block: 
         80: block_content: 
          81: expr_stmt: 
           82: expr: 
            83: name: chip
            84: operator: =
            85: name: pos
          86: expr_stmt: 
           87: expr: 
            88: call: 
             89: name: get_device
             90: argument_list: 
              91: argument: 
               92: expr: 
                93: name: 
                 94: name: chip
                 95: operator: ->
                 96: name: dev
          97: break: 
    98: expr_stmt: 
     99: expr: 
      100: call: 
       101: name: rcu_read_unlock
       102: argument_list: 
    103: if_stmt: 
     104: if: 
      105: condition: 
       106: expr: 
        107: operator: !
        108: name: chip
      109: block: 
       110: block_content: 
        111: return: 
         112: expr: 
          113: operator: -
          114: name: ENODEV
    115: if_stmt: 
     116: if: 
      117: condition: 
       118: expr: 
        119: call: 
         120: name: test_and_set_bit
         121: argument_list: 
          122: argument: 
           123: expr: 
            124: literal: 0
          125: argument: 
           126: expr: 
            127: operator: &
            128: name: 
             129: name: chip
             130: operator: ->
             131: name: is_open
      132: block: 
       133: block_content: 
        134: expr_stmt: 
         135: expr: 
          136: call: 
           137: name: dev_dbg
           138: argument_list: 
            139: argument: 
             140: expr: 
              141: name: 
               142: name: chip
               143: operator: ->
               144: name: dev
            145: argument: 
             146: expr: 
              147: literal: "Another process owns this TPM\n"
        148: expr_stmt: 
         149: expr: 
          150: call: 
           151: name: put_device
           152: argument_list: 
            153: argument: 
             154: expr: 
              155: name: 
               156: name: chip
               157: operator: ->
               158: name: dev
        159: return: 
         160: expr: 
          161: operator: -
          162: name: EBUSY
    163: expr_stmt: 
     164: expr: 
      165: name: 
       166: name: chip
       167: operator: ->
       168: name: data_buffer
      169: operator: =
      170: call: 
       171: name: kzalloc
       172: argument_list: 
        173: argument: 
         174: expr: 
          175: name: TPM_BUFSIZE
        176: argument: 
         177: expr: 
          178: name: GFP_KERNEL
    179: if_stmt: 
     180: if: 
      181: condition: 
       182: expr: 
        183: name: 
         184: name: chip
         185: operator: ->
         186: name: data_buffer
        187: operator: ==
        188: name: NULL
      189: block: 
       190: block_content: 
        191: expr_stmt: 
         192: expr: 
          193: call: 
           194: name: clear_bit
           195: argument_list: 
            196: argument: 
             197: expr: 
              198: literal: 0
            199: argument: 
             200: expr: 
              201: operator: &
              202: name: 
               203: name: chip
               204: operator: ->
               205: name: is_open
        206: expr_stmt: 
         207: expr: 
          208: call: 
           209: name: put_device
           210: argument_list: 
            211: argument: 
             212: expr: 
              213: name: 
               214: name: chip
               215: operator: ->
               216: name: dev
        217: return: 
         218: expr: 
          219: operator: -
          220: name: ENOMEM
    221: expr_stmt: 
     222: expr: 
      223: call: 
       224: name: atomic_set
       225: argument_list: 
        226: argument: 
         227: expr: 
          228: operator: &
          229: name: 
           230: name: chip
           231: operator: ->
           232: name: data_pending
        233: argument: 
         234: expr: 
          235: literal: 0
    236: expr_stmt: 
     237: expr: 
      238: name: 
       239: name: file
       240: operator: ->
       241: name: private_data
      242: operator: =
      243: name: chip
    244: return: 
     245: expr: 
      246: literal: 0
=====
0: function: 
 1: type: 
  2: name: int
 3: name: tpm_open
 4: parameter_list: 
  5: parameter: 
   6: decl: 
    7: type: 
     8: name: 
      9: name: struct
      10: name: inode
     11: modifier: *
    12: name: inode
  13: parameter: 
   14: decl: 
    15: type: 
     16: name: 
      17: name: struct
      18: name: file
     19: modifier: *
    20: name: file
 21: block: 
  22: block_content: 
   23: decl_stmt: 
    24: decl: 
     25: type: 
      26: name: int
     27: name: minor
     28: init: 
      29: expr: 
       30: call: 
        31: name: iminor
        32: argument_list: 
         33: argument: 
          34: expr: 
           35: name: inode
   36: decl_stmt: 
    37: decl: 
     38: type: 
      39: name: 
       40: name: struct
       41: name: tpm_chip
      42: modifier: *
     43: name: chip
     44: init: 
      45: expr: 
       46: name: NULL
    47: decl: 
     48: type: 
      49: modifier: *
     50: name: pos
   51: expr_stmt: 
    52: expr: 
     53: call: 
      54: name: rcu_read_lock
      55: argument_list: 
   56: macro: 
    57: name: list_for_each_entry_rcu
    58: argument_list: 
     59: argument: 
     60: argument: 
     61: argument: 
   62: block: 
    63: block_content: 
     64: if_stmt: 
      65: if: 
       66: condition: 
        67: expr: 
         68: name: 
          69: name: pos
          70: operator: ->
          71: name: vendor
          72: operator: .
          73: name: miscdev
          74: operator: .
          75: name: minor
         76: operator: ==
         77: name: minor
       78: block: 
        79: block_content: 
         80: expr_stmt: 
          81: expr: 
           82: name: chip
           83: operator: =
           84: name: pos
         85: expr_stmt: 
          86: expr: 
           87: call: 
            88: name: get_device
            89: argument_list: 
             90: argument: 
              91: expr: 
               92: name: 
                93: name: chip
                94: operator: ->
                95: name: dev
         96: break: 
   97: expr_stmt: 
    98: expr: 
     99: call: 
      100: name: rcu_read_unlock
      101: argument_list: 
   102: if_stmt: 
    103: if: 
     104: condition: 
      105: expr: 
       106: operator: !
       107: name: chip
     108: block: 
      109: block_content: 
       110: return: 
        111: expr: 
         112: operator: -
         113: name: ENODEV
   114: if_stmt: 
    115: if: 
     116: condition: 
      117: expr: 
       118: call: 
        119: name: test_and_set_bit
        120: argument_list: 
         121: argument: 
          122: expr: 
           123: literal: 0
         124: argument: 
          125: expr: 
           126: operator: &
           127: name: 
            128: name: chip
            129: operator: ->
            130: name: is_open
     131: block: 
      132: block_content: 
       133: expr_stmt: 
        134: expr: 
         135: call: 
          136: name: dev_dbg
          137: argument_list: 
           138: argument: 
            139: expr: 
             140: name: 
              141: name: chip
              142: operator: ->
              143: name: dev
           144: argument: 
            145: expr: 
             146: literal: "Another process owns this TPM\n"
       147: expr_stmt: 
        148: expr: 
         149: call: 
          150: name: put_device
          151: argument_list: 
           152: argument: 
            153: expr: 
             154: name: 
              155: name: chip
              156: operator: ->
              157: name: dev
       158: return: 
        159: expr: 
         160: operator: -
         161: name: EBUSY
   162: expr_stmt: 
    163: expr: 
     164: name: 
      165: name: chip
      166: operator: ->
      167: name: data_buffer
     168: operator: =
     169: call: 
      170: name: kmalloc
      171: argument_list: 
       172: argument: 
        173: expr: 
         174: name: TPM_BUFSIZE
         175: operator: *
         176: sizeof: 
          177: argument_list: 
           178: argument: 
            179: expr: 
             180: name: u8
       181: argument: 
        182: expr: 
         183: name: GFP_KERNEL
   184: if_stmt: 
    185: if: 
     186: condition: 
      187: expr: 
       188: name: 
        189: name: chip
        190: operator: ->
        191: name: data_buffer
       192: operator: ==
       193: name: NULL
     194: block: 
      195: block_content: 
       196: expr_stmt: 
        197: expr: 
         198: call: 
          199: name: clear_bit
          200: argument_list: 
           201: argument: 
            202: expr: 
             203: literal: 0
           204: argument: 
            205: expr: 
             206: operator: &
             207: name: 
              208: name: chip
              209: operator: ->
              210: name: is_open
       211: expr_stmt: 
        212: expr: 
         213: call: 
          214: name: put_device
          215: argument_list: 
           216: argument: 
            217: expr: 
             218: name: 
              219: name: chip
              220: operator: ->
              221: name: dev
       222: return: 
        223: expr: 
         224: operator: -
         225: name: ENOMEM
   226: expr_stmt: 
    227: expr: 
     228: call: 
      229: name: atomic_set
      230: argument_list: 
       231: argument: 
        232: expr: 
         233: operator: &
         234: name: 
          235: name: chip
          236: operator: ->
          237: name: data_pending
       238: argument: 
        239: expr: 
         240: literal: 0
   241: expr_stmt: 
    242: expr: 
     243: name: 
      244: name: file
      245: operator: ->
      246: name: private_data
     247: operator: =
     248: name: chip
   249: return: 
    250: expr: 
     251: literal: 0

----------------------------------------
0: function: 
 1: type: 
  2: name: int
 3: name: tpm_open
 4: parameter_list: 
  5: parameter: 
   6: decl: 
    7: type: 
     8: name: 
      9: name: struct
      10: name: inode
     11: modifier: *
    12: name: inode
  13: parameter: 
   14: decl: 
    15: type: 
     16: name: 
      17: name: struct
      18: name: file
     19: modifier: *
    20: name: file
 21: block: 
  22: block_content: 
   23: decl_stmt: 
    24: decl: 
     25: type: 
      26: name: int
     27: name: minor
     28: init: 
      29: expr: 
       30: call: 
        31: name: iminor
        32: argument_list: 
         33: argument: 
          34: expr: 
           35: name: inode
   36: decl_stmt: 
    37: decl: 
     38: type: 
      39: name: 
       40: name: struct
       41: name: tpm_chip
      42: modifier: *
     43: name: chip
     44: init: 
      45: expr: 
       46: name: NULL
    47: decl: 
     48: type: 
      49: modifier: *
     50: name: pos
   51: expr_stmt: 
    52: expr: 
     53: call: 
      54: name: rcu_read_lock
      55: argument_list: 
   56: macro: 
    57: name: list_for_each_entry_rcu
    58: argument_list: 
     59: argument: 
     60: argument: 
     61: argument: 
   62: block: 
    63: block_content: 
     64: if_stmt: 
      65: if: 
       66: condition: 
        67: expr: 
         68: name: 
          69: name: pos
          70: operator: ->
          71: name: vendor
          72: operator: .
          73: name: miscdev
          74: operator: .
          75: name: minor
         76: operator: ==
         77: name: minor
       78: block: 
        79: block_content: 
         80: expr_stmt: 
          81: expr: 
           82: name: chip
           83: operator: =
           84: name: pos
         85: expr_stmt: 
          86: expr: 
           87: call: 
            88: name: get_device
            89: argument_list: 
             90: argument: 
              91: expr: 
               92: name: 
                93: name: chip
                94: operator: ->
                95: name: dev
         96: break: 
   97: expr_stmt: 
    98: expr: 
     99: call: 
      100: name: rcu_read_unlock
      101: argument_list: 
   102: if_stmt: 
    103: if: 
     104: condition: 
      105: expr: 
       106: operator: !
       107: name: chip
     108: block: 
      109: block_content: 
       110: return: 
        111: expr: 
         112: operator: -
         113: name: ENODEV
   114: if_stmt: 
    115: if: 
     116: condition: 
      117: expr: 
       118: call: 
        119: name: test_and_set_bit
        120: argument_list: 
         121: argument: 
          122: expr: 
           123: literal: 0
         124: argument: 
          125: expr: 
           126: operator: &
           127: name: 
            128: name: chip
            129: operator: ->
            130: name: is_open
     131: block: 
      132: block_content: 
       133: expr_stmt: 
        134: expr: 
         135: call: 
          136: name: dev_dbg
          137: argument_list: 
           138: argument: 
            139: expr: 
             140: name: 
              141: name: chip
              142: operator: ->
              143: name: dev
           144: argument: 
            145: expr: 
             146: literal: "Another process owns this TPM\n"
       147: expr_stmt: 
        148: expr: 
         149: call: 
          150: name: put_device
          151: argument_list: 
           152: argument: 
            153: expr: 
             154: name: 
              155: name: chip
              156: operator: ->
              157: name: dev
       158: return: 
        159: expr: 
         160: operator: -
         161: name: EBUSY
   162: expr_stmt: 
    163: expr: 
     164: name: 
      165: name: chip
      166: operator: ->
      167: name: data_buffer
     168: operator: =
     169: call: 
      170: name: kzalloc
      171: argument_list: 
       172: argument: 
        173: expr: 
         174: name: TPM_BUFSIZE
       175: argument: 
        176: expr: 
         177: name: GFP_KERNEL
   178: if_stmt: 
    179: if: 
     180: condition: 
      181: expr: 
       182: name: 
        183: name: chip
        184: operator: ->
        185: name: data_buffer
       186: operator: ==
       187: name: NULL
     188: block: 
      189: block_content: 
       190: expr_stmt: 
        191: expr: 
         192: call: 
          193: name: clear_bit
          194: argument_list: 
           195: argument: 
            196: expr: 
             197: literal: 0
           198: argument: 
            199: expr: 
             200: operator: &
             201: name: 
              202: name: chip
              203: operator: ->
              204: name: is_open
       205: expr_stmt: 
        206: expr: 
         207: call: 
          208: name: put_device
          209: argument_list: 
           210: argument: 
            211: expr: 
             212: name: 
              213: name: chip
              214: operator: ->
              215: name: dev
       216: return: 
        217: expr: 
         218: operator: -
         219: name: ENOMEM
   220: expr_stmt: 
    221: expr: 
     222: call: 
      223: name: atomic_set
      224: argument_list: 
       225: argument: 
        226: expr: 
         227: operator: &
         228: name: 
          229: name: chip
          230: operator: ->
          231: name: data_pending
       232: argument: 
        233: expr: 
         234: literal: 0
   235: expr_stmt: 
    236: expr: 
     237: name: 
      238: name: file
      239: operator: ->
      240: name: private_data
     241: operator: =
     242: name: chip
   243: return: 
    244: expr: 
     245: literal: 0
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: minor
    7: init: 
     8: expr: 
      9: call: 
       10: name: iminor
       11: argument_list: 
        12: argument: 
         13: expr: 
          14: name: inode
  15: decl_stmt: 
   16: decl: 
    17: type: 
     18: name: 
      19: name: struct
      20: name: tpm_chip
     21: modifier: *
    22: name: chip
    23: init: 
     24: expr: 
      25: name: NULL
   26: decl: 
    27: type: 
     28: modifier: *
    29: name: pos
  30: expr_stmt: 
   31: expr: 
    32: call: 
     33: name: rcu_read_lock
     34: argument_list: 
  35: macro: 
   36: name: list_for_each_entry_rcu
   37: argument_list: 
    38: argument: 
    39: argument: 
    40: argument: 
  41: block: 
   42: block_content: 
    43: if_stmt: 
     44: if: 
      45: condition: 
       46: expr: 
        47: name: 
         48: name: pos
         49: operator: ->
         50: name: vendor
         51: operator: .
         52: name: miscdev
         53: operator: .
         54: name: minor
        55: operator: ==
        56: name: minor
      57: block: 
       58: block_content: 
        59: expr_stmt: 
         60: expr: 
          61: name: chip
          62: operator: =
          63: name: pos
        64: expr_stmt: 
         65: expr: 
          66: call: 
           67: name: get_device
           68: argument_list: 
            69: argument: 
             70: expr: 
              71: name: 
               72: name: chip
               73: operator: ->
               74: name: dev
        75: break: 
  76: expr_stmt: 
   77: expr: 
    78: call: 
     79: name: rcu_read_unlock
     80: argument_list: 
  81: if_stmt: 
   82: if: 
    83: condition: 
     84: expr: 
      85: operator: !
      86: name: chip
    87: block: 
     88: block_content: 
      89: return: 
       90: expr: 
        91: operator: -
        92: name: ENODEV
  93: if_stmt: 
   94: if: 
    95: condition: 
     96: expr: 
      97: call: 
       98: name: test_and_set_bit
       99: argument_list: 
        100: argument: 
         101: expr: 
          102: literal: 0
        103: argument: 
         104: expr: 
          105: operator: &
          106: name: 
           107: name: chip
           108: operator: ->
           109: name: is_open
    110: block: 
     111: block_content: 
      112: expr_stmt: 
       113: expr: 
        114: call: 
         115: name: dev_dbg
         116: argument_list: 
          117: argument: 
           118: expr: 
            119: name: 
             120: name: chip
             121: operator: ->
             122: name: dev
          123: argument: 
           124: expr: 
            125: literal: "Another process owns this TPM\n"
      126: expr_stmt: 
       127: expr: 
        128: call: 
         129: name: put_device
         130: argument_list: 
          131: argument: 
           132: expr: 
            133: name: 
             134: name: chip
             135: operator: ->
             136: name: dev
      137: return: 
       138: expr: 
        139: operator: -
        140: name: EBUSY
  141: expr_stmt: 
   142: expr: 
    143: name: 
     144: name: chip
     145: operator: ->
     146: name: data_buffer
    147: operator: =
    148: call: 
     149: name: kmalloc
     150: argument_list: 
      151: argument: 
       152: expr: 
        153: name: TPM_BUFSIZE
        154: operator: *
        155: sizeof: 
         156: argument_list: 
          157: argument: 
           158: expr: 
            159: name: u8
      160: argument: 
       161: expr: 
        162: name: GFP_KERNEL
  163: if_stmt: 
   164: if: 
    165: condition: 
     166: expr: 
      167: name: 
       168: name: chip
       169: operator: ->
       170: name: data_buffer
      171: operator: ==
      172: name: NULL
    173: block: 
     174: block_content: 
      175: expr_stmt: 
       176: expr: 
        177: call: 
         178: name: clear_bit
         179: argument_list: 
          180: argument: 
           181: expr: 
            182: literal: 0
          183: argument: 
           184: expr: 
            185: operator: &
            186: name: 
             187: name: chip
             188: operator: ->
             189: name: is_open
      190: expr_stmt: 
       191: expr: 
        192: call: 
         193: name: put_device
         194: argument_list: 
          195: argument: 
           196: expr: 
            197: name: 
             198: name: chip
             199: operator: ->
             200: name: dev
      201: return: 
       202: expr: 
        203: operator: -
        204: name: ENOMEM
  205: expr_stmt: 
   206: expr: 
    207: call: 
     208: name: atomic_set
     209: argument_list: 
      210: argument: 
       211: expr: 
        212: operator: &
        213: name: 
         214: name: chip
         215: operator: ->
         216: name: data_pending
      217: argument: 
       218: expr: 
        219: literal: 0
  220: expr_stmt: 
   221: expr: 
    222: name: 
     223: name: file
     224: operator: ->
     225: name: private_data
    226: operator: =
    227: name: chip
  228: return: 
   229: expr: 
    230: literal: 0

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: minor
    7: init: 
     8: expr: 
      9: call: 
       10: name: iminor
       11: argument_list: 
        12: argument: 
         13: expr: 
          14: name: inode
  15: decl_stmt: 
   16: decl: 
    17: type: 
     18: name: 
      19: name: struct
      20: name: tpm_chip
     21: modifier: *
    22: name: chip
    23: init: 
     24: expr: 
      25: name: NULL
   26: decl: 
    27: type: 
     28: modifier: *
    29: name: pos
  30: expr_stmt: 
   31: expr: 
    32: call: 
     33: name: rcu_read_lock
     34: argument_list: 
  35: macro: 
   36: name: list_for_each_entry_rcu
   37: argument_list: 
    38: argument: 
    39: argument: 
    40: argument: 
  41: block: 
   42: block_content: 
    43: if_stmt: 
     44: if: 
      45: condition: 
       46: expr: 
        47: name: 
         48: name: pos
         49: operator: ->
         50: name: vendor
         51: operator: .
         52: name: miscdev
         53: operator: .
         54: name: minor
        55: operator: ==
        56: name: minor
      57: block: 
       58: block_content: 
        59: expr_stmt: 
         60: expr: 
          61: name: chip
          62: operator: =
          63: name: pos
        64: expr_stmt: 
         65: expr: 
          66: call: 
           67: name: get_device
           68: argument_list: 
            69: argument: 
             70: expr: 
              71: name: 
               72: name: chip
               73: operator: ->
               74: name: dev
        75: break: 
  76: expr_stmt: 
   77: expr: 
    78: call: 
     79: name: rcu_read_unlock
     80: argument_list: 
  81: if_stmt: 
   82: if: 
    83: condition: 
     84: expr: 
      85: operator: !
      86: name: chip
    87: block: 
     88: block_content: 
      89: return: 
       90: expr: 
        91: operator: -
        92: name: ENODEV
  93: if_stmt: 
   94: if: 
    95: condition: 
     96: expr: 
      97: call: 
       98: name: test_and_set_bit
       99: argument_list: 
        100: argument: 
         101: expr: 
          102: literal: 0
        103: argument: 
         104: expr: 
          105: operator: &
          106: name: 
           107: name: chip
           108: operator: ->
           109: name: is_open
    110: block: 
     111: block_content: 
      112: expr_stmt: 
       113: expr: 
        114: call: 
         115: name: dev_dbg
         116: argument_list: 
          117: argument: 
           118: expr: 
            119: name: 
             120: name: chip
             121: operator: ->
             122: name: dev
          123: argument: 
           124: expr: 
            125: literal: "Another process owns this TPM\n"
      126: expr_stmt: 
       127: expr: 
        128: call: 
         129: name: put_device
         130: argument_list: 
          131: argument: 
           132: expr: 
            133: name: 
             134: name: chip
             135: operator: ->
             136: name: dev
      137: return: 
       138: expr: 
        139: operator: -
        140: name: EBUSY
  141: expr_stmt: 
   142: expr: 
    143: name: 
     144: name: chip
     145: operator: ->
     146: name: data_buffer
    147: operator: =
    148: call: 
     149: name: kzalloc
     150: argument_list: 
      151: argument: 
       152: expr: 
        153: name: TPM_BUFSIZE
      154: argument: 
       155: expr: 
        156: name: GFP_KERNEL
  157: if_stmt: 
   158: if: 
    159: condition: 
     160: expr: 
      161: name: 
       162: name: chip
       163: operator: ->
       164: name: data_buffer
      165: operator: ==
      166: name: NULL
    167: block: 
     168: block_content: 
      169: expr_stmt: 
       170: expr: 
        171: call: 
         172: name: clear_bit
         173: argument_list: 
          174: argument: 
           175: expr: 
            176: literal: 0
          177: argument: 
           178: expr: 
            179: operator: &
            180: name: 
             181: name: chip
             182: operator: ->
             183: name: is_open
      184: expr_stmt: 
       185: expr: 
        186: call: 
         187: name: put_device
         188: argument_list: 
          189: argument: 
           190: expr: 
            191: name: 
             192: name: chip
             193: operator: ->
             194: name: dev
      195: return: 
       196: expr: 
        197: operator: -
        198: name: ENOMEM
  199: expr_stmt: 
   200: expr: 
    201: call: 
     202: name: atomic_set
     203: argument_list: 
      204: argument: 
       205: expr: 
        206: operator: &
        207: name: 
         208: name: chip
         209: operator: ->
         210: name: data_pending
      211: argument: 
       212: expr: 
        213: literal: 0
  214: expr_stmt: 
   215: expr: 
    216: name: 
     217: name: file
     218: operator: ->
     219: name: private_data
    220: operator: =
    221: name: chip
  222: return: 
   223: expr: 
    224: literal: 0
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: minor
   6: init: 
    7: expr: 
     8: call: 
      9: name: iminor
      10: argument_list: 
       11: argument: 
        12: expr: 
         13: name: inode
 14: decl_stmt: 
  15: decl: 
   16: type: 
    17: name: 
     18: name: struct
     19: name: tpm_chip
    20: modifier: *
   21: name: chip
   22: init: 
    23: expr: 
     24: name: NULL
  25: decl: 
   26: type: 
    27: modifier: *
   28: name: pos
 29: expr_stmt: 
  30: expr: 
   31: call: 
    32: name: rcu_read_lock
    33: argument_list: 
 34: macro: 
  35: name: list_for_each_entry_rcu
  36: argument_list: 
   37: argument: 
   38: argument: 
   39: argument: 
 40: block: 
  41: block_content: 
   42: if_stmt: 
    43: if: 
     44: condition: 
      45: expr: 
       46: name: 
        47: name: pos
        48: operator: ->
        49: name: vendor
        50: operator: .
        51: name: miscdev
        52: operator: .
        53: name: minor
       54: operator: ==
       55: name: minor
     56: block: 
      57: block_content: 
       58: expr_stmt: 
        59: expr: 
         60: name: chip
         61: operator: =
         62: name: pos
       63: expr_stmt: 
        64: expr: 
         65: call: 
          66: name: get_device
          67: argument_list: 
           68: argument: 
            69: expr: 
             70: name: 
              71: name: chip
              72: operator: ->
              73: name: dev
       74: break: 
 75: expr_stmt: 
  76: expr: 
   77: call: 
    78: name: rcu_read_unlock
    79: argument_list: 
 80: if_stmt: 
  81: if: 
   82: condition: 
    83: expr: 
     84: operator: !
     85: name: chip
   86: block: 
    87: block_content: 
     88: return: 
      89: expr: 
       90: operator: -
       91: name: ENODEV
 92: if_stmt: 
  93: if: 
   94: condition: 
    95: expr: 
     96: call: 
      97: name: test_and_set_bit
      98: argument_list: 
       99: argument: 
        100: expr: 
         101: literal: 0
       102: argument: 
        103: expr: 
         104: operator: &
         105: name: 
          106: name: chip
          107: operator: ->
          108: name: is_open
   109: block: 
    110: block_content: 
     111: expr_stmt: 
      112: expr: 
       113: call: 
        114: name: dev_dbg
        115: argument_list: 
         116: argument: 
          117: expr: 
           118: name: 
            119: name: chip
            120: operator: ->
            121: name: dev
         122: argument: 
          123: expr: 
           124: literal: "Another process owns this TPM\n"
     125: expr_stmt: 
      126: expr: 
       127: call: 
        128: name: put_device
        129: argument_list: 
         130: argument: 
          131: expr: 
           132: name: 
            133: name: chip
            134: operator: ->
            135: name: dev
     136: return: 
      137: expr: 
       138: operator: -
       139: name: EBUSY
 140: expr_stmt: 
  141: expr: 
   142: name: 
    143: name: chip
    144: operator: ->
    145: name: data_buffer
   146: operator: =
   147: call: 
    148: name: kmalloc
    149: argument_list: 
     150: argument: 
      151: expr: 
       152: name: TPM_BUFSIZE
       153: operator: *
       154: sizeof: 
        155: argument_list: 
         156: argument: 
          157: expr: 
           158: name: u8
     159: argument: 
      160: expr: 
       161: name: GFP_KERNEL
 162: if_stmt: 
  163: if: 
   164: condition: 
    165: expr: 
     166: name: 
      167: name: chip
      168: operator: ->
      169: name: data_buffer
     170: operator: ==
     171: name: NULL
   172: block: 
    173: block_content: 
     174: expr_stmt: 
      175: expr: 
       176: call: 
        177: name: clear_bit
        178: argument_list: 
         179: argument: 
          180: expr: 
           181: literal: 0
         182: argument: 
          183: expr: 
           184: operator: &
           185: name: 
            186: name: chip
            187: operator: ->
            188: name: is_open
     189: expr_stmt: 
      190: expr: 
       191: call: 
        192: name: put_device
        193: argument_list: 
         194: argument: 
          195: expr: 
           196: name: 
            197: name: chip
            198: operator: ->
            199: name: dev
     200: return: 
      201: expr: 
       202: operator: -
       203: name: ENOMEM
 204: expr_stmt: 
  205: expr: 
   206: call: 
    207: name: atomic_set
    208: argument_list: 
     209: argument: 
      210: expr: 
       211: operator: &
       212: name: 
        213: name: chip
        214: operator: ->
        215: name: data_pending
     216: argument: 
      217: expr: 
       218: literal: 0
 219: expr_stmt: 
  220: expr: 
   221: name: 
    222: name: file
    223: operator: ->
    224: name: private_data
   225: operator: =
   226: name: chip
 227: return: 
  228: expr: 
   229: literal: 0

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: minor
   6: init: 
    7: expr: 
     8: call: 
      9: name: iminor
      10: argument_list: 
       11: argument: 
        12: expr: 
         13: name: inode
 14: decl_stmt: 
  15: decl: 
   16: type: 
    17: name: 
     18: name: struct
     19: name: tpm_chip
    20: modifier: *
   21: name: chip
   22: init: 
    23: expr: 
     24: name: NULL
  25: decl: 
   26: type: 
    27: modifier: *
   28: name: pos
 29: expr_stmt: 
  30: expr: 
   31: call: 
    32: name: rcu_read_lock
    33: argument_list: 
 34: macro: 
  35: name: list_for_each_entry_rcu
  36: argument_list: 
   37: argument: 
   38: argument: 
   39: argument: 
 40: block: 
  41: block_content: 
   42: if_stmt: 
    43: if: 
     44: condition: 
      45: expr: 
       46: name: 
        47: name: pos
        48: operator: ->
        49: name: vendor
        50: operator: .
        51: name: miscdev
        52: operator: .
        53: name: minor
       54: operator: ==
       55: name: minor
     56: block: 
      57: block_content: 
       58: expr_stmt: 
        59: expr: 
         60: name: chip
         61: operator: =
         62: name: pos
       63: expr_stmt: 
        64: expr: 
         65: call: 
          66: name: get_device
          67: argument_list: 
           68: argument: 
            69: expr: 
             70: name: 
              71: name: chip
              72: operator: ->
              73: name: dev
       74: break: 
 75: expr_stmt: 
  76: expr: 
   77: call: 
    78: name: rcu_read_unlock
    79: argument_list: 
 80: if_stmt: 
  81: if: 
   82: condition: 
    83: expr: 
     84: operator: !
     85: name: chip
   86: block: 
    87: block_content: 
     88: return: 
      89: expr: 
       90: operator: -
       91: name: ENODEV
 92: if_stmt: 
  93: if: 
   94: condition: 
    95: expr: 
     96: call: 
      97: name: test_and_set_bit
      98: argument_list: 
       99: argument: 
        100: expr: 
         101: literal: 0
       102: argument: 
        103: expr: 
         104: operator: &
         105: name: 
          106: name: chip
          107: operator: ->
          108: name: is_open
   109: block: 
    110: block_content: 
     111: expr_stmt: 
      112: expr: 
       113: call: 
        114: name: dev_dbg
        115: argument_list: 
         116: argument: 
          117: expr: 
           118: name: 
            119: name: chip
            120: operator: ->
            121: name: dev
         122: argument: 
          123: expr: 
           124: literal: "Another process owns this TPM\n"
     125: expr_stmt: 
      126: expr: 
       127: call: 
        128: name: put_device
        129: argument_list: 
         130: argument: 
          131: expr: 
           132: name: 
            133: name: chip
            134: operator: ->
            135: name: dev
     136: return: 
      137: expr: 
       138: operator: -
       139: name: EBUSY
 140: expr_stmt: 
  141: expr: 
   142: name: 
    143: name: chip
    144: operator: ->
    145: name: data_buffer
   146: operator: =
   147: call: 
    148: name: kzalloc
    149: argument_list: 
     150: argument: 
      151: expr: 
       152: name: TPM_BUFSIZE
     153: argument: 
      154: expr: 
       155: name: GFP_KERNEL
 156: if_stmt: 
  157: if: 
   158: condition: 
    159: expr: 
     160: name: 
      161: name: chip
      162: operator: ->
      163: name: data_buffer
     164: operator: ==
     165: name: NULL
   166: block: 
    167: block_content: 
     168: expr_stmt: 
      169: expr: 
       170: call: 
        171: name: clear_bit
        172: argument_list: 
         173: argument: 
          174: expr: 
           175: literal: 0
         176: argument: 
          177: expr: 
           178: operator: &
           179: name: 
            180: name: chip
            181: operator: ->
            182: name: is_open
     183: expr_stmt: 
      184: expr: 
       185: call: 
        186: name: put_device
        187: argument_list: 
         188: argument: 
          189: expr: 
           190: name: 
            191: name: chip
            192: operator: ->
            193: name: dev
     194: return: 
      195: expr: 
       196: operator: -
       197: name: ENOMEM
 198: expr_stmt: 
  199: expr: 
   200: call: 
    201: name: atomic_set
    202: argument_list: 
     203: argument: 
      204: expr: 
       205: operator: &
       206: name: 
        207: name: chip
        208: operator: ->
        209: name: data_pending
     210: argument: 
      211: expr: 
       212: literal: 0
 213: expr_stmt: 
  214: expr: 
   215: name: 
    216: name: file
    217: operator: ->
    218: name: private_data
   219: operator: =
   220: name: chip
 221: return: 
  222: expr: 
   223: literal: 0
=====
0: expr_stmt: 
 1: expr: 
  2: name: 
   3: name: chip
   4: operator: ->
   5: name: data_buffer
  6: operator: =
  7: call: 
   8: name: kmalloc
   9: argument_list: 
    10: argument: 
     11: expr: 
      12: name: TPM_BUFSIZE
      13: operator: *
      14: sizeof: 
       15: argument_list: 
        16: argument: 
         17: expr: 
          18: name: u8
    19: argument: 
     20: expr: 
      21: name: GFP_KERNEL

----------------------------------------
0: expr_stmt: 
 1: expr: 
  2: name: 
   3: name: chip
   4: operator: ->
   5: name: data_buffer
  6: operator: =
  7: call: 
   8: name: kzalloc
   9: argument_list: 
    10: argument: 
     11: expr: 
      12: name: TPM_BUFSIZE
    13: argument: 
     14: expr: 
      15: name: GFP_KERNEL
=====
0: expr: 
 1: name: 
  2: name: chip
  3: operator: ->
  4: name: data_buffer
 5: operator: =
 6: call: 
  7: name: kmalloc
  8: argument_list: 
   9: argument: 
    10: expr: 
     11: name: TPM_BUFSIZE
     12: operator: *
     13: sizeof: 
      14: argument_list: 
       15: argument: 
        16: expr: 
         17: name: u8
   18: argument: 
    19: expr: 
     20: name: GFP_KERNEL

----------------------------------------
0: expr: 
 1: name: 
  2: name: chip
  3: operator: ->
  4: name: data_buffer
 5: operator: =
 6: call: 
  7: name: kzalloc
  8: argument_list: 
   9: argument: 
    10: expr: 
     11: name: TPM_BUFSIZE
   12: argument: 
    13: expr: 
     14: name: GFP_KERNEL
=====
0: call: 
 1: name: kmalloc
 2: argument_list: 
  3: argument: 
   4: expr: 
    5: name: TPM_BUFSIZE
    6: operator: *
    7: sizeof: 
     8: argument_list: 
      9: argument: 
       10: expr: 
        11: name: u8
  12: argument: 
   13: expr: 
    14: name: GFP_KERNEL

----------------------------------------
0: call: 
 1: name: kzalloc
 2: argument_list: 
  3: argument: 
   4: expr: 
    5: name: TPM_BUFSIZE
  6: argument: 
   7: expr: 
    8: name: GFP_KERNEL
=====
0: name: kmalloc

----------------------------------------
0: name: kzalloc
=====
0: argument_list: 
 1: argument: 
  2: expr: 
   3: name: TPM_BUFSIZE
   4: operator: *
   5: sizeof: 
    6: argument_list: 
     7: argument: 
      8: expr: 
       9: name: u8
 10: argument: 
  11: expr: 
   12: name: GFP_KERNEL

----------------------------------------
0: argument_list: 
 1: argument: 
  2: expr: 
   3: name: TPM_BUFSIZE
 4: argument: 
  5: expr: 
   6: name: GFP_KERNEL
=====
0: argument: 
 1: expr: 
  2: name: TPM_BUFSIZE
  3: operator: *
  4: sizeof: 
   5: argument_list: 
    6: argument: 
     7: expr: 
      8: name: u8

----------------------------------------
0: argument: 
 1: expr: 
  2: name: TPM_BUFSIZE
=====
0: expr: 
 1: name: TPM_BUFSIZE
 2: operator: *
 3: sizeof: 
  4: argument_list: 
   5: argument: 
    6: expr: 
     7: name: u8

----------------------------------------
0: expr: 
 1: name: TPM_BUFSIZE
=====
