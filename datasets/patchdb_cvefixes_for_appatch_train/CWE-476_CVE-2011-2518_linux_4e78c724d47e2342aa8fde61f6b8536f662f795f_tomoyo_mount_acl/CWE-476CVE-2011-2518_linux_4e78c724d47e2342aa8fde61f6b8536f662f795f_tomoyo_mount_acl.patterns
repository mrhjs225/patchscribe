0: unit: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: int
  5: name: tomoyo_mount_acl
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: 
       11: name: struct
       12: name: tomoyo_request_info
      13: modifier: *
     14: name: r
   15: parameter: 
    16: decl: 
     17: type: 
      18: name: char
      19: modifier: *
     20: name: dev_name
   21: parameter: 
    22: decl: 
     23: type: 
      24: name: 
       25: name: struct
       26: name: path
      27: modifier: *
     28: name: dir
   29: parameter: 
    30: decl: 
     31: type: 
      32: name: char
      33: modifier: *
     34: name: type
   35: parameter: 
    36: decl: 
     37: type: 
      38: name: unsigned
      39: name: long
     40: name: flags
  41: block: 
   42: block_content: 
    43: decl_stmt: 
     44: decl: 
      45: type: 
       46: name: 
        47: name: struct
        48: name: path
      49: name: path
    50: decl_stmt: 
     51: decl: 
      52: type: 
       53: name: 
        54: name: struct
        55: name: file_system_type
       56: modifier: *
      57: name: fstype
      58: init: 
       59: expr: 
        60: name: NULL
    61: decl_stmt: 
     62: decl: 
      63: type: 
       64: specifier: const
       65: name: char
       66: modifier: *
      67: name: requested_type
      68: init: 
       69: expr: 
        70: name: NULL
    71: decl_stmt: 
     72: decl: 
      73: type: 
       74: specifier: const
       75: name: char
       76: modifier: *
      77: name: requested_dir_name
      78: init: 
       79: expr: 
        80: name: NULL
    81: decl_stmt: 
     82: decl: 
      83: type: 
       84: specifier: const
       85: name: char
       86: modifier: *
      87: name: requested_dev_name
      88: init: 
       89: expr: 
        90: name: NULL
    91: decl_stmt: 
     92: decl: 
      93: type: 
       94: name: 
        95: name: struct
        96: name: tomoyo_path_info
      97: name: rtype
    98: decl_stmt: 
     99: decl: 
      100: type: 
       101: name: 
        102: name: struct
        103: name: tomoyo_path_info
      104: name: rdev
    105: decl_stmt: 
     106: decl: 
      107: type: 
       108: name: 
        109: name: struct
        110: name: tomoyo_path_info
      111: name: rdir
    112: decl_stmt: 
     113: decl: 
      114: type: 
       115: name: int
      116: name: need_dev
      117: init: 
       118: expr: 
        119: literal: 0
    120: decl_stmt: 
     121: decl: 
      122: type: 
       123: name: int
      124: name: error
      125: init: 
       126: expr: 
        127: operator: -
        128: name: ENOMEM
    129: comment: /* Get fstype. */
    130: expr_stmt: 
     131: expr: 
      132: name: requested_type
      133: operator: =
      134: call: 
       135: name: tomoyo_encode
       136: argument_list: 
        137: argument: 
         138: expr: 
          139: name: type
    140: if_stmt: 
     141: if: 
      142: condition: 
       143: expr: 
        144: operator: !
        145: name: requested_type
      146: block: 
       147: block_content: 
        148: goto: 
         149: name: out
    150: expr_stmt: 
     151: expr: 
      152: name: 
       153: name: rtype
       154: operator: .
       155: name: name
      156: operator: =
      157: name: requested_type
    158: expr_stmt: 
     159: expr: 
      160: call: 
       161: name: tomoyo_fill_path_info
       162: argument_list: 
        163: argument: 
         164: expr: 
          165: operator: &
          166: name: rtype
    167: comment: /* Get mount point. */
    168: expr_stmt: 
     169: expr: 
      170: name: requested_dir_name
      171: operator: =
      172: call: 
       173: name: tomoyo_realpath_from_path
       174: argument_list: 
        175: argument: 
         176: expr: 
          177: name: dir
    178: if_stmt: 
     179: if: 
      180: condition: 
       181: expr: 
        182: operator: !
        183: name: requested_dir_name
      184: block: 
       185: block_content: 
        186: expr_stmt: 
         187: expr: 
          188: name: error
          189: operator: =
          190: operator: -
          191: name: ENOMEM
        192: goto: 
         193: name: out
    194: expr_stmt: 
     195: expr: 
      196: name: 
       197: name: rdir
       198: operator: .
       199: name: name
      200: operator: =
      201: name: requested_dir_name
    202: expr_stmt: 
     203: expr: 
      204: call: 
       205: name: tomoyo_fill_path_info
       206: argument_list: 
        207: argument: 
         208: expr: 
          209: operator: &
          210: name: rdir
    211: comment: /* Compare fs name. */
    212: if_stmt: 
     213: if: 
      214: condition: 
       215: expr: 
        216: operator: !
        217: call: 
         218: name: strcmp
         219: argument_list: 
          220: argument: 
           221: expr: 
            222: name: type
          223: argument: 
           224: expr: 
            225: name: TOMOYO_MOUNT_REMOUNT_KEYWORD
      226: block: 
       227: block_content: 
        228: comment: /* dev_name is ignored. */
     229: if: 
      230: condition: 
       231: expr: 
        232: operator: !
        233: call: 
         234: name: strcmp
         235: argument_list: 
          236: argument: 
           237: expr: 
            238: name: type
          239: argument: 
           240: expr: 
            241: name: TOMOYO_MOUNT_MAKE_UNBINDABLE_KEYWORD
        242: operator: ||
        243: operator: !
        244: call: 
         245: name: strcmp
         246: argument_list: 
          247: argument: 
           248: expr: 
            249: name: type
          250: argument: 
           251: expr: 
            252: name: TOMOYO_MOUNT_MAKE_PRIVATE_KEYWORD
        253: operator: ||
        254: operator: !
        255: call: 
         256: name: strcmp
         257: argument_list: 
          258: argument: 
           259: expr: 
            260: name: type
          261: argument: 
           262: expr: 
            263: name: TOMOYO_MOUNT_MAKE_SLAVE_KEYWORD
        264: operator: ||
        265: operator: !
        266: call: 
         267: name: strcmp
         268: argument_list: 
          269: argument: 
           270: expr: 
            271: name: type
          272: argument: 
           273: expr: 
            274: name: TOMOYO_MOUNT_MAKE_SHARED_KEYWORD
      275: block: 
       276: block_content: 
        277: comment: /* dev_name is ignored. */
     278: if: 
      279: condition: 
       280: expr: 
        281: operator: !
        282: call: 
         283: name: strcmp
         284: argument_list: 
          285: argument: 
           286: expr: 
            287: name: type
          288: argument: 
           289: expr: 
            290: name: TOMOYO_MOUNT_BIND_KEYWORD
        291: operator: ||
        292: operator: !
        293: call: 
         294: name: strcmp
         295: argument_list: 
          296: argument: 
           297: expr: 
            298: name: type
          299: argument: 
           300: expr: 
            301: name: TOMOYO_MOUNT_MOVE_KEYWORD
      302: block: 
       303: block_content: 
        304: expr_stmt: 
         305: expr: 
          306: name: need_dev
          307: operator: =
          308: operator: -
          309: literal: 1
        310: comment: /* dev_name is a directory */
     311: else: 
      312: block: 
       313: block_content: 
        314: expr_stmt: 
         315: expr: 
          316: name: fstype
          317: operator: =
          318: call: 
           319: name: get_fs_type
           320: argument_list: 
            321: argument: 
             322: expr: 
              323: name: type
        324: if_stmt: 
         325: if: 
          326: condition: 
           327: expr: 
            328: operator: !
            329: name: fstype
          330: block: 
           331: block_content: 
            332: expr_stmt: 
             333: expr: 
              334: name: error
              335: operator: =
              336: operator: -
              337: name: ENODEV
            338: goto: 
             339: name: out
        340: if_stmt: 
         341: if: 
          342: condition: 
           343: expr: 
            344: name: 
             345: name: fstype
             346: operator: ->
             347: name: fs_flags
            348: operator: &
            349: name: FS_REQUIRES_DEV
          350: block: 
           351: block_content: 
            352: comment: /* dev_name is a block device file. */
            353: expr_stmt: 
             354: expr: 
              355: name: need_dev
              356: operator: =
              357: literal: 1
    358: if_stmt: 
     359: if: 
      360: condition: 
       361: expr: 
        362: name: need_dev
      363: block: 
       364: block_content: 
        365: comment: /* Get mount point or device file. */
        366: if_stmt: 
         367: if: 
          368: condition: 
           369: expr: 
            370: call: 
             371: name: kern_path
             372: argument_list: 
              373: argument: 
               374: expr: 
                375: name: dev_name
              376: argument: 
               377: expr: 
                378: name: LOOKUP_FOLLOW
              379: argument: 
               380: expr: 
                381: operator: &
                382: name: path
          383: block: 
           384: block_content: 
            385: expr_stmt: 
             386: expr: 
              387: name: error
              388: operator: =
              389: operator: -
              390: name: ENOENT
            391: goto: 
             392: name: out
        393: expr_stmt: 
         394: expr: 
          395: name: requested_dev_name
          396: operator: =
          397: call: 
           398: name: tomoyo_realpath_from_path
           399: argument_list: 
            400: argument: 
             401: expr: 
              402: operator: &
              403: name: path
        404: expr_stmt: 
         405: expr: 
          406: call: 
           407: name: path_put
           408: argument_list: 
            409: argument: 
             410: expr: 
              411: operator: &
              412: name: path
        413: if_stmt: 
         414: if: 
          415: condition: 
           416: expr: 
            417: operator: !
            418: name: requested_dev_name
          419: block: 
           420: block_content: 
            421: expr_stmt: 
             422: expr: 
              423: name: error
              424: operator: =
              425: operator: -
              426: name: ENOENT
            427: goto: 
             428: name: out
     429: else: 
      430: block: 
       431: block_content: 
        432: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
        433: if_stmt: 
         434: if: 
          435: condition: 
           436: expr: 
            437: operator: !
            438: name: dev_name
          439: block: 
           440: block_content: 
            441: expr_stmt: 
             442: expr: 
              443: name: dev_name
              444: operator: =
              445: literal: "<NULL>"
        446: expr_stmt: 
         447: expr: 
          448: name: requested_dev_name
          449: operator: =
          450: call: 
           451: name: tomoyo_encode
           452: argument_list: 
            453: argument: 
             454: expr: 
              455: name: dev_name
        456: if_stmt: 
         457: if: 
          458: condition: 
           459: expr: 
            460: operator: !
            461: name: requested_dev_name
          462: block: 
           463: block_content: 
            464: expr_stmt: 
             465: expr: 
              466: name: error
              467: operator: =
              468: operator: -
              469: name: ENOMEM
            470: goto: 
             471: name: out
    472: expr_stmt: 
     473: expr: 
      474: name: 
       475: name: rdev
       476: operator: .
       477: name: name
      478: operator: =
      479: name: requested_dev_name
    480: expr_stmt: 
     481: expr: 
      482: call: 
       483: name: tomoyo_fill_path_info
       484: argument_list: 
        485: argument: 
         486: expr: 
          487: operator: &
          488: name: rdev
    489: expr_stmt: 
     490: expr: 
      491: name: 
       492: name: r
       493: operator: ->
       494: name: param_type
      495: operator: =
      496: name: TOMOYO_TYPE_MOUNT_ACL
    497: expr_stmt: 
     498: expr: 
      499: name: 
       500: name: r
       501: operator: ->
       502: name: param
       503: operator: .
       504: name: mount
       505: operator: .
       506: name: need_dev
      507: operator: =
      508: name: need_dev
    509: expr_stmt: 
     510: expr: 
      511: name: 
       512: name: r
       513: operator: ->
       514: name: param
       515: operator: .
       516: name: mount
       517: operator: .
       518: name: dev
      519: operator: =
      520: operator: &
      521: name: rdev
    522: expr_stmt: 
     523: expr: 
      524: name: 
       525: name: r
       526: operator: ->
       527: name: param
       528: operator: .
       529: name: mount
       530: operator: .
       531: name: dir
      532: operator: =
      533: operator: &
      534: name: rdir
    535: expr_stmt: 
     536: expr: 
      537: name: 
       538: name: r
       539: operator: ->
       540: name: param
       541: operator: .
       542: name: mount
       543: operator: .
       544: name: type
      545: operator: =
      546: operator: &
      547: name: rtype
    548: expr_stmt: 
     549: expr: 
      550: name: 
       551: name: r
       552: operator: ->
       553: name: param
       554: operator: .
       555: name: mount
       556: operator: .
       557: name: flags
      558: operator: =
      559: name: flags
    560: do: 
     561: block: 
      562: block_content: 
       563: expr_stmt: 
        564: expr: 
         565: call: 
          566: name: tomoyo_check_acl
          567: argument_list: 
           568: argument: 
            569: expr: 
             570: name: r
           571: argument: 
            572: expr: 
             573: name: tomoyo_check_mount_acl
       574: expr_stmt: 
        575: expr: 
         576: name: error
         577: operator: =
         578: call: 
          579: name: tomoyo_audit_mount_log
          580: argument_list: 
           581: argument: 
            582: expr: 
             583: name: r
     584: condition: 
      585: expr: 
       586: name: error
       587: operator: ==
       588: name: TOMOYO_RETRY_REQUEST
    589: label: 
     590: name: out
    591: expr_stmt: 
     592: expr: 
      593: call: 
       594: name: kfree
       595: argument_list: 
        596: argument: 
         597: expr: 
          598: name: requested_dev_name
    599: expr_stmt: 
     600: expr: 
      601: call: 
       602: name: kfree
       603: argument_list: 
        604: argument: 
         605: expr: 
          606: name: requested_dir_name
    607: if_stmt: 
     608: if: 
      609: condition: 
       610: expr: 
        611: name: fstype
      612: block: 
       613: block_content: 
        614: expr_stmt: 
         615: expr: 
          616: call: 
           617: name: put_filesystem
           618: argument_list: 
            619: argument: 
             620: expr: 
              621: name: fstype
    622: expr_stmt: 
     623: expr: 
      624: call: 
       625: name: kfree
       626: argument_list: 
        627: argument: 
         628: expr: 
          629: name: requested_type
    630: return: 
     631: expr: 
      632: name: error

----------------------------------------
0: unit: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: int
  5: name: tomoyo_mount_acl
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: 
       11: name: struct
       12: name: tomoyo_request_info
      13: modifier: *
     14: name: r
   15: parameter: 
    16: decl: 
     17: type: 
      18: name: char
      19: modifier: *
     20: name: dev_name
   21: parameter: 
    22: decl: 
     23: type: 
      24: name: 
       25: name: struct
       26: name: path
      27: modifier: *
     28: name: dir
   29: parameter: 
    30: decl: 
     31: type: 
      32: name: char
      33: modifier: *
     34: name: type
   35: parameter: 
    36: decl: 
     37: type: 
      38: name: unsigned
      39: name: long
     40: name: flags
  41: block: 
   42: block_content: 
    43: decl_stmt: 
     44: decl: 
      45: type: 
       46: name: 
        47: name: struct
        48: name: path
      49: name: path
    50: decl_stmt: 
     51: decl: 
      52: type: 
       53: name: 
        54: name: struct
        55: name: file_system_type
       56: modifier: *
      57: name: fstype
      58: init: 
       59: expr: 
        60: name: NULL
    61: decl_stmt: 
     62: decl: 
      63: type: 
       64: specifier: const
       65: name: char
       66: modifier: *
      67: name: requested_type
      68: init: 
       69: expr: 
        70: name: NULL
    71: decl_stmt: 
     72: decl: 
      73: type: 
       74: specifier: const
       75: name: char
       76: modifier: *
      77: name: requested_dir_name
      78: init: 
       79: expr: 
        80: name: NULL
    81: decl_stmt: 
     82: decl: 
      83: type: 
       84: specifier: const
       85: name: char
       86: modifier: *
      87: name: requested_dev_name
      88: init: 
       89: expr: 
        90: name: NULL
    91: decl_stmt: 
     92: decl: 
      93: type: 
       94: name: 
        95: name: struct
        96: name: tomoyo_path_info
      97: name: rtype
    98: decl_stmt: 
     99: decl: 
      100: type: 
       101: name: 
        102: name: struct
        103: name: tomoyo_path_info
      104: name: rdev
    105: decl_stmt: 
     106: decl: 
      107: type: 
       108: name: 
        109: name: struct
        110: name: tomoyo_path_info
      111: name: rdir
    112: decl_stmt: 
     113: decl: 
      114: type: 
       115: name: int
      116: name: need_dev
      117: init: 
       118: expr: 
        119: literal: 0
    120: decl_stmt: 
     121: decl: 
      122: type: 
       123: name: int
      124: name: error
      125: init: 
       126: expr: 
        127: operator: -
        128: name: ENOMEM
    129: comment: /* Get fstype. */
    130: expr_stmt: 
     131: expr: 
      132: name: requested_type
      133: operator: =
      134: call: 
       135: name: tomoyo_encode
       136: argument_list: 
        137: argument: 
         138: expr: 
          139: name: type
    140: if_stmt: 
     141: if: 
      142: condition: 
       143: expr: 
        144: operator: !
        145: name: requested_type
      146: block: 
       147: block_content: 
        148: goto: 
         149: name: out
    150: expr_stmt: 
     151: expr: 
      152: name: 
       153: name: rtype
       154: operator: .
       155: name: name
      156: operator: =
      157: name: requested_type
    158: expr_stmt: 
     159: expr: 
      160: call: 
       161: name: tomoyo_fill_path_info
       162: argument_list: 
        163: argument: 
         164: expr: 
          165: operator: &
          166: name: rtype
    167: comment: /* Get mount point. */
    168: expr_stmt: 
     169: expr: 
      170: name: requested_dir_name
      171: operator: =
      172: call: 
       173: name: tomoyo_realpath_from_path
       174: argument_list: 
        175: argument: 
         176: expr: 
          177: name: dir
    178: if_stmt: 
     179: if: 
      180: condition: 
       181: expr: 
        182: operator: !
        183: name: requested_dir_name
      184: block: 
       185: block_content: 
        186: expr_stmt: 
         187: expr: 
          188: name: error
          189: operator: =
          190: operator: -
          191: name: ENOMEM
        192: goto: 
         193: name: out
    194: expr_stmt: 
     195: expr: 
      196: name: 
       197: name: rdir
       198: operator: .
       199: name: name
      200: operator: =
      201: name: requested_dir_name
    202: expr_stmt: 
     203: expr: 
      204: call: 
       205: name: tomoyo_fill_path_info
       206: argument_list: 
        207: argument: 
         208: expr: 
          209: operator: &
          210: name: rdir
    211: comment: /* Compare fs name. */
    212: if_stmt: 
     213: if: 
      214: condition: 
       215: expr: 
        216: operator: !
        217: call: 
         218: name: strcmp
         219: argument_list: 
          220: argument: 
           221: expr: 
            222: name: type
          223: argument: 
           224: expr: 
            225: name: TOMOYO_MOUNT_REMOUNT_KEYWORD
      226: block: 
       227: block_content: 
        228: comment: /* dev_name is ignored. */
     229: if: 
      230: condition: 
       231: expr: 
        232: operator: !
        233: call: 
         234: name: strcmp
         235: argument_list: 
          236: argument: 
           237: expr: 
            238: name: type
          239: argument: 
           240: expr: 
            241: name: TOMOYO_MOUNT_MAKE_UNBINDABLE_KEYWORD
        242: operator: ||
        243: operator: !
        244: call: 
         245: name: strcmp
         246: argument_list: 
          247: argument: 
           248: expr: 
            249: name: type
          250: argument: 
           251: expr: 
            252: name: TOMOYO_MOUNT_MAKE_PRIVATE_KEYWORD
        253: operator: ||
        254: operator: !
        255: call: 
         256: name: strcmp
         257: argument_list: 
          258: argument: 
           259: expr: 
            260: name: type
          261: argument: 
           262: expr: 
            263: name: TOMOYO_MOUNT_MAKE_SLAVE_KEYWORD
        264: operator: ||
        265: operator: !
        266: call: 
         267: name: strcmp
         268: argument_list: 
          269: argument: 
           270: expr: 
            271: name: type
          272: argument: 
           273: expr: 
            274: name: TOMOYO_MOUNT_MAKE_SHARED_KEYWORD
      275: block: 
       276: block_content: 
        277: comment: /* dev_name is ignored. */
     278: if: 
      279: condition: 
       280: expr: 
        281: operator: !
        282: call: 
         283: name: strcmp
         284: argument_list: 
          285: argument: 
           286: expr: 
            287: name: type
          288: argument: 
           289: expr: 
            290: name: TOMOYO_MOUNT_BIND_KEYWORD
        291: operator: ||
        292: operator: !
        293: call: 
         294: name: strcmp
         295: argument_list: 
          296: argument: 
           297: expr: 
            298: name: type
          299: argument: 
           300: expr: 
            301: name: TOMOYO_MOUNT_MOVE_KEYWORD
      302: block: 
       303: block_content: 
        304: expr_stmt: 
         305: expr: 
          306: name: need_dev
          307: operator: =
          308: operator: -
          309: literal: 1
        310: comment: /* dev_name is a directory */
     311: else: 
      312: block: 
       313: block_content: 
        314: expr_stmt: 
         315: expr: 
          316: name: fstype
          317: operator: =
          318: call: 
           319: name: get_fs_type
           320: argument_list: 
            321: argument: 
             322: expr: 
              323: name: type
        324: if_stmt: 
         325: if: 
          326: condition: 
           327: expr: 
            328: operator: !
            329: name: fstype
          330: block: 
           331: block_content: 
            332: expr_stmt: 
             333: expr: 
              334: name: error
              335: operator: =
              336: operator: -
              337: name: ENODEV
            338: goto: 
             339: name: out
        340: if_stmt: 
         341: if: 
          342: condition: 
           343: expr: 
            344: name: 
             345: name: fstype
             346: operator: ->
             347: name: fs_flags
            348: operator: &
            349: name: FS_REQUIRES_DEV
          350: block: 
           351: block_content: 
            352: comment: /* dev_name is a block device file. */
            353: expr_stmt: 
             354: expr: 
              355: name: need_dev
              356: operator: =
              357: literal: 1
    358: if_stmt: 
     359: if: 
      360: condition: 
       361: expr: 
        362: name: need_dev
      363: block: 
       364: block_content: 
        365: comment: /* Get mount point or device file. */
        366: if_stmt: 
         367: if: 
          368: condition: 
           369: expr: 
            370: operator: !
            371: name: dev_name
            372: operator: ||
            373: call: 
             374: name: kern_path
             375: argument_list: 
              376: argument: 
               377: expr: 
                378: name: dev_name
              379: argument: 
               380: expr: 
                381: name: LOOKUP_FOLLOW
              382: argument: 
               383: expr: 
                384: operator: &
                385: name: path
          386: block: 
           387: block_content: 
            388: expr_stmt: 
             389: expr: 
              390: name: error
              391: operator: =
              392: operator: -
              393: name: ENOENT
            394: goto: 
             395: name: out
        396: expr_stmt: 
         397: expr: 
          398: name: requested_dev_name
          399: operator: =
          400: call: 
           401: name: tomoyo_realpath_from_path
           402: argument_list: 
            403: argument: 
             404: expr: 
              405: operator: &
              406: name: path
        407: expr_stmt: 
         408: expr: 
          409: call: 
           410: name: path_put
           411: argument_list: 
            412: argument: 
             413: expr: 
              414: operator: &
              415: name: path
        416: if_stmt: 
         417: if: 
          418: condition: 
           419: expr: 
            420: operator: !
            421: name: requested_dev_name
          422: block: 
           423: block_content: 
            424: expr_stmt: 
             425: expr: 
              426: name: error
              427: operator: =
              428: operator: -
              429: name: ENOENT
            430: goto: 
             431: name: out
     432: else: 
      433: block: 
       434: block_content: 
        435: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
        436: if_stmt: 
         437: if: 
          438: condition: 
           439: expr: 
            440: operator: !
            441: name: dev_name
          442: block: 
           443: block_content: 
            444: expr_stmt: 
             445: expr: 
              446: name: dev_name
              447: operator: =
              448: literal: "<NULL>"
        449: expr_stmt: 
         450: expr: 
          451: name: requested_dev_name
          452: operator: =
          453: call: 
           454: name: tomoyo_encode
           455: argument_list: 
            456: argument: 
             457: expr: 
              458: name: dev_name
        459: if_stmt: 
         460: if: 
          461: condition: 
           462: expr: 
            463: operator: !
            464: name: requested_dev_name
          465: block: 
           466: block_content: 
            467: expr_stmt: 
             468: expr: 
              469: name: error
              470: operator: =
              471: operator: -
              472: name: ENOMEM
            473: goto: 
             474: name: out
    475: expr_stmt: 
     476: expr: 
      477: name: 
       478: name: rdev
       479: operator: .
       480: name: name
      481: operator: =
      482: name: requested_dev_name
    483: expr_stmt: 
     484: expr: 
      485: call: 
       486: name: tomoyo_fill_path_info
       487: argument_list: 
        488: argument: 
         489: expr: 
          490: operator: &
          491: name: rdev
    492: expr_stmt: 
     493: expr: 
      494: name: 
       495: name: r
       496: operator: ->
       497: name: param_type
      498: operator: =
      499: name: TOMOYO_TYPE_MOUNT_ACL
    500: expr_stmt: 
     501: expr: 
      502: name: 
       503: name: r
       504: operator: ->
       505: name: param
       506: operator: .
       507: name: mount
       508: operator: .
       509: name: need_dev
      510: operator: =
      511: name: need_dev
    512: expr_stmt: 
     513: expr: 
      514: name: 
       515: name: r
       516: operator: ->
       517: name: param
       518: operator: .
       519: name: mount
       520: operator: .
       521: name: dev
      522: operator: =
      523: operator: &
      524: name: rdev
    525: expr_stmt: 
     526: expr: 
      527: name: 
       528: name: r
       529: operator: ->
       530: name: param
       531: operator: .
       532: name: mount
       533: operator: .
       534: name: dir
      535: operator: =
      536: operator: &
      537: name: rdir
    538: expr_stmt: 
     539: expr: 
      540: name: 
       541: name: r
       542: operator: ->
       543: name: param
       544: operator: .
       545: name: mount
       546: operator: .
       547: name: type
      548: operator: =
      549: operator: &
      550: name: rtype
    551: expr_stmt: 
     552: expr: 
      553: name: 
       554: name: r
       555: operator: ->
       556: name: param
       557: operator: .
       558: name: mount
       559: operator: .
       560: name: flags
      561: operator: =
      562: name: flags
    563: do: 
     564: block: 
      565: block_content: 
       566: expr_stmt: 
        567: expr: 
         568: call: 
          569: name: tomoyo_check_acl
          570: argument_list: 
           571: argument: 
            572: expr: 
             573: name: r
           574: argument: 
            575: expr: 
             576: name: tomoyo_check_mount_acl
       577: expr_stmt: 
        578: expr: 
         579: name: error
         580: operator: =
         581: call: 
          582: name: tomoyo_audit_mount_log
          583: argument_list: 
           584: argument: 
            585: expr: 
             586: name: r
     587: condition: 
      588: expr: 
       589: name: error
       590: operator: ==
       591: name: TOMOYO_RETRY_REQUEST
    592: label: 
     593: name: out
    594: expr_stmt: 
     595: expr: 
      596: call: 
       597: name: kfree
       598: argument_list: 
        599: argument: 
         600: expr: 
          601: name: requested_dev_name
    602: expr_stmt: 
     603: expr: 
      604: call: 
       605: name: kfree
       606: argument_list: 
        607: argument: 
         608: expr: 
          609: name: requested_dir_name
    610: if_stmt: 
     611: if: 
      612: condition: 
       613: expr: 
        614: name: fstype
      615: block: 
       616: block_content: 
        617: expr_stmt: 
         618: expr: 
          619: call: 
           620: name: put_filesystem
           621: argument_list: 
            622: argument: 
             623: expr: 
              624: name: fstype
    625: expr_stmt: 
     626: expr: 
      627: call: 
       628: name: kfree
       629: argument_list: 
        630: argument: 
         631: expr: 
          632: name: requested_type
    633: return: 
     634: expr: 
      635: name: error
=====
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: tomoyo_mount_acl
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: 
      10: name: struct
      11: name: tomoyo_request_info
     12: modifier: *
    13: name: r
  14: parameter: 
   15: decl: 
    16: type: 
     17: name: char
     18: modifier: *
    19: name: dev_name
  20: parameter: 
   21: decl: 
    22: type: 
     23: name: 
      24: name: struct
      25: name: path
     26: modifier: *
    27: name: dir
  28: parameter: 
   29: decl: 
    30: type: 
     31: name: char
     32: modifier: *
    33: name: type
  34: parameter: 
   35: decl: 
    36: type: 
     37: name: unsigned
     38: name: long
    39: name: flags
 40: block: 
  41: block_content: 
   42: decl_stmt: 
    43: decl: 
     44: type: 
      45: name: 
       46: name: struct
       47: name: path
     48: name: path
   49: decl_stmt: 
    50: decl: 
     51: type: 
      52: name: 
       53: name: struct
       54: name: file_system_type
      55: modifier: *
     56: name: fstype
     57: init: 
      58: expr: 
       59: name: NULL
   60: decl_stmt: 
    61: decl: 
     62: type: 
      63: specifier: const
      64: name: char
      65: modifier: *
     66: name: requested_type
     67: init: 
      68: expr: 
       69: name: NULL
   70: decl_stmt: 
    71: decl: 
     72: type: 
      73: specifier: const
      74: name: char
      75: modifier: *
     76: name: requested_dir_name
     77: init: 
      78: expr: 
       79: name: NULL
   80: decl_stmt: 
    81: decl: 
     82: type: 
      83: specifier: const
      84: name: char
      85: modifier: *
     86: name: requested_dev_name
     87: init: 
      88: expr: 
       89: name: NULL
   90: decl_stmt: 
    91: decl: 
     92: type: 
      93: name: 
       94: name: struct
       95: name: tomoyo_path_info
     96: name: rtype
   97: decl_stmt: 
    98: decl: 
     99: type: 
      100: name: 
       101: name: struct
       102: name: tomoyo_path_info
     103: name: rdev
   104: decl_stmt: 
    105: decl: 
     106: type: 
      107: name: 
       108: name: struct
       109: name: tomoyo_path_info
     110: name: rdir
   111: decl_stmt: 
    112: decl: 
     113: type: 
      114: name: int
     115: name: need_dev
     116: init: 
      117: expr: 
       118: literal: 0
   119: decl_stmt: 
    120: decl: 
     121: type: 
      122: name: int
     123: name: error
     124: init: 
      125: expr: 
       126: operator: -
       127: name: ENOMEM
   128: comment: /* Get fstype. */
   129: expr_stmt: 
    130: expr: 
     131: name: requested_type
     132: operator: =
     133: call: 
      134: name: tomoyo_encode
      135: argument_list: 
       136: argument: 
        137: expr: 
         138: name: type
   139: if_stmt: 
    140: if: 
     141: condition: 
      142: expr: 
       143: operator: !
       144: name: requested_type
     145: block: 
      146: block_content: 
       147: goto: 
        148: name: out
   149: expr_stmt: 
    150: expr: 
     151: name: 
      152: name: rtype
      153: operator: .
      154: name: name
     155: operator: =
     156: name: requested_type
   157: expr_stmt: 
    158: expr: 
     159: call: 
      160: name: tomoyo_fill_path_info
      161: argument_list: 
       162: argument: 
        163: expr: 
         164: operator: &
         165: name: rtype
   166: comment: /* Get mount point. */
   167: expr_stmt: 
    168: expr: 
     169: name: requested_dir_name
     170: operator: =
     171: call: 
      172: name: tomoyo_realpath_from_path
      173: argument_list: 
       174: argument: 
        175: expr: 
         176: name: dir
   177: if_stmt: 
    178: if: 
     179: condition: 
      180: expr: 
       181: operator: !
       182: name: requested_dir_name
     183: block: 
      184: block_content: 
       185: expr_stmt: 
        186: expr: 
         187: name: error
         188: operator: =
         189: operator: -
         190: name: ENOMEM
       191: goto: 
        192: name: out
   193: expr_stmt: 
    194: expr: 
     195: name: 
      196: name: rdir
      197: operator: .
      198: name: name
     199: operator: =
     200: name: requested_dir_name
   201: expr_stmt: 
    202: expr: 
     203: call: 
      204: name: tomoyo_fill_path_info
      205: argument_list: 
       206: argument: 
        207: expr: 
         208: operator: &
         209: name: rdir
   210: comment: /* Compare fs name. */
   211: if_stmt: 
    212: if: 
     213: condition: 
      214: expr: 
       215: operator: !
       216: call: 
        217: name: strcmp
        218: argument_list: 
         219: argument: 
          220: expr: 
           221: name: type
         222: argument: 
          223: expr: 
           224: name: TOMOYO_MOUNT_REMOUNT_KEYWORD
     225: block: 
      226: block_content: 
       227: comment: /* dev_name is ignored. */
    228: if: 
     229: condition: 
      230: expr: 
       231: operator: !
       232: call: 
        233: name: strcmp
        234: argument_list: 
         235: argument: 
          236: expr: 
           237: name: type
         238: argument: 
          239: expr: 
           240: name: TOMOYO_MOUNT_MAKE_UNBINDABLE_KEYWORD
       241: operator: ||
       242: operator: !
       243: call: 
        244: name: strcmp
        245: argument_list: 
         246: argument: 
          247: expr: 
           248: name: type
         249: argument: 
          250: expr: 
           251: name: TOMOYO_MOUNT_MAKE_PRIVATE_KEYWORD
       252: operator: ||
       253: operator: !
       254: call: 
        255: name: strcmp
        256: argument_list: 
         257: argument: 
          258: expr: 
           259: name: type
         260: argument: 
          261: expr: 
           262: name: TOMOYO_MOUNT_MAKE_SLAVE_KEYWORD
       263: operator: ||
       264: operator: !
       265: call: 
        266: name: strcmp
        267: argument_list: 
         268: argument: 
          269: expr: 
           270: name: type
         271: argument: 
          272: expr: 
           273: name: TOMOYO_MOUNT_MAKE_SHARED_KEYWORD
     274: block: 
      275: block_content: 
       276: comment: /* dev_name is ignored. */
    277: if: 
     278: condition: 
      279: expr: 
       280: operator: !
       281: call: 
        282: name: strcmp
        283: argument_list: 
         284: argument: 
          285: expr: 
           286: name: type
         287: argument: 
          288: expr: 
           289: name: TOMOYO_MOUNT_BIND_KEYWORD
       290: operator: ||
       291: operator: !
       292: call: 
        293: name: strcmp
        294: argument_list: 
         295: argument: 
          296: expr: 
           297: name: type
         298: argument: 
          299: expr: 
           300: name: TOMOYO_MOUNT_MOVE_KEYWORD
     301: block: 
      302: block_content: 
       303: expr_stmt: 
        304: expr: 
         305: name: need_dev
         306: operator: =
         307: operator: -
         308: literal: 1
       309: comment: /* dev_name is a directory */
    310: else: 
     311: block: 
      312: block_content: 
       313: expr_stmt: 
        314: expr: 
         315: name: fstype
         316: operator: =
         317: call: 
          318: name: get_fs_type
          319: argument_list: 
           320: argument: 
            321: expr: 
             322: name: type
       323: if_stmt: 
        324: if: 
         325: condition: 
          326: expr: 
           327: operator: !
           328: name: fstype
         329: block: 
          330: block_content: 
           331: expr_stmt: 
            332: expr: 
             333: name: error
             334: operator: =
             335: operator: -
             336: name: ENODEV
           337: goto: 
            338: name: out
       339: if_stmt: 
        340: if: 
         341: condition: 
          342: expr: 
           343: name: 
            344: name: fstype
            345: operator: ->
            346: name: fs_flags
           347: operator: &
           348: name: FS_REQUIRES_DEV
         349: block: 
          350: block_content: 
           351: comment: /* dev_name is a block device file. */
           352: expr_stmt: 
            353: expr: 
             354: name: need_dev
             355: operator: =
             356: literal: 1
   357: if_stmt: 
    358: if: 
     359: condition: 
      360: expr: 
       361: name: need_dev
     362: block: 
      363: block_content: 
       364: comment: /* Get mount point or device file. */
       365: if_stmt: 
        366: if: 
         367: condition: 
          368: expr: 
           369: call: 
            370: name: kern_path
            371: argument_list: 
             372: argument: 
              373: expr: 
               374: name: dev_name
             375: argument: 
              376: expr: 
               377: name: LOOKUP_FOLLOW
             378: argument: 
              379: expr: 
               380: operator: &
               381: name: path
         382: block: 
          383: block_content: 
           384: expr_stmt: 
            385: expr: 
             386: name: error
             387: operator: =
             388: operator: -
             389: name: ENOENT
           390: goto: 
            391: name: out
       392: expr_stmt: 
        393: expr: 
         394: name: requested_dev_name
         395: operator: =
         396: call: 
          397: name: tomoyo_realpath_from_path
          398: argument_list: 
           399: argument: 
            400: expr: 
             401: operator: &
             402: name: path
       403: expr_stmt: 
        404: expr: 
         405: call: 
          406: name: path_put
          407: argument_list: 
           408: argument: 
            409: expr: 
             410: operator: &
             411: name: path
       412: if_stmt: 
        413: if: 
         414: condition: 
          415: expr: 
           416: operator: !
           417: name: requested_dev_name
         418: block: 
          419: block_content: 
           420: expr_stmt: 
            421: expr: 
             422: name: error
             423: operator: =
             424: operator: -
             425: name: ENOENT
           426: goto: 
            427: name: out
    428: else: 
     429: block: 
      430: block_content: 
       431: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
       432: if_stmt: 
        433: if: 
         434: condition: 
          435: expr: 
           436: operator: !
           437: name: dev_name
         438: block: 
          439: block_content: 
           440: expr_stmt: 
            441: expr: 
             442: name: dev_name
             443: operator: =
             444: literal: "<NULL>"
       445: expr_stmt: 
        446: expr: 
         447: name: requested_dev_name
         448: operator: =
         449: call: 
          450: name: tomoyo_encode
          451: argument_list: 
           452: argument: 
            453: expr: 
             454: name: dev_name
       455: if_stmt: 
        456: if: 
         457: condition: 
          458: expr: 
           459: operator: !
           460: name: requested_dev_name
         461: block: 
          462: block_content: 
           463: expr_stmt: 
            464: expr: 
             465: name: error
             466: operator: =
             467: operator: -
             468: name: ENOMEM
           469: goto: 
            470: name: out
   471: expr_stmt: 
    472: expr: 
     473: name: 
      474: name: rdev
      475: operator: .
      476: name: name
     477: operator: =
     478: name: requested_dev_name
   479: expr_stmt: 
    480: expr: 
     481: call: 
      482: name: tomoyo_fill_path_info
      483: argument_list: 
       484: argument: 
        485: expr: 
         486: operator: &
         487: name: rdev
   488: expr_stmt: 
    489: expr: 
     490: name: 
      491: name: r
      492: operator: ->
      493: name: param_type
     494: operator: =
     495: name: TOMOYO_TYPE_MOUNT_ACL
   496: expr_stmt: 
    497: expr: 
     498: name: 
      499: name: r
      500: operator: ->
      501: name: param
      502: operator: .
      503: name: mount
      504: operator: .
      505: name: need_dev
     506: operator: =
     507: name: need_dev
   508: expr_stmt: 
    509: expr: 
     510: name: 
      511: name: r
      512: operator: ->
      513: name: param
      514: operator: .
      515: name: mount
      516: operator: .
      517: name: dev
     518: operator: =
     519: operator: &
     520: name: rdev
   521: expr_stmt: 
    522: expr: 
     523: name: 
      524: name: r
      525: operator: ->
      526: name: param
      527: operator: .
      528: name: mount
      529: operator: .
      530: name: dir
     531: operator: =
     532: operator: &
     533: name: rdir
   534: expr_stmt: 
    535: expr: 
     536: name: 
      537: name: r
      538: operator: ->
      539: name: param
      540: operator: .
      541: name: mount
      542: operator: .
      543: name: type
     544: operator: =
     545: operator: &
     546: name: rtype
   547: expr_stmt: 
    548: expr: 
     549: name: 
      550: name: r
      551: operator: ->
      552: name: param
      553: operator: .
      554: name: mount
      555: operator: .
      556: name: flags
     557: operator: =
     558: name: flags
   559: do: 
    560: block: 
     561: block_content: 
      562: expr_stmt: 
       563: expr: 
        564: call: 
         565: name: tomoyo_check_acl
         566: argument_list: 
          567: argument: 
           568: expr: 
            569: name: r
          570: argument: 
           571: expr: 
            572: name: tomoyo_check_mount_acl
      573: expr_stmt: 
       574: expr: 
        575: name: error
        576: operator: =
        577: call: 
         578: name: tomoyo_audit_mount_log
         579: argument_list: 
          580: argument: 
           581: expr: 
            582: name: r
    583: condition: 
     584: expr: 
      585: name: error
      586: operator: ==
      587: name: TOMOYO_RETRY_REQUEST
   588: label: 
    589: name: out
   590: expr_stmt: 
    591: expr: 
     592: call: 
      593: name: kfree
      594: argument_list: 
       595: argument: 
        596: expr: 
         597: name: requested_dev_name
   598: expr_stmt: 
    599: expr: 
     600: call: 
      601: name: kfree
      602: argument_list: 
       603: argument: 
        604: expr: 
         605: name: requested_dir_name
   606: if_stmt: 
    607: if: 
     608: condition: 
      609: expr: 
       610: name: fstype
     611: block: 
      612: block_content: 
       613: expr_stmt: 
        614: expr: 
         615: call: 
          616: name: put_filesystem
          617: argument_list: 
           618: argument: 
            619: expr: 
             620: name: fstype
   621: expr_stmt: 
    622: expr: 
     623: call: 
      624: name: kfree
      625: argument_list: 
       626: argument: 
        627: expr: 
         628: name: requested_type
   629: return: 
    630: expr: 
     631: name: error

----------------------------------------
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: tomoyo_mount_acl
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: 
      10: name: struct
      11: name: tomoyo_request_info
     12: modifier: *
    13: name: r
  14: parameter: 
   15: decl: 
    16: type: 
     17: name: char
     18: modifier: *
    19: name: dev_name
  20: parameter: 
   21: decl: 
    22: type: 
     23: name: 
      24: name: struct
      25: name: path
     26: modifier: *
    27: name: dir
  28: parameter: 
   29: decl: 
    30: type: 
     31: name: char
     32: modifier: *
    33: name: type
  34: parameter: 
   35: decl: 
    36: type: 
     37: name: unsigned
     38: name: long
    39: name: flags
 40: block: 
  41: block_content: 
   42: decl_stmt: 
    43: decl: 
     44: type: 
      45: name: 
       46: name: struct
       47: name: path
     48: name: path
   49: decl_stmt: 
    50: decl: 
     51: type: 
      52: name: 
       53: name: struct
       54: name: file_system_type
      55: modifier: *
     56: name: fstype
     57: init: 
      58: expr: 
       59: name: NULL
   60: decl_stmt: 
    61: decl: 
     62: type: 
      63: specifier: const
      64: name: char
      65: modifier: *
     66: name: requested_type
     67: init: 
      68: expr: 
       69: name: NULL
   70: decl_stmt: 
    71: decl: 
     72: type: 
      73: specifier: const
      74: name: char
      75: modifier: *
     76: name: requested_dir_name
     77: init: 
      78: expr: 
       79: name: NULL
   80: decl_stmt: 
    81: decl: 
     82: type: 
      83: specifier: const
      84: name: char
      85: modifier: *
     86: name: requested_dev_name
     87: init: 
      88: expr: 
       89: name: NULL
   90: decl_stmt: 
    91: decl: 
     92: type: 
      93: name: 
       94: name: struct
       95: name: tomoyo_path_info
     96: name: rtype
   97: decl_stmt: 
    98: decl: 
     99: type: 
      100: name: 
       101: name: struct
       102: name: tomoyo_path_info
     103: name: rdev
   104: decl_stmt: 
    105: decl: 
     106: type: 
      107: name: 
       108: name: struct
       109: name: tomoyo_path_info
     110: name: rdir
   111: decl_stmt: 
    112: decl: 
     113: type: 
      114: name: int
     115: name: need_dev
     116: init: 
      117: expr: 
       118: literal: 0
   119: decl_stmt: 
    120: decl: 
     121: type: 
      122: name: int
     123: name: error
     124: init: 
      125: expr: 
       126: operator: -
       127: name: ENOMEM
   128: comment: /* Get fstype. */
   129: expr_stmt: 
    130: expr: 
     131: name: requested_type
     132: operator: =
     133: call: 
      134: name: tomoyo_encode
      135: argument_list: 
       136: argument: 
        137: expr: 
         138: name: type
   139: if_stmt: 
    140: if: 
     141: condition: 
      142: expr: 
       143: operator: !
       144: name: requested_type
     145: block: 
      146: block_content: 
       147: goto: 
        148: name: out
   149: expr_stmt: 
    150: expr: 
     151: name: 
      152: name: rtype
      153: operator: .
      154: name: name
     155: operator: =
     156: name: requested_type
   157: expr_stmt: 
    158: expr: 
     159: call: 
      160: name: tomoyo_fill_path_info
      161: argument_list: 
       162: argument: 
        163: expr: 
         164: operator: &
         165: name: rtype
   166: comment: /* Get mount point. */
   167: expr_stmt: 
    168: expr: 
     169: name: requested_dir_name
     170: operator: =
     171: call: 
      172: name: tomoyo_realpath_from_path
      173: argument_list: 
       174: argument: 
        175: expr: 
         176: name: dir
   177: if_stmt: 
    178: if: 
     179: condition: 
      180: expr: 
       181: operator: !
       182: name: requested_dir_name
     183: block: 
      184: block_content: 
       185: expr_stmt: 
        186: expr: 
         187: name: error
         188: operator: =
         189: operator: -
         190: name: ENOMEM
       191: goto: 
        192: name: out
   193: expr_stmt: 
    194: expr: 
     195: name: 
      196: name: rdir
      197: operator: .
      198: name: name
     199: operator: =
     200: name: requested_dir_name
   201: expr_stmt: 
    202: expr: 
     203: call: 
      204: name: tomoyo_fill_path_info
      205: argument_list: 
       206: argument: 
        207: expr: 
         208: operator: &
         209: name: rdir
   210: comment: /* Compare fs name. */
   211: if_stmt: 
    212: if: 
     213: condition: 
      214: expr: 
       215: operator: !
       216: call: 
        217: name: strcmp
        218: argument_list: 
         219: argument: 
          220: expr: 
           221: name: type
         222: argument: 
          223: expr: 
           224: name: TOMOYO_MOUNT_REMOUNT_KEYWORD
     225: block: 
      226: block_content: 
       227: comment: /* dev_name is ignored. */
    228: if: 
     229: condition: 
      230: expr: 
       231: operator: !
       232: call: 
        233: name: strcmp
        234: argument_list: 
         235: argument: 
          236: expr: 
           237: name: type
         238: argument: 
          239: expr: 
           240: name: TOMOYO_MOUNT_MAKE_UNBINDABLE_KEYWORD
       241: operator: ||
       242: operator: !
       243: call: 
        244: name: strcmp
        245: argument_list: 
         246: argument: 
          247: expr: 
           248: name: type
         249: argument: 
          250: expr: 
           251: name: TOMOYO_MOUNT_MAKE_PRIVATE_KEYWORD
       252: operator: ||
       253: operator: !
       254: call: 
        255: name: strcmp
        256: argument_list: 
         257: argument: 
          258: expr: 
           259: name: type
         260: argument: 
          261: expr: 
           262: name: TOMOYO_MOUNT_MAKE_SLAVE_KEYWORD
       263: operator: ||
       264: operator: !
       265: call: 
        266: name: strcmp
        267: argument_list: 
         268: argument: 
          269: expr: 
           270: name: type
         271: argument: 
          272: expr: 
           273: name: TOMOYO_MOUNT_MAKE_SHARED_KEYWORD
     274: block: 
      275: block_content: 
       276: comment: /* dev_name is ignored. */
    277: if: 
     278: condition: 
      279: expr: 
       280: operator: !
       281: call: 
        282: name: strcmp
        283: argument_list: 
         284: argument: 
          285: expr: 
           286: name: type
         287: argument: 
          288: expr: 
           289: name: TOMOYO_MOUNT_BIND_KEYWORD
       290: operator: ||
       291: operator: !
       292: call: 
        293: name: strcmp
        294: argument_list: 
         295: argument: 
          296: expr: 
           297: name: type
         298: argument: 
          299: expr: 
           300: name: TOMOYO_MOUNT_MOVE_KEYWORD
     301: block: 
      302: block_content: 
       303: expr_stmt: 
        304: expr: 
         305: name: need_dev
         306: operator: =
         307: operator: -
         308: literal: 1
       309: comment: /* dev_name is a directory */
    310: else: 
     311: block: 
      312: block_content: 
       313: expr_stmt: 
        314: expr: 
         315: name: fstype
         316: operator: =
         317: call: 
          318: name: get_fs_type
          319: argument_list: 
           320: argument: 
            321: expr: 
             322: name: type
       323: if_stmt: 
        324: if: 
         325: condition: 
          326: expr: 
           327: operator: !
           328: name: fstype
         329: block: 
          330: block_content: 
           331: expr_stmt: 
            332: expr: 
             333: name: error
             334: operator: =
             335: operator: -
             336: name: ENODEV
           337: goto: 
            338: name: out
       339: if_stmt: 
        340: if: 
         341: condition: 
          342: expr: 
           343: name: 
            344: name: fstype
            345: operator: ->
            346: name: fs_flags
           347: operator: &
           348: name: FS_REQUIRES_DEV
         349: block: 
          350: block_content: 
           351: comment: /* dev_name is a block device file. */
           352: expr_stmt: 
            353: expr: 
             354: name: need_dev
             355: operator: =
             356: literal: 1
   357: if_stmt: 
    358: if: 
     359: condition: 
      360: expr: 
       361: name: need_dev
     362: block: 
      363: block_content: 
       364: comment: /* Get mount point or device file. */
       365: if_stmt: 
        366: if: 
         367: condition: 
          368: expr: 
           369: operator: !
           370: name: dev_name
           371: operator: ||
           372: call: 
            373: name: kern_path
            374: argument_list: 
             375: argument: 
              376: expr: 
               377: name: dev_name
             378: argument: 
              379: expr: 
               380: name: LOOKUP_FOLLOW
             381: argument: 
              382: expr: 
               383: operator: &
               384: name: path
         385: block: 
          386: block_content: 
           387: expr_stmt: 
            388: expr: 
             389: name: error
             390: operator: =
             391: operator: -
             392: name: ENOENT
           393: goto: 
            394: name: out
       395: expr_stmt: 
        396: expr: 
         397: name: requested_dev_name
         398: operator: =
         399: call: 
          400: name: tomoyo_realpath_from_path
          401: argument_list: 
           402: argument: 
            403: expr: 
             404: operator: &
             405: name: path
       406: expr_stmt: 
        407: expr: 
         408: call: 
          409: name: path_put
          410: argument_list: 
           411: argument: 
            412: expr: 
             413: operator: &
             414: name: path
       415: if_stmt: 
        416: if: 
         417: condition: 
          418: expr: 
           419: operator: !
           420: name: requested_dev_name
         421: block: 
          422: block_content: 
           423: expr_stmt: 
            424: expr: 
             425: name: error
             426: operator: =
             427: operator: -
             428: name: ENOENT
           429: goto: 
            430: name: out
    431: else: 
     432: block: 
      433: block_content: 
       434: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
       435: if_stmt: 
        436: if: 
         437: condition: 
          438: expr: 
           439: operator: !
           440: name: dev_name
         441: block: 
          442: block_content: 
           443: expr_stmt: 
            444: expr: 
             445: name: dev_name
             446: operator: =
             447: literal: "<NULL>"
       448: expr_stmt: 
        449: expr: 
         450: name: requested_dev_name
         451: operator: =
         452: call: 
          453: name: tomoyo_encode
          454: argument_list: 
           455: argument: 
            456: expr: 
             457: name: dev_name
       458: if_stmt: 
        459: if: 
         460: condition: 
          461: expr: 
           462: operator: !
           463: name: requested_dev_name
         464: block: 
          465: block_content: 
           466: expr_stmt: 
            467: expr: 
             468: name: error
             469: operator: =
             470: operator: -
             471: name: ENOMEM
           472: goto: 
            473: name: out
   474: expr_stmt: 
    475: expr: 
     476: name: 
      477: name: rdev
      478: operator: .
      479: name: name
     480: operator: =
     481: name: requested_dev_name
   482: expr_stmt: 
    483: expr: 
     484: call: 
      485: name: tomoyo_fill_path_info
      486: argument_list: 
       487: argument: 
        488: expr: 
         489: operator: &
         490: name: rdev
   491: expr_stmt: 
    492: expr: 
     493: name: 
      494: name: r
      495: operator: ->
      496: name: param_type
     497: operator: =
     498: name: TOMOYO_TYPE_MOUNT_ACL
   499: expr_stmt: 
    500: expr: 
     501: name: 
      502: name: r
      503: operator: ->
      504: name: param
      505: operator: .
      506: name: mount
      507: operator: .
      508: name: need_dev
     509: operator: =
     510: name: need_dev
   511: expr_stmt: 
    512: expr: 
     513: name: 
      514: name: r
      515: operator: ->
      516: name: param
      517: operator: .
      518: name: mount
      519: operator: .
      520: name: dev
     521: operator: =
     522: operator: &
     523: name: rdev
   524: expr_stmt: 
    525: expr: 
     526: name: 
      527: name: r
      528: operator: ->
      529: name: param
      530: operator: .
      531: name: mount
      532: operator: .
      533: name: dir
     534: operator: =
     535: operator: &
     536: name: rdir
   537: expr_stmt: 
    538: expr: 
     539: name: 
      540: name: r
      541: operator: ->
      542: name: param
      543: operator: .
      544: name: mount
      545: operator: .
      546: name: type
     547: operator: =
     548: operator: &
     549: name: rtype
   550: expr_stmt: 
    551: expr: 
     552: name: 
      553: name: r
      554: operator: ->
      555: name: param
      556: operator: .
      557: name: mount
      558: operator: .
      559: name: flags
     560: operator: =
     561: name: flags
   562: do: 
    563: block: 
     564: block_content: 
      565: expr_stmt: 
       566: expr: 
        567: call: 
         568: name: tomoyo_check_acl
         569: argument_list: 
          570: argument: 
           571: expr: 
            572: name: r
          573: argument: 
           574: expr: 
            575: name: tomoyo_check_mount_acl
      576: expr_stmt: 
       577: expr: 
        578: name: error
        579: operator: =
        580: call: 
         581: name: tomoyo_audit_mount_log
         582: argument_list: 
          583: argument: 
           584: expr: 
            585: name: r
    586: condition: 
     587: expr: 
      588: name: error
      589: operator: ==
      590: name: TOMOYO_RETRY_REQUEST
   591: label: 
    592: name: out
   593: expr_stmt: 
    594: expr: 
     595: call: 
      596: name: kfree
      597: argument_list: 
       598: argument: 
        599: expr: 
         600: name: requested_dev_name
   601: expr_stmt: 
    602: expr: 
     603: call: 
      604: name: kfree
      605: argument_list: 
       606: argument: 
        607: expr: 
         608: name: requested_dir_name
   609: if_stmt: 
    610: if: 
     611: condition: 
      612: expr: 
       613: name: fstype
     614: block: 
      615: block_content: 
       616: expr_stmt: 
        617: expr: 
         618: call: 
          619: name: put_filesystem
          620: argument_list: 
           621: argument: 
            622: expr: 
             623: name: fstype
   624: expr_stmt: 
    625: expr: 
     626: call: 
      627: name: kfree
      628: argument_list: 
       629: argument: 
        630: expr: 
         631: name: requested_type
   632: return: 
    633: expr: 
     634: name: error
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: path
    8: name: path
  9: decl_stmt: 
   10: decl: 
    11: type: 
     12: name: 
      13: name: struct
      14: name: file_system_type
     15: modifier: *
    16: name: fstype
    17: init: 
     18: expr: 
      19: name: NULL
  20: decl_stmt: 
   21: decl: 
    22: type: 
     23: specifier: const
     24: name: char
     25: modifier: *
    26: name: requested_type
    27: init: 
     28: expr: 
      29: name: NULL
  30: decl_stmt: 
   31: decl: 
    32: type: 
     33: specifier: const
     34: name: char
     35: modifier: *
    36: name: requested_dir_name
    37: init: 
     38: expr: 
      39: name: NULL
  40: decl_stmt: 
   41: decl: 
    42: type: 
     43: specifier: const
     44: name: char
     45: modifier: *
    46: name: requested_dev_name
    47: init: 
     48: expr: 
      49: name: NULL
  50: decl_stmt: 
   51: decl: 
    52: type: 
     53: name: 
      54: name: struct
      55: name: tomoyo_path_info
    56: name: rtype
  57: decl_stmt: 
   58: decl: 
    59: type: 
     60: name: 
      61: name: struct
      62: name: tomoyo_path_info
    63: name: rdev
  64: decl_stmt: 
   65: decl: 
    66: type: 
     67: name: 
      68: name: struct
      69: name: tomoyo_path_info
    70: name: rdir
  71: decl_stmt: 
   72: decl: 
    73: type: 
     74: name: int
    75: name: need_dev
    76: init: 
     77: expr: 
      78: literal: 0
  79: decl_stmt: 
   80: decl: 
    81: type: 
     82: name: int
    83: name: error
    84: init: 
     85: expr: 
      86: operator: -
      87: name: ENOMEM
  88: comment: /* Get fstype. */
  89: expr_stmt: 
   90: expr: 
    91: name: requested_type
    92: operator: =
    93: call: 
     94: name: tomoyo_encode
     95: argument_list: 
      96: argument: 
       97: expr: 
        98: name: type
  99: if_stmt: 
   100: if: 
    101: condition: 
     102: expr: 
      103: operator: !
      104: name: requested_type
    105: block: 
     106: block_content: 
      107: goto: 
       108: name: out
  109: expr_stmt: 
   110: expr: 
    111: name: 
     112: name: rtype
     113: operator: .
     114: name: name
    115: operator: =
    116: name: requested_type
  117: expr_stmt: 
   118: expr: 
    119: call: 
     120: name: tomoyo_fill_path_info
     121: argument_list: 
      122: argument: 
       123: expr: 
        124: operator: &
        125: name: rtype
  126: comment: /* Get mount point. */
  127: expr_stmt: 
   128: expr: 
    129: name: requested_dir_name
    130: operator: =
    131: call: 
     132: name: tomoyo_realpath_from_path
     133: argument_list: 
      134: argument: 
       135: expr: 
        136: name: dir
  137: if_stmt: 
   138: if: 
    139: condition: 
     140: expr: 
      141: operator: !
      142: name: requested_dir_name
    143: block: 
     144: block_content: 
      145: expr_stmt: 
       146: expr: 
        147: name: error
        148: operator: =
        149: operator: -
        150: name: ENOMEM
      151: goto: 
       152: name: out
  153: expr_stmt: 
   154: expr: 
    155: name: 
     156: name: rdir
     157: operator: .
     158: name: name
    159: operator: =
    160: name: requested_dir_name
  161: expr_stmt: 
   162: expr: 
    163: call: 
     164: name: tomoyo_fill_path_info
     165: argument_list: 
      166: argument: 
       167: expr: 
        168: operator: &
        169: name: rdir
  170: comment: /* Compare fs name. */
  171: if_stmt: 
   172: if: 
    173: condition: 
     174: expr: 
      175: operator: !
      176: call: 
       177: name: strcmp
       178: argument_list: 
        179: argument: 
         180: expr: 
          181: name: type
        182: argument: 
         183: expr: 
          184: name: TOMOYO_MOUNT_REMOUNT_KEYWORD
    185: block: 
     186: block_content: 
      187: comment: /* dev_name is ignored. */
   188: if: 
    189: condition: 
     190: expr: 
      191: operator: !
      192: call: 
       193: name: strcmp
       194: argument_list: 
        195: argument: 
         196: expr: 
          197: name: type
        198: argument: 
         199: expr: 
          200: name: TOMOYO_MOUNT_MAKE_UNBINDABLE_KEYWORD
      201: operator: ||
      202: operator: !
      203: call: 
       204: name: strcmp
       205: argument_list: 
        206: argument: 
         207: expr: 
          208: name: type
        209: argument: 
         210: expr: 
          211: name: TOMOYO_MOUNT_MAKE_PRIVATE_KEYWORD
      212: operator: ||
      213: operator: !
      214: call: 
       215: name: strcmp
       216: argument_list: 
        217: argument: 
         218: expr: 
          219: name: type
        220: argument: 
         221: expr: 
          222: name: TOMOYO_MOUNT_MAKE_SLAVE_KEYWORD
      223: operator: ||
      224: operator: !
      225: call: 
       226: name: strcmp
       227: argument_list: 
        228: argument: 
         229: expr: 
          230: name: type
        231: argument: 
         232: expr: 
          233: name: TOMOYO_MOUNT_MAKE_SHARED_KEYWORD
    234: block: 
     235: block_content: 
      236: comment: /* dev_name is ignored. */
   237: if: 
    238: condition: 
     239: expr: 
      240: operator: !
      241: call: 
       242: name: strcmp
       243: argument_list: 
        244: argument: 
         245: expr: 
          246: name: type
        247: argument: 
         248: expr: 
          249: name: TOMOYO_MOUNT_BIND_KEYWORD
      250: operator: ||
      251: operator: !
      252: call: 
       253: name: strcmp
       254: argument_list: 
        255: argument: 
         256: expr: 
          257: name: type
        258: argument: 
         259: expr: 
          260: name: TOMOYO_MOUNT_MOVE_KEYWORD
    261: block: 
     262: block_content: 
      263: expr_stmt: 
       264: expr: 
        265: name: need_dev
        266: operator: =
        267: operator: -
        268: literal: 1
      269: comment: /* dev_name is a directory */
   270: else: 
    271: block: 
     272: block_content: 
      273: expr_stmt: 
       274: expr: 
        275: name: fstype
        276: operator: =
        277: call: 
         278: name: get_fs_type
         279: argument_list: 
          280: argument: 
           281: expr: 
            282: name: type
      283: if_stmt: 
       284: if: 
        285: condition: 
         286: expr: 
          287: operator: !
          288: name: fstype
        289: block: 
         290: block_content: 
          291: expr_stmt: 
           292: expr: 
            293: name: error
            294: operator: =
            295: operator: -
            296: name: ENODEV
          297: goto: 
           298: name: out
      299: if_stmt: 
       300: if: 
        301: condition: 
         302: expr: 
          303: name: 
           304: name: fstype
           305: operator: ->
           306: name: fs_flags
          307: operator: &
          308: name: FS_REQUIRES_DEV
        309: block: 
         310: block_content: 
          311: comment: /* dev_name is a block device file. */
          312: expr_stmt: 
           313: expr: 
            314: name: need_dev
            315: operator: =
            316: literal: 1
  317: if_stmt: 
   318: if: 
    319: condition: 
     320: expr: 
      321: name: need_dev
    322: block: 
     323: block_content: 
      324: comment: /* Get mount point or device file. */
      325: if_stmt: 
       326: if: 
        327: condition: 
         328: expr: 
          329: call: 
           330: name: kern_path
           331: argument_list: 
            332: argument: 
             333: expr: 
              334: name: dev_name
            335: argument: 
             336: expr: 
              337: name: LOOKUP_FOLLOW
            338: argument: 
             339: expr: 
              340: operator: &
              341: name: path
        342: block: 
         343: block_content: 
          344: expr_stmt: 
           345: expr: 
            346: name: error
            347: operator: =
            348: operator: -
            349: name: ENOENT
          350: goto: 
           351: name: out
      352: expr_stmt: 
       353: expr: 
        354: name: requested_dev_name
        355: operator: =
        356: call: 
         357: name: tomoyo_realpath_from_path
         358: argument_list: 
          359: argument: 
           360: expr: 
            361: operator: &
            362: name: path
      363: expr_stmt: 
       364: expr: 
        365: call: 
         366: name: path_put
         367: argument_list: 
          368: argument: 
           369: expr: 
            370: operator: &
            371: name: path
      372: if_stmt: 
       373: if: 
        374: condition: 
         375: expr: 
          376: operator: !
          377: name: requested_dev_name
        378: block: 
         379: block_content: 
          380: expr_stmt: 
           381: expr: 
            382: name: error
            383: operator: =
            384: operator: -
            385: name: ENOENT
          386: goto: 
           387: name: out
   388: else: 
    389: block: 
     390: block_content: 
      391: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
      392: if_stmt: 
       393: if: 
        394: condition: 
         395: expr: 
          396: operator: !
          397: name: dev_name
        398: block: 
         399: block_content: 
          400: expr_stmt: 
           401: expr: 
            402: name: dev_name
            403: operator: =
            404: literal: "<NULL>"
      405: expr_stmt: 
       406: expr: 
        407: name: requested_dev_name
        408: operator: =
        409: call: 
         410: name: tomoyo_encode
         411: argument_list: 
          412: argument: 
           413: expr: 
            414: name: dev_name
      415: if_stmt: 
       416: if: 
        417: condition: 
         418: expr: 
          419: operator: !
          420: name: requested_dev_name
        421: block: 
         422: block_content: 
          423: expr_stmt: 
           424: expr: 
            425: name: error
            426: operator: =
            427: operator: -
            428: name: ENOMEM
          429: goto: 
           430: name: out
  431: expr_stmt: 
   432: expr: 
    433: name: 
     434: name: rdev
     435: operator: .
     436: name: name
    437: operator: =
    438: name: requested_dev_name
  439: expr_stmt: 
   440: expr: 
    441: call: 
     442: name: tomoyo_fill_path_info
     443: argument_list: 
      444: argument: 
       445: expr: 
        446: operator: &
        447: name: rdev
  448: expr_stmt: 
   449: expr: 
    450: name: 
     451: name: r
     452: operator: ->
     453: name: param_type
    454: operator: =
    455: name: TOMOYO_TYPE_MOUNT_ACL
  456: expr_stmt: 
   457: expr: 
    458: name: 
     459: name: r
     460: operator: ->
     461: name: param
     462: operator: .
     463: name: mount
     464: operator: .
     465: name: need_dev
    466: operator: =
    467: name: need_dev
  468: expr_stmt: 
   469: expr: 
    470: name: 
     471: name: r
     472: operator: ->
     473: name: param
     474: operator: .
     475: name: mount
     476: operator: .
     477: name: dev
    478: operator: =
    479: operator: &
    480: name: rdev
  481: expr_stmt: 
   482: expr: 
    483: name: 
     484: name: r
     485: operator: ->
     486: name: param
     487: operator: .
     488: name: mount
     489: operator: .
     490: name: dir
    491: operator: =
    492: operator: &
    493: name: rdir
  494: expr_stmt: 
   495: expr: 
    496: name: 
     497: name: r
     498: operator: ->
     499: name: param
     500: operator: .
     501: name: mount
     502: operator: .
     503: name: type
    504: operator: =
    505: operator: &
    506: name: rtype
  507: expr_stmt: 
   508: expr: 
    509: name: 
     510: name: r
     511: operator: ->
     512: name: param
     513: operator: .
     514: name: mount
     515: operator: .
     516: name: flags
    517: operator: =
    518: name: flags
  519: do: 
   520: block: 
    521: block_content: 
     522: expr_stmt: 
      523: expr: 
       524: call: 
        525: name: tomoyo_check_acl
        526: argument_list: 
         527: argument: 
          528: expr: 
           529: name: r
         530: argument: 
          531: expr: 
           532: name: tomoyo_check_mount_acl
     533: expr_stmt: 
      534: expr: 
       535: name: error
       536: operator: =
       537: call: 
        538: name: tomoyo_audit_mount_log
        539: argument_list: 
         540: argument: 
          541: expr: 
           542: name: r
   543: condition: 
    544: expr: 
     545: name: error
     546: operator: ==
     547: name: TOMOYO_RETRY_REQUEST
  548: label: 
   549: name: out
  550: expr_stmt: 
   551: expr: 
    552: call: 
     553: name: kfree
     554: argument_list: 
      555: argument: 
       556: expr: 
        557: name: requested_dev_name
  558: expr_stmt: 
   559: expr: 
    560: call: 
     561: name: kfree
     562: argument_list: 
      563: argument: 
       564: expr: 
        565: name: requested_dir_name
  566: if_stmt: 
   567: if: 
    568: condition: 
     569: expr: 
      570: name: fstype
    571: block: 
     572: block_content: 
      573: expr_stmt: 
       574: expr: 
        575: call: 
         576: name: put_filesystem
         577: argument_list: 
          578: argument: 
           579: expr: 
            580: name: fstype
  581: expr_stmt: 
   582: expr: 
    583: call: 
     584: name: kfree
     585: argument_list: 
      586: argument: 
       587: expr: 
        588: name: requested_type
  589: return: 
   590: expr: 
    591: name: error

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: 
      6: name: struct
      7: name: path
    8: name: path
  9: decl_stmt: 
   10: decl: 
    11: type: 
     12: name: 
      13: name: struct
      14: name: file_system_type
     15: modifier: *
    16: name: fstype
    17: init: 
     18: expr: 
      19: name: NULL
  20: decl_stmt: 
   21: decl: 
    22: type: 
     23: specifier: const
     24: name: char
     25: modifier: *
    26: name: requested_type
    27: init: 
     28: expr: 
      29: name: NULL
  30: decl_stmt: 
   31: decl: 
    32: type: 
     33: specifier: const
     34: name: char
     35: modifier: *
    36: name: requested_dir_name
    37: init: 
     38: expr: 
      39: name: NULL
  40: decl_stmt: 
   41: decl: 
    42: type: 
     43: specifier: const
     44: name: char
     45: modifier: *
    46: name: requested_dev_name
    47: init: 
     48: expr: 
      49: name: NULL
  50: decl_stmt: 
   51: decl: 
    52: type: 
     53: name: 
      54: name: struct
      55: name: tomoyo_path_info
    56: name: rtype
  57: decl_stmt: 
   58: decl: 
    59: type: 
     60: name: 
      61: name: struct
      62: name: tomoyo_path_info
    63: name: rdev
  64: decl_stmt: 
   65: decl: 
    66: type: 
     67: name: 
      68: name: struct
      69: name: tomoyo_path_info
    70: name: rdir
  71: decl_stmt: 
   72: decl: 
    73: type: 
     74: name: int
    75: name: need_dev
    76: init: 
     77: expr: 
      78: literal: 0
  79: decl_stmt: 
   80: decl: 
    81: type: 
     82: name: int
    83: name: error
    84: init: 
     85: expr: 
      86: operator: -
      87: name: ENOMEM
  88: comment: /* Get fstype. */
  89: expr_stmt: 
   90: expr: 
    91: name: requested_type
    92: operator: =
    93: call: 
     94: name: tomoyo_encode
     95: argument_list: 
      96: argument: 
       97: expr: 
        98: name: type
  99: if_stmt: 
   100: if: 
    101: condition: 
     102: expr: 
      103: operator: !
      104: name: requested_type
    105: block: 
     106: block_content: 
      107: goto: 
       108: name: out
  109: expr_stmt: 
   110: expr: 
    111: name: 
     112: name: rtype
     113: operator: .
     114: name: name
    115: operator: =
    116: name: requested_type
  117: expr_stmt: 
   118: expr: 
    119: call: 
     120: name: tomoyo_fill_path_info
     121: argument_list: 
      122: argument: 
       123: expr: 
        124: operator: &
        125: name: rtype
  126: comment: /* Get mount point. */
  127: expr_stmt: 
   128: expr: 
    129: name: requested_dir_name
    130: operator: =
    131: call: 
     132: name: tomoyo_realpath_from_path
     133: argument_list: 
      134: argument: 
       135: expr: 
        136: name: dir
  137: if_stmt: 
   138: if: 
    139: condition: 
     140: expr: 
      141: operator: !
      142: name: requested_dir_name
    143: block: 
     144: block_content: 
      145: expr_stmt: 
       146: expr: 
        147: name: error
        148: operator: =
        149: operator: -
        150: name: ENOMEM
      151: goto: 
       152: name: out
  153: expr_stmt: 
   154: expr: 
    155: name: 
     156: name: rdir
     157: operator: .
     158: name: name
    159: operator: =
    160: name: requested_dir_name
  161: expr_stmt: 
   162: expr: 
    163: call: 
     164: name: tomoyo_fill_path_info
     165: argument_list: 
      166: argument: 
       167: expr: 
        168: operator: &
        169: name: rdir
  170: comment: /* Compare fs name. */
  171: if_stmt: 
   172: if: 
    173: condition: 
     174: expr: 
      175: operator: !
      176: call: 
       177: name: strcmp
       178: argument_list: 
        179: argument: 
         180: expr: 
          181: name: type
        182: argument: 
         183: expr: 
          184: name: TOMOYO_MOUNT_REMOUNT_KEYWORD
    185: block: 
     186: block_content: 
      187: comment: /* dev_name is ignored. */
   188: if: 
    189: condition: 
     190: expr: 
      191: operator: !
      192: call: 
       193: name: strcmp
       194: argument_list: 
        195: argument: 
         196: expr: 
          197: name: type
        198: argument: 
         199: expr: 
          200: name: TOMOYO_MOUNT_MAKE_UNBINDABLE_KEYWORD
      201: operator: ||
      202: operator: !
      203: call: 
       204: name: strcmp
       205: argument_list: 
        206: argument: 
         207: expr: 
          208: name: type
        209: argument: 
         210: expr: 
          211: name: TOMOYO_MOUNT_MAKE_PRIVATE_KEYWORD
      212: operator: ||
      213: operator: !
      214: call: 
       215: name: strcmp
       216: argument_list: 
        217: argument: 
         218: expr: 
          219: name: type
        220: argument: 
         221: expr: 
          222: name: TOMOYO_MOUNT_MAKE_SLAVE_KEYWORD
      223: operator: ||
      224: operator: !
      225: call: 
       226: name: strcmp
       227: argument_list: 
        228: argument: 
         229: expr: 
          230: name: type
        231: argument: 
         232: expr: 
          233: name: TOMOYO_MOUNT_MAKE_SHARED_KEYWORD
    234: block: 
     235: block_content: 
      236: comment: /* dev_name is ignored. */
   237: if: 
    238: condition: 
     239: expr: 
      240: operator: !
      241: call: 
       242: name: strcmp
       243: argument_list: 
        244: argument: 
         245: expr: 
          246: name: type
        247: argument: 
         248: expr: 
          249: name: TOMOYO_MOUNT_BIND_KEYWORD
      250: operator: ||
      251: operator: !
      252: call: 
       253: name: strcmp
       254: argument_list: 
        255: argument: 
         256: expr: 
          257: name: type
        258: argument: 
         259: expr: 
          260: name: TOMOYO_MOUNT_MOVE_KEYWORD
    261: block: 
     262: block_content: 
      263: expr_stmt: 
       264: expr: 
        265: name: need_dev
        266: operator: =
        267: operator: -
        268: literal: 1
      269: comment: /* dev_name is a directory */
   270: else: 
    271: block: 
     272: block_content: 
      273: expr_stmt: 
       274: expr: 
        275: name: fstype
        276: operator: =
        277: call: 
         278: name: get_fs_type
         279: argument_list: 
          280: argument: 
           281: expr: 
            282: name: type
      283: if_stmt: 
       284: if: 
        285: condition: 
         286: expr: 
          287: operator: !
          288: name: fstype
        289: block: 
         290: block_content: 
          291: expr_stmt: 
           292: expr: 
            293: name: error
            294: operator: =
            295: operator: -
            296: name: ENODEV
          297: goto: 
           298: name: out
      299: if_stmt: 
       300: if: 
        301: condition: 
         302: expr: 
          303: name: 
           304: name: fstype
           305: operator: ->
           306: name: fs_flags
          307: operator: &
          308: name: FS_REQUIRES_DEV
        309: block: 
         310: block_content: 
          311: comment: /* dev_name is a block device file. */
          312: expr_stmt: 
           313: expr: 
            314: name: need_dev
            315: operator: =
            316: literal: 1
  317: if_stmt: 
   318: if: 
    319: condition: 
     320: expr: 
      321: name: need_dev
    322: block: 
     323: block_content: 
      324: comment: /* Get mount point or device file. */
      325: if_stmt: 
       326: if: 
        327: condition: 
         328: expr: 
          329: operator: !
          330: name: dev_name
          331: operator: ||
          332: call: 
           333: name: kern_path
           334: argument_list: 
            335: argument: 
             336: expr: 
              337: name: dev_name
            338: argument: 
             339: expr: 
              340: name: LOOKUP_FOLLOW
            341: argument: 
             342: expr: 
              343: operator: &
              344: name: path
        345: block: 
         346: block_content: 
          347: expr_stmt: 
           348: expr: 
            349: name: error
            350: operator: =
            351: operator: -
            352: name: ENOENT
          353: goto: 
           354: name: out
      355: expr_stmt: 
       356: expr: 
        357: name: requested_dev_name
        358: operator: =
        359: call: 
         360: name: tomoyo_realpath_from_path
         361: argument_list: 
          362: argument: 
           363: expr: 
            364: operator: &
            365: name: path
      366: expr_stmt: 
       367: expr: 
        368: call: 
         369: name: path_put
         370: argument_list: 
          371: argument: 
           372: expr: 
            373: operator: &
            374: name: path
      375: if_stmt: 
       376: if: 
        377: condition: 
         378: expr: 
          379: operator: !
          380: name: requested_dev_name
        381: block: 
         382: block_content: 
          383: expr_stmt: 
           384: expr: 
            385: name: error
            386: operator: =
            387: operator: -
            388: name: ENOENT
          389: goto: 
           390: name: out
   391: else: 
    392: block: 
     393: block_content: 
      394: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
      395: if_stmt: 
       396: if: 
        397: condition: 
         398: expr: 
          399: operator: !
          400: name: dev_name
        401: block: 
         402: block_content: 
          403: expr_stmt: 
           404: expr: 
            405: name: dev_name
            406: operator: =
            407: literal: "<NULL>"
      408: expr_stmt: 
       409: expr: 
        410: name: requested_dev_name
        411: operator: =
        412: call: 
         413: name: tomoyo_encode
         414: argument_list: 
          415: argument: 
           416: expr: 
            417: name: dev_name
      418: if_stmt: 
       419: if: 
        420: condition: 
         421: expr: 
          422: operator: !
          423: name: requested_dev_name
        424: block: 
         425: block_content: 
          426: expr_stmt: 
           427: expr: 
            428: name: error
            429: operator: =
            430: operator: -
            431: name: ENOMEM
          432: goto: 
           433: name: out
  434: expr_stmt: 
   435: expr: 
    436: name: 
     437: name: rdev
     438: operator: .
     439: name: name
    440: operator: =
    441: name: requested_dev_name
  442: expr_stmt: 
   443: expr: 
    444: call: 
     445: name: tomoyo_fill_path_info
     446: argument_list: 
      447: argument: 
       448: expr: 
        449: operator: &
        450: name: rdev
  451: expr_stmt: 
   452: expr: 
    453: name: 
     454: name: r
     455: operator: ->
     456: name: param_type
    457: operator: =
    458: name: TOMOYO_TYPE_MOUNT_ACL
  459: expr_stmt: 
   460: expr: 
    461: name: 
     462: name: r
     463: operator: ->
     464: name: param
     465: operator: .
     466: name: mount
     467: operator: .
     468: name: need_dev
    469: operator: =
    470: name: need_dev
  471: expr_stmt: 
   472: expr: 
    473: name: 
     474: name: r
     475: operator: ->
     476: name: param
     477: operator: .
     478: name: mount
     479: operator: .
     480: name: dev
    481: operator: =
    482: operator: &
    483: name: rdev
  484: expr_stmt: 
   485: expr: 
    486: name: 
     487: name: r
     488: operator: ->
     489: name: param
     490: operator: .
     491: name: mount
     492: operator: .
     493: name: dir
    494: operator: =
    495: operator: &
    496: name: rdir
  497: expr_stmt: 
   498: expr: 
    499: name: 
     500: name: r
     501: operator: ->
     502: name: param
     503: operator: .
     504: name: mount
     505: operator: .
     506: name: type
    507: operator: =
    508: operator: &
    509: name: rtype
  510: expr_stmt: 
   511: expr: 
    512: name: 
     513: name: r
     514: operator: ->
     515: name: param
     516: operator: .
     517: name: mount
     518: operator: .
     519: name: flags
    520: operator: =
    521: name: flags
  522: do: 
   523: block: 
    524: block_content: 
     525: expr_stmt: 
      526: expr: 
       527: call: 
        528: name: tomoyo_check_acl
        529: argument_list: 
         530: argument: 
          531: expr: 
           532: name: r
         533: argument: 
          534: expr: 
           535: name: tomoyo_check_mount_acl
     536: expr_stmt: 
      537: expr: 
       538: name: error
       539: operator: =
       540: call: 
        541: name: tomoyo_audit_mount_log
        542: argument_list: 
         543: argument: 
          544: expr: 
           545: name: r
   546: condition: 
    547: expr: 
     548: name: error
     549: operator: ==
     550: name: TOMOYO_RETRY_REQUEST
  551: label: 
   552: name: out
  553: expr_stmt: 
   554: expr: 
    555: call: 
     556: name: kfree
     557: argument_list: 
      558: argument: 
       559: expr: 
        560: name: requested_dev_name
  561: expr_stmt: 
   562: expr: 
    563: call: 
     564: name: kfree
     565: argument_list: 
      566: argument: 
       567: expr: 
        568: name: requested_dir_name
  569: if_stmt: 
   570: if: 
    571: condition: 
     572: expr: 
      573: name: fstype
    574: block: 
     575: block_content: 
      576: expr_stmt: 
       577: expr: 
        578: call: 
         579: name: put_filesystem
         580: argument_list: 
          581: argument: 
           582: expr: 
            583: name: fstype
  584: expr_stmt: 
   585: expr: 
    586: call: 
     587: name: kfree
     588: argument_list: 
      589: argument: 
       590: expr: 
        591: name: requested_type
  592: return: 
   593: expr: 
    594: name: error
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: path
   7: name: path
 8: decl_stmt: 
  9: decl: 
   10: type: 
    11: name: 
     12: name: struct
     13: name: file_system_type
    14: modifier: *
   15: name: fstype
   16: init: 
    17: expr: 
     18: name: NULL
 19: decl_stmt: 
  20: decl: 
   21: type: 
    22: specifier: const
    23: name: char
    24: modifier: *
   25: name: requested_type
   26: init: 
    27: expr: 
     28: name: NULL
 29: decl_stmt: 
  30: decl: 
   31: type: 
    32: specifier: const
    33: name: char
    34: modifier: *
   35: name: requested_dir_name
   36: init: 
    37: expr: 
     38: name: NULL
 39: decl_stmt: 
  40: decl: 
   41: type: 
    42: specifier: const
    43: name: char
    44: modifier: *
   45: name: requested_dev_name
   46: init: 
    47: expr: 
     48: name: NULL
 49: decl_stmt: 
  50: decl: 
   51: type: 
    52: name: 
     53: name: struct
     54: name: tomoyo_path_info
   55: name: rtype
 56: decl_stmt: 
  57: decl: 
   58: type: 
    59: name: 
     60: name: struct
     61: name: tomoyo_path_info
   62: name: rdev
 63: decl_stmt: 
  64: decl: 
   65: type: 
    66: name: 
     67: name: struct
     68: name: tomoyo_path_info
   69: name: rdir
 70: decl_stmt: 
  71: decl: 
   72: type: 
    73: name: int
   74: name: need_dev
   75: init: 
    76: expr: 
     77: literal: 0
 78: decl_stmt: 
  79: decl: 
   80: type: 
    81: name: int
   82: name: error
   83: init: 
    84: expr: 
     85: operator: -
     86: name: ENOMEM
 87: comment: /* Get fstype. */
 88: expr_stmt: 
  89: expr: 
   90: name: requested_type
   91: operator: =
   92: call: 
    93: name: tomoyo_encode
    94: argument_list: 
     95: argument: 
      96: expr: 
       97: name: type
 98: if_stmt: 
  99: if: 
   100: condition: 
    101: expr: 
     102: operator: !
     103: name: requested_type
   104: block: 
    105: block_content: 
     106: goto: 
      107: name: out
 108: expr_stmt: 
  109: expr: 
   110: name: 
    111: name: rtype
    112: operator: .
    113: name: name
   114: operator: =
   115: name: requested_type
 116: expr_stmt: 
  117: expr: 
   118: call: 
    119: name: tomoyo_fill_path_info
    120: argument_list: 
     121: argument: 
      122: expr: 
       123: operator: &
       124: name: rtype
 125: comment: /* Get mount point. */
 126: expr_stmt: 
  127: expr: 
   128: name: requested_dir_name
   129: operator: =
   130: call: 
    131: name: tomoyo_realpath_from_path
    132: argument_list: 
     133: argument: 
      134: expr: 
       135: name: dir
 136: if_stmt: 
  137: if: 
   138: condition: 
    139: expr: 
     140: operator: !
     141: name: requested_dir_name
   142: block: 
    143: block_content: 
     144: expr_stmt: 
      145: expr: 
       146: name: error
       147: operator: =
       148: operator: -
       149: name: ENOMEM
     150: goto: 
      151: name: out
 152: expr_stmt: 
  153: expr: 
   154: name: 
    155: name: rdir
    156: operator: .
    157: name: name
   158: operator: =
   159: name: requested_dir_name
 160: expr_stmt: 
  161: expr: 
   162: call: 
    163: name: tomoyo_fill_path_info
    164: argument_list: 
     165: argument: 
      166: expr: 
       167: operator: &
       168: name: rdir
 169: comment: /* Compare fs name. */
 170: if_stmt: 
  171: if: 
   172: condition: 
    173: expr: 
     174: operator: !
     175: call: 
      176: name: strcmp
      177: argument_list: 
       178: argument: 
        179: expr: 
         180: name: type
       181: argument: 
        182: expr: 
         183: name: TOMOYO_MOUNT_REMOUNT_KEYWORD
   184: block: 
    185: block_content: 
     186: comment: /* dev_name is ignored. */
  187: if: 
   188: condition: 
    189: expr: 
     190: operator: !
     191: call: 
      192: name: strcmp
      193: argument_list: 
       194: argument: 
        195: expr: 
         196: name: type
       197: argument: 
        198: expr: 
         199: name: TOMOYO_MOUNT_MAKE_UNBINDABLE_KEYWORD
     200: operator: ||
     201: operator: !
     202: call: 
      203: name: strcmp
      204: argument_list: 
       205: argument: 
        206: expr: 
         207: name: type
       208: argument: 
        209: expr: 
         210: name: TOMOYO_MOUNT_MAKE_PRIVATE_KEYWORD
     211: operator: ||
     212: operator: !
     213: call: 
      214: name: strcmp
      215: argument_list: 
       216: argument: 
        217: expr: 
         218: name: type
       219: argument: 
        220: expr: 
         221: name: TOMOYO_MOUNT_MAKE_SLAVE_KEYWORD
     222: operator: ||
     223: operator: !
     224: call: 
      225: name: strcmp
      226: argument_list: 
       227: argument: 
        228: expr: 
         229: name: type
       230: argument: 
        231: expr: 
         232: name: TOMOYO_MOUNT_MAKE_SHARED_KEYWORD
   233: block: 
    234: block_content: 
     235: comment: /* dev_name is ignored. */
  236: if: 
   237: condition: 
    238: expr: 
     239: operator: !
     240: call: 
      241: name: strcmp
      242: argument_list: 
       243: argument: 
        244: expr: 
         245: name: type
       246: argument: 
        247: expr: 
         248: name: TOMOYO_MOUNT_BIND_KEYWORD
     249: operator: ||
     250: operator: !
     251: call: 
      252: name: strcmp
      253: argument_list: 
       254: argument: 
        255: expr: 
         256: name: type
       257: argument: 
        258: expr: 
         259: name: TOMOYO_MOUNT_MOVE_KEYWORD
   260: block: 
    261: block_content: 
     262: expr_stmt: 
      263: expr: 
       264: name: need_dev
       265: operator: =
       266: operator: -
       267: literal: 1
     268: comment: /* dev_name is a directory */
  269: else: 
   270: block: 
    271: block_content: 
     272: expr_stmt: 
      273: expr: 
       274: name: fstype
       275: operator: =
       276: call: 
        277: name: get_fs_type
        278: argument_list: 
         279: argument: 
          280: expr: 
           281: name: type
     282: if_stmt: 
      283: if: 
       284: condition: 
        285: expr: 
         286: operator: !
         287: name: fstype
       288: block: 
        289: block_content: 
         290: expr_stmt: 
          291: expr: 
           292: name: error
           293: operator: =
           294: operator: -
           295: name: ENODEV
         296: goto: 
          297: name: out
     298: if_stmt: 
      299: if: 
       300: condition: 
        301: expr: 
         302: name: 
          303: name: fstype
          304: operator: ->
          305: name: fs_flags
         306: operator: &
         307: name: FS_REQUIRES_DEV
       308: block: 
        309: block_content: 
         310: comment: /* dev_name is a block device file. */
         311: expr_stmt: 
          312: expr: 
           313: name: need_dev
           314: operator: =
           315: literal: 1
 316: if_stmt: 
  317: if: 
   318: condition: 
    319: expr: 
     320: name: need_dev
   321: block: 
    322: block_content: 
     323: comment: /* Get mount point or device file. */
     324: if_stmt: 
      325: if: 
       326: condition: 
        327: expr: 
         328: call: 
          329: name: kern_path
          330: argument_list: 
           331: argument: 
            332: expr: 
             333: name: dev_name
           334: argument: 
            335: expr: 
             336: name: LOOKUP_FOLLOW
           337: argument: 
            338: expr: 
             339: operator: &
             340: name: path
       341: block: 
        342: block_content: 
         343: expr_stmt: 
          344: expr: 
           345: name: error
           346: operator: =
           347: operator: -
           348: name: ENOENT
         349: goto: 
          350: name: out
     351: expr_stmt: 
      352: expr: 
       353: name: requested_dev_name
       354: operator: =
       355: call: 
        356: name: tomoyo_realpath_from_path
        357: argument_list: 
         358: argument: 
          359: expr: 
           360: operator: &
           361: name: path
     362: expr_stmt: 
      363: expr: 
       364: call: 
        365: name: path_put
        366: argument_list: 
         367: argument: 
          368: expr: 
           369: operator: &
           370: name: path
     371: if_stmt: 
      372: if: 
       373: condition: 
        374: expr: 
         375: operator: !
         376: name: requested_dev_name
       377: block: 
        378: block_content: 
         379: expr_stmt: 
          380: expr: 
           381: name: error
           382: operator: =
           383: operator: -
           384: name: ENOENT
         385: goto: 
          386: name: out
  387: else: 
   388: block: 
    389: block_content: 
     390: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
     391: if_stmt: 
      392: if: 
       393: condition: 
        394: expr: 
         395: operator: !
         396: name: dev_name
       397: block: 
        398: block_content: 
         399: expr_stmt: 
          400: expr: 
           401: name: dev_name
           402: operator: =
           403: literal: "<NULL>"
     404: expr_stmt: 
      405: expr: 
       406: name: requested_dev_name
       407: operator: =
       408: call: 
        409: name: tomoyo_encode
        410: argument_list: 
         411: argument: 
          412: expr: 
           413: name: dev_name
     414: if_stmt: 
      415: if: 
       416: condition: 
        417: expr: 
         418: operator: !
         419: name: requested_dev_name
       420: block: 
        421: block_content: 
         422: expr_stmt: 
          423: expr: 
           424: name: error
           425: operator: =
           426: operator: -
           427: name: ENOMEM
         428: goto: 
          429: name: out
 430: expr_stmt: 
  431: expr: 
   432: name: 
    433: name: rdev
    434: operator: .
    435: name: name
   436: operator: =
   437: name: requested_dev_name
 438: expr_stmt: 
  439: expr: 
   440: call: 
    441: name: tomoyo_fill_path_info
    442: argument_list: 
     443: argument: 
      444: expr: 
       445: operator: &
       446: name: rdev
 447: expr_stmt: 
  448: expr: 
   449: name: 
    450: name: r
    451: operator: ->
    452: name: param_type
   453: operator: =
   454: name: TOMOYO_TYPE_MOUNT_ACL
 455: expr_stmt: 
  456: expr: 
   457: name: 
    458: name: r
    459: operator: ->
    460: name: param
    461: operator: .
    462: name: mount
    463: operator: .
    464: name: need_dev
   465: operator: =
   466: name: need_dev
 467: expr_stmt: 
  468: expr: 
   469: name: 
    470: name: r
    471: operator: ->
    472: name: param
    473: operator: .
    474: name: mount
    475: operator: .
    476: name: dev
   477: operator: =
   478: operator: &
   479: name: rdev
 480: expr_stmt: 
  481: expr: 
   482: name: 
    483: name: r
    484: operator: ->
    485: name: param
    486: operator: .
    487: name: mount
    488: operator: .
    489: name: dir
   490: operator: =
   491: operator: &
   492: name: rdir
 493: expr_stmt: 
  494: expr: 
   495: name: 
    496: name: r
    497: operator: ->
    498: name: param
    499: operator: .
    500: name: mount
    501: operator: .
    502: name: type
   503: operator: =
   504: operator: &
   505: name: rtype
 506: expr_stmt: 
  507: expr: 
   508: name: 
    509: name: r
    510: operator: ->
    511: name: param
    512: operator: .
    513: name: mount
    514: operator: .
    515: name: flags
   516: operator: =
   517: name: flags
 518: do: 
  519: block: 
   520: block_content: 
    521: expr_stmt: 
     522: expr: 
      523: call: 
       524: name: tomoyo_check_acl
       525: argument_list: 
        526: argument: 
         527: expr: 
          528: name: r
        529: argument: 
         530: expr: 
          531: name: tomoyo_check_mount_acl
    532: expr_stmt: 
     533: expr: 
      534: name: error
      535: operator: =
      536: call: 
       537: name: tomoyo_audit_mount_log
       538: argument_list: 
        539: argument: 
         540: expr: 
          541: name: r
  542: condition: 
   543: expr: 
    544: name: error
    545: operator: ==
    546: name: TOMOYO_RETRY_REQUEST
 547: label: 
  548: name: out
 549: expr_stmt: 
  550: expr: 
   551: call: 
    552: name: kfree
    553: argument_list: 
     554: argument: 
      555: expr: 
       556: name: requested_dev_name
 557: expr_stmt: 
  558: expr: 
   559: call: 
    560: name: kfree
    561: argument_list: 
     562: argument: 
      563: expr: 
       564: name: requested_dir_name
 565: if_stmt: 
  566: if: 
   567: condition: 
    568: expr: 
     569: name: fstype
   570: block: 
    571: block_content: 
     572: expr_stmt: 
      573: expr: 
       574: call: 
        575: name: put_filesystem
        576: argument_list: 
         577: argument: 
          578: expr: 
           579: name: fstype
 580: expr_stmt: 
  581: expr: 
   582: call: 
    583: name: kfree
    584: argument_list: 
     585: argument: 
      586: expr: 
       587: name: requested_type
 588: return: 
  589: expr: 
   590: name: error

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: 
     5: name: struct
     6: name: path
   7: name: path
 8: decl_stmt: 
  9: decl: 
   10: type: 
    11: name: 
     12: name: struct
     13: name: file_system_type
    14: modifier: *
   15: name: fstype
   16: init: 
    17: expr: 
     18: name: NULL
 19: decl_stmt: 
  20: decl: 
   21: type: 
    22: specifier: const
    23: name: char
    24: modifier: *
   25: name: requested_type
   26: init: 
    27: expr: 
     28: name: NULL
 29: decl_stmt: 
  30: decl: 
   31: type: 
    32: specifier: const
    33: name: char
    34: modifier: *
   35: name: requested_dir_name
   36: init: 
    37: expr: 
     38: name: NULL
 39: decl_stmt: 
  40: decl: 
   41: type: 
    42: specifier: const
    43: name: char
    44: modifier: *
   45: name: requested_dev_name
   46: init: 
    47: expr: 
     48: name: NULL
 49: decl_stmt: 
  50: decl: 
   51: type: 
    52: name: 
     53: name: struct
     54: name: tomoyo_path_info
   55: name: rtype
 56: decl_stmt: 
  57: decl: 
   58: type: 
    59: name: 
     60: name: struct
     61: name: tomoyo_path_info
   62: name: rdev
 63: decl_stmt: 
  64: decl: 
   65: type: 
    66: name: 
     67: name: struct
     68: name: tomoyo_path_info
   69: name: rdir
 70: decl_stmt: 
  71: decl: 
   72: type: 
    73: name: int
   74: name: need_dev
   75: init: 
    76: expr: 
     77: literal: 0
 78: decl_stmt: 
  79: decl: 
   80: type: 
    81: name: int
   82: name: error
   83: init: 
    84: expr: 
     85: operator: -
     86: name: ENOMEM
 87: comment: /* Get fstype. */
 88: expr_stmt: 
  89: expr: 
   90: name: requested_type
   91: operator: =
   92: call: 
    93: name: tomoyo_encode
    94: argument_list: 
     95: argument: 
      96: expr: 
       97: name: type
 98: if_stmt: 
  99: if: 
   100: condition: 
    101: expr: 
     102: operator: !
     103: name: requested_type
   104: block: 
    105: block_content: 
     106: goto: 
      107: name: out
 108: expr_stmt: 
  109: expr: 
   110: name: 
    111: name: rtype
    112: operator: .
    113: name: name
   114: operator: =
   115: name: requested_type
 116: expr_stmt: 
  117: expr: 
   118: call: 
    119: name: tomoyo_fill_path_info
    120: argument_list: 
     121: argument: 
      122: expr: 
       123: operator: &
       124: name: rtype
 125: comment: /* Get mount point. */
 126: expr_stmt: 
  127: expr: 
   128: name: requested_dir_name
   129: operator: =
   130: call: 
    131: name: tomoyo_realpath_from_path
    132: argument_list: 
     133: argument: 
      134: expr: 
       135: name: dir
 136: if_stmt: 
  137: if: 
   138: condition: 
    139: expr: 
     140: operator: !
     141: name: requested_dir_name
   142: block: 
    143: block_content: 
     144: expr_stmt: 
      145: expr: 
       146: name: error
       147: operator: =
       148: operator: -
       149: name: ENOMEM
     150: goto: 
      151: name: out
 152: expr_stmt: 
  153: expr: 
   154: name: 
    155: name: rdir
    156: operator: .
    157: name: name
   158: operator: =
   159: name: requested_dir_name
 160: expr_stmt: 
  161: expr: 
   162: call: 
    163: name: tomoyo_fill_path_info
    164: argument_list: 
     165: argument: 
      166: expr: 
       167: operator: &
       168: name: rdir
 169: comment: /* Compare fs name. */
 170: if_stmt: 
  171: if: 
   172: condition: 
    173: expr: 
     174: operator: !
     175: call: 
      176: name: strcmp
      177: argument_list: 
       178: argument: 
        179: expr: 
         180: name: type
       181: argument: 
        182: expr: 
         183: name: TOMOYO_MOUNT_REMOUNT_KEYWORD
   184: block: 
    185: block_content: 
     186: comment: /* dev_name is ignored. */
  187: if: 
   188: condition: 
    189: expr: 
     190: operator: !
     191: call: 
      192: name: strcmp
      193: argument_list: 
       194: argument: 
        195: expr: 
         196: name: type
       197: argument: 
        198: expr: 
         199: name: TOMOYO_MOUNT_MAKE_UNBINDABLE_KEYWORD
     200: operator: ||
     201: operator: !
     202: call: 
      203: name: strcmp
      204: argument_list: 
       205: argument: 
        206: expr: 
         207: name: type
       208: argument: 
        209: expr: 
         210: name: TOMOYO_MOUNT_MAKE_PRIVATE_KEYWORD
     211: operator: ||
     212: operator: !
     213: call: 
      214: name: strcmp
      215: argument_list: 
       216: argument: 
        217: expr: 
         218: name: type
       219: argument: 
        220: expr: 
         221: name: TOMOYO_MOUNT_MAKE_SLAVE_KEYWORD
     222: operator: ||
     223: operator: !
     224: call: 
      225: name: strcmp
      226: argument_list: 
       227: argument: 
        228: expr: 
         229: name: type
       230: argument: 
        231: expr: 
         232: name: TOMOYO_MOUNT_MAKE_SHARED_KEYWORD
   233: block: 
    234: block_content: 
     235: comment: /* dev_name is ignored. */
  236: if: 
   237: condition: 
    238: expr: 
     239: operator: !
     240: call: 
      241: name: strcmp
      242: argument_list: 
       243: argument: 
        244: expr: 
         245: name: type
       246: argument: 
        247: expr: 
         248: name: TOMOYO_MOUNT_BIND_KEYWORD
     249: operator: ||
     250: operator: !
     251: call: 
      252: name: strcmp
      253: argument_list: 
       254: argument: 
        255: expr: 
         256: name: type
       257: argument: 
        258: expr: 
         259: name: TOMOYO_MOUNT_MOVE_KEYWORD
   260: block: 
    261: block_content: 
     262: expr_stmt: 
      263: expr: 
       264: name: need_dev
       265: operator: =
       266: operator: -
       267: literal: 1
     268: comment: /* dev_name is a directory */
  269: else: 
   270: block: 
    271: block_content: 
     272: expr_stmt: 
      273: expr: 
       274: name: fstype
       275: operator: =
       276: call: 
        277: name: get_fs_type
        278: argument_list: 
         279: argument: 
          280: expr: 
           281: name: type
     282: if_stmt: 
      283: if: 
       284: condition: 
        285: expr: 
         286: operator: !
         287: name: fstype
       288: block: 
        289: block_content: 
         290: expr_stmt: 
          291: expr: 
           292: name: error
           293: operator: =
           294: operator: -
           295: name: ENODEV
         296: goto: 
          297: name: out
     298: if_stmt: 
      299: if: 
       300: condition: 
        301: expr: 
         302: name: 
          303: name: fstype
          304: operator: ->
          305: name: fs_flags
         306: operator: &
         307: name: FS_REQUIRES_DEV
       308: block: 
        309: block_content: 
         310: comment: /* dev_name is a block device file. */
         311: expr_stmt: 
          312: expr: 
           313: name: need_dev
           314: operator: =
           315: literal: 1
 316: if_stmt: 
  317: if: 
   318: condition: 
    319: expr: 
     320: name: need_dev
   321: block: 
    322: block_content: 
     323: comment: /* Get mount point or device file. */
     324: if_stmt: 
      325: if: 
       326: condition: 
        327: expr: 
         328: operator: !
         329: name: dev_name
         330: operator: ||
         331: call: 
          332: name: kern_path
          333: argument_list: 
           334: argument: 
            335: expr: 
             336: name: dev_name
           337: argument: 
            338: expr: 
             339: name: LOOKUP_FOLLOW
           340: argument: 
            341: expr: 
             342: operator: &
             343: name: path
       344: block: 
        345: block_content: 
         346: expr_stmt: 
          347: expr: 
           348: name: error
           349: operator: =
           350: operator: -
           351: name: ENOENT
         352: goto: 
          353: name: out
     354: expr_stmt: 
      355: expr: 
       356: name: requested_dev_name
       357: operator: =
       358: call: 
        359: name: tomoyo_realpath_from_path
        360: argument_list: 
         361: argument: 
          362: expr: 
           363: operator: &
           364: name: path
     365: expr_stmt: 
      366: expr: 
       367: call: 
        368: name: path_put
        369: argument_list: 
         370: argument: 
          371: expr: 
           372: operator: &
           373: name: path
     374: if_stmt: 
      375: if: 
       376: condition: 
        377: expr: 
         378: operator: !
         379: name: requested_dev_name
       380: block: 
        381: block_content: 
         382: expr_stmt: 
          383: expr: 
           384: name: error
           385: operator: =
           386: operator: -
           387: name: ENOENT
         388: goto: 
          389: name: out
  390: else: 
   391: block: 
    392: block_content: 
     393: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
     394: if_stmt: 
      395: if: 
       396: condition: 
        397: expr: 
         398: operator: !
         399: name: dev_name
       400: block: 
        401: block_content: 
         402: expr_stmt: 
          403: expr: 
           404: name: dev_name
           405: operator: =
           406: literal: "<NULL>"
     407: expr_stmt: 
      408: expr: 
       409: name: requested_dev_name
       410: operator: =
       411: call: 
        412: name: tomoyo_encode
        413: argument_list: 
         414: argument: 
          415: expr: 
           416: name: dev_name
     417: if_stmt: 
      418: if: 
       419: condition: 
        420: expr: 
         421: operator: !
         422: name: requested_dev_name
       423: block: 
        424: block_content: 
         425: expr_stmt: 
          426: expr: 
           427: name: error
           428: operator: =
           429: operator: -
           430: name: ENOMEM
         431: goto: 
          432: name: out
 433: expr_stmt: 
  434: expr: 
   435: name: 
    436: name: rdev
    437: operator: .
    438: name: name
   439: operator: =
   440: name: requested_dev_name
 441: expr_stmt: 
  442: expr: 
   443: call: 
    444: name: tomoyo_fill_path_info
    445: argument_list: 
     446: argument: 
      447: expr: 
       448: operator: &
       449: name: rdev
 450: expr_stmt: 
  451: expr: 
   452: name: 
    453: name: r
    454: operator: ->
    455: name: param_type
   456: operator: =
   457: name: TOMOYO_TYPE_MOUNT_ACL
 458: expr_stmt: 
  459: expr: 
   460: name: 
    461: name: r
    462: operator: ->
    463: name: param
    464: operator: .
    465: name: mount
    466: operator: .
    467: name: need_dev
   468: operator: =
   469: name: need_dev
 470: expr_stmt: 
  471: expr: 
   472: name: 
    473: name: r
    474: operator: ->
    475: name: param
    476: operator: .
    477: name: mount
    478: operator: .
    479: name: dev
   480: operator: =
   481: operator: &
   482: name: rdev
 483: expr_stmt: 
  484: expr: 
   485: name: 
    486: name: r
    487: operator: ->
    488: name: param
    489: operator: .
    490: name: mount
    491: operator: .
    492: name: dir
   493: operator: =
   494: operator: &
   495: name: rdir
 496: expr_stmt: 
  497: expr: 
   498: name: 
    499: name: r
    500: operator: ->
    501: name: param
    502: operator: .
    503: name: mount
    504: operator: .
    505: name: type
   506: operator: =
   507: operator: &
   508: name: rtype
 509: expr_stmt: 
  510: expr: 
   511: name: 
    512: name: r
    513: operator: ->
    514: name: param
    515: operator: .
    516: name: mount
    517: operator: .
    518: name: flags
   519: operator: =
   520: name: flags
 521: do: 
  522: block: 
   523: block_content: 
    524: expr_stmt: 
     525: expr: 
      526: call: 
       527: name: tomoyo_check_acl
       528: argument_list: 
        529: argument: 
         530: expr: 
          531: name: r
        532: argument: 
         533: expr: 
          534: name: tomoyo_check_mount_acl
    535: expr_stmt: 
     536: expr: 
      537: name: error
      538: operator: =
      539: call: 
       540: name: tomoyo_audit_mount_log
       541: argument_list: 
        542: argument: 
         543: expr: 
          544: name: r
  545: condition: 
   546: expr: 
    547: name: error
    548: operator: ==
    549: name: TOMOYO_RETRY_REQUEST
 550: label: 
  551: name: out
 552: expr_stmt: 
  553: expr: 
   554: call: 
    555: name: kfree
    556: argument_list: 
     557: argument: 
      558: expr: 
       559: name: requested_dev_name
 560: expr_stmt: 
  561: expr: 
   562: call: 
    563: name: kfree
    564: argument_list: 
     565: argument: 
      566: expr: 
       567: name: requested_dir_name
 568: if_stmt: 
  569: if: 
   570: condition: 
    571: expr: 
     572: name: fstype
   573: block: 
    574: block_content: 
     575: expr_stmt: 
      576: expr: 
       577: call: 
        578: name: put_filesystem
        579: argument_list: 
         580: argument: 
          581: expr: 
           582: name: fstype
 583: expr_stmt: 
  584: expr: 
   585: call: 
    586: name: kfree
    587: argument_list: 
     588: argument: 
      589: expr: 
       590: name: requested_type
 591: return: 
  592: expr: 
   593: name: error
=====
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: need_dev
  5: block: 
   6: block_content: 
    7: comment: /* Get mount point or device file. */
    8: if_stmt: 
     9: if: 
      10: condition: 
       11: expr: 
        12: call: 
         13: name: kern_path
         14: argument_list: 
          15: argument: 
           16: expr: 
            17: name: dev_name
          18: argument: 
           19: expr: 
            20: name: LOOKUP_FOLLOW
          21: argument: 
           22: expr: 
            23: operator: &
            24: name: path
      25: block: 
       26: block_content: 
        27: expr_stmt: 
         28: expr: 
          29: name: error
          30: operator: =
          31: operator: -
          32: name: ENOENT
        33: goto: 
         34: name: out
    35: expr_stmt: 
     36: expr: 
      37: name: requested_dev_name
      38: operator: =
      39: call: 
       40: name: tomoyo_realpath_from_path
       41: argument_list: 
        42: argument: 
         43: expr: 
          44: operator: &
          45: name: path
    46: expr_stmt: 
     47: expr: 
      48: call: 
       49: name: path_put
       50: argument_list: 
        51: argument: 
         52: expr: 
          53: operator: &
          54: name: path
    55: if_stmt: 
     56: if: 
      57: condition: 
       58: expr: 
        59: operator: !
        60: name: requested_dev_name
      61: block: 
       62: block_content: 
        63: expr_stmt: 
         64: expr: 
          65: name: error
          66: operator: =
          67: operator: -
          68: name: ENOENT
        69: goto: 
         70: name: out
 71: else: 
  72: block: 
   73: block_content: 
    74: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
    75: if_stmt: 
     76: if: 
      77: condition: 
       78: expr: 
        79: operator: !
        80: name: dev_name
      81: block: 
       82: block_content: 
        83: expr_stmt: 
         84: expr: 
          85: name: dev_name
          86: operator: =
          87: literal: "<NULL>"
    88: expr_stmt: 
     89: expr: 
      90: name: requested_dev_name
      91: operator: =
      92: call: 
       93: name: tomoyo_encode
       94: argument_list: 
        95: argument: 
         96: expr: 
          97: name: dev_name
    98: if_stmt: 
     99: if: 
      100: condition: 
       101: expr: 
        102: operator: !
        103: name: requested_dev_name
      104: block: 
       105: block_content: 
        106: expr_stmt: 
         107: expr: 
          108: name: error
          109: operator: =
          110: operator: -
          111: name: ENOMEM
        112: goto: 
         113: name: out

----------------------------------------
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: name: need_dev
  5: block: 
   6: block_content: 
    7: comment: /* Get mount point or device file. */
    8: if_stmt: 
     9: if: 
      10: condition: 
       11: expr: 
        12: operator: !
        13: name: dev_name
        14: operator: ||
        15: call: 
         16: name: kern_path
         17: argument_list: 
          18: argument: 
           19: expr: 
            20: name: dev_name
          21: argument: 
           22: expr: 
            23: name: LOOKUP_FOLLOW
          24: argument: 
           25: expr: 
            26: operator: &
            27: name: path
      28: block: 
       29: block_content: 
        30: expr_stmt: 
         31: expr: 
          32: name: error
          33: operator: =
          34: operator: -
          35: name: ENOENT
        36: goto: 
         37: name: out
    38: expr_stmt: 
     39: expr: 
      40: name: requested_dev_name
      41: operator: =
      42: call: 
       43: name: tomoyo_realpath_from_path
       44: argument_list: 
        45: argument: 
         46: expr: 
          47: operator: &
          48: name: path
    49: expr_stmt: 
     50: expr: 
      51: call: 
       52: name: path_put
       53: argument_list: 
        54: argument: 
         55: expr: 
          56: operator: &
          57: name: path
    58: if_stmt: 
     59: if: 
      60: condition: 
       61: expr: 
        62: operator: !
        63: name: requested_dev_name
      64: block: 
       65: block_content: 
        66: expr_stmt: 
         67: expr: 
          68: name: error
          69: operator: =
          70: operator: -
          71: name: ENOENT
        72: goto: 
         73: name: out
 74: else: 
  75: block: 
   76: block_content: 
    77: comment: /* Map dev_name to "<NULL>" if no dev_name given. */
    78: if_stmt: 
     79: if: 
      80: condition: 
       81: expr: 
        82: operator: !
        83: name: dev_name
      84: block: 
       85: block_content: 
        86: expr_stmt: 
         87: expr: 
          88: name: dev_name
          89: operator: =
          90: literal: "<NULL>"
    91: expr_stmt: 
     92: expr: 
      93: name: requested_dev_name
      94: operator: =
      95: call: 
       96: name: tomoyo_encode
       97: argument_list: 
        98: argument: 
         99: expr: 
          100: name: dev_name
    101: if_stmt: 
     102: if: 
      103: condition: 
       104: expr: 
        105: operator: !
        106: name: requested_dev_name
      107: block: 
       108: block_content: 
        109: expr_stmt: 
         110: expr: 
          111: name: error
          112: operator: =
          113: operator: -
          114: name: ENOMEM
        115: goto: 
         116: name: out
=====
0: if: 
 1: condition: 
  2: expr: 
   3: name: need_dev
 4: block: 
  5: block_content: 
   6: comment: /* Get mount point or device file. */
   7: if_stmt: 
    8: if: 
     9: condition: 
      10: expr: 
       11: call: 
        12: name: kern_path
        13: argument_list: 
         14: argument: 
          15: expr: 
           16: name: dev_name
         17: argument: 
          18: expr: 
           19: name: LOOKUP_FOLLOW
         20: argument: 
          21: expr: 
           22: operator: &
           23: name: path
     24: block: 
      25: block_content: 
       26: expr_stmt: 
        27: expr: 
         28: name: error
         29: operator: =
         30: operator: -
         31: name: ENOENT
       32: goto: 
        33: name: out
   34: expr_stmt: 
    35: expr: 
     36: name: requested_dev_name
     37: operator: =
     38: call: 
      39: name: tomoyo_realpath_from_path
      40: argument_list: 
       41: argument: 
        42: expr: 
         43: operator: &
         44: name: path
   45: expr_stmt: 
    46: expr: 
     47: call: 
      48: name: path_put
      49: argument_list: 
       50: argument: 
        51: expr: 
         52: operator: &
         53: name: path
   54: if_stmt: 
    55: if: 
     56: condition: 
      57: expr: 
       58: operator: !
       59: name: requested_dev_name
     60: block: 
      61: block_content: 
       62: expr_stmt: 
        63: expr: 
         64: name: error
         65: operator: =
         66: operator: -
         67: name: ENOENT
       68: goto: 
        69: name: out

----------------------------------------
0: if: 
 1: condition: 
  2: expr: 
   3: name: need_dev
 4: block: 
  5: block_content: 
   6: comment: /* Get mount point or device file. */
   7: if_stmt: 
    8: if: 
     9: condition: 
      10: expr: 
       11: operator: !
       12: name: dev_name
       13: operator: ||
       14: call: 
        15: name: kern_path
        16: argument_list: 
         17: argument: 
          18: expr: 
           19: name: dev_name
         20: argument: 
          21: expr: 
           22: name: LOOKUP_FOLLOW
         23: argument: 
          24: expr: 
           25: operator: &
           26: name: path
     27: block: 
      28: block_content: 
       29: expr_stmt: 
        30: expr: 
         31: name: error
         32: operator: =
         33: operator: -
         34: name: ENOENT
       35: goto: 
        36: name: out
   37: expr_stmt: 
    38: expr: 
     39: name: requested_dev_name
     40: operator: =
     41: call: 
      42: name: tomoyo_realpath_from_path
      43: argument_list: 
       44: argument: 
        45: expr: 
         46: operator: &
         47: name: path
   48: expr_stmt: 
    49: expr: 
     50: call: 
      51: name: path_put
      52: argument_list: 
       53: argument: 
        54: expr: 
         55: operator: &
         56: name: path
   57: if_stmt: 
    58: if: 
     59: condition: 
      60: expr: 
       61: operator: !
       62: name: requested_dev_name
     63: block: 
      64: block_content: 
       65: expr_stmt: 
        66: expr: 
         67: name: error
         68: operator: =
         69: operator: -
         70: name: ENOENT
       71: goto: 
        72: name: out
=====
0: block: 
 1: block_content: 
  2: comment: /* Get mount point or device file. */
  3: if_stmt: 
   4: if: 
    5: condition: 
     6: expr: 
      7: call: 
       8: name: kern_path
       9: argument_list: 
        10: argument: 
         11: expr: 
          12: name: dev_name
        13: argument: 
         14: expr: 
          15: name: LOOKUP_FOLLOW
        16: argument: 
         17: expr: 
          18: operator: &
          19: name: path
    20: block: 
     21: block_content: 
      22: expr_stmt: 
       23: expr: 
        24: name: error
        25: operator: =
        26: operator: -
        27: name: ENOENT
      28: goto: 
       29: name: out
  30: expr_stmt: 
   31: expr: 
    32: name: requested_dev_name
    33: operator: =
    34: call: 
     35: name: tomoyo_realpath_from_path
     36: argument_list: 
      37: argument: 
       38: expr: 
        39: operator: &
        40: name: path
  41: expr_stmt: 
   42: expr: 
    43: call: 
     44: name: path_put
     45: argument_list: 
      46: argument: 
       47: expr: 
        48: operator: &
        49: name: path
  50: if_stmt: 
   51: if: 
    52: condition: 
     53: expr: 
      54: operator: !
      55: name: requested_dev_name
    56: block: 
     57: block_content: 
      58: expr_stmt: 
       59: expr: 
        60: name: error
        61: operator: =
        62: operator: -
        63: name: ENOENT
      64: goto: 
       65: name: out

----------------------------------------
0: block: 
 1: block_content: 
  2: comment: /* Get mount point or device file. */
  3: if_stmt: 
   4: if: 
    5: condition: 
     6: expr: 
      7: operator: !
      8: name: dev_name
      9: operator: ||
      10: call: 
       11: name: kern_path
       12: argument_list: 
        13: argument: 
         14: expr: 
          15: name: dev_name
        16: argument: 
         17: expr: 
          18: name: LOOKUP_FOLLOW
        19: argument: 
         20: expr: 
          21: operator: &
          22: name: path
    23: block: 
     24: block_content: 
      25: expr_stmt: 
       26: expr: 
        27: name: error
        28: operator: =
        29: operator: -
        30: name: ENOENT
      31: goto: 
       32: name: out
  33: expr_stmt: 
   34: expr: 
    35: name: requested_dev_name
    36: operator: =
    37: call: 
     38: name: tomoyo_realpath_from_path
     39: argument_list: 
      40: argument: 
       41: expr: 
        42: operator: &
        43: name: path
  44: expr_stmt: 
   45: expr: 
    46: call: 
     47: name: path_put
     48: argument_list: 
      49: argument: 
       50: expr: 
        51: operator: &
        52: name: path
  53: if_stmt: 
   54: if: 
    55: condition: 
     56: expr: 
      57: operator: !
      58: name: requested_dev_name
    59: block: 
     60: block_content: 
      61: expr_stmt: 
       62: expr: 
        63: name: error
        64: operator: =
        65: operator: -
        66: name: ENOENT
      67: goto: 
       68: name: out
=====
0: block_content: 
 1: comment: /* Get mount point or device file. */
 2: if_stmt: 
  3: if: 
   4: condition: 
    5: expr: 
     6: call: 
      7: name: kern_path
      8: argument_list: 
       9: argument: 
        10: expr: 
         11: name: dev_name
       12: argument: 
        13: expr: 
         14: name: LOOKUP_FOLLOW
       15: argument: 
        16: expr: 
         17: operator: &
         18: name: path
   19: block: 
    20: block_content: 
     21: expr_stmt: 
      22: expr: 
       23: name: error
       24: operator: =
       25: operator: -
       26: name: ENOENT
     27: goto: 
      28: name: out
 29: expr_stmt: 
  30: expr: 
   31: name: requested_dev_name
   32: operator: =
   33: call: 
    34: name: tomoyo_realpath_from_path
    35: argument_list: 
     36: argument: 
      37: expr: 
       38: operator: &
       39: name: path
 40: expr_stmt: 
  41: expr: 
   42: call: 
    43: name: path_put
    44: argument_list: 
     45: argument: 
      46: expr: 
       47: operator: &
       48: name: path
 49: if_stmt: 
  50: if: 
   51: condition: 
    52: expr: 
     53: operator: !
     54: name: requested_dev_name
   55: block: 
    56: block_content: 
     57: expr_stmt: 
      58: expr: 
       59: name: error
       60: operator: =
       61: operator: -
       62: name: ENOENT
     63: goto: 
      64: name: out

----------------------------------------
0: block_content: 
 1: comment: /* Get mount point or device file. */
 2: if_stmt: 
  3: if: 
   4: condition: 
    5: expr: 
     6: operator: !
     7: name: dev_name
     8: operator: ||
     9: call: 
      10: name: kern_path
      11: argument_list: 
       12: argument: 
        13: expr: 
         14: name: dev_name
       15: argument: 
        16: expr: 
         17: name: LOOKUP_FOLLOW
       18: argument: 
        19: expr: 
         20: operator: &
         21: name: path
   22: block: 
    23: block_content: 
     24: expr_stmt: 
      25: expr: 
       26: name: error
       27: operator: =
       28: operator: -
       29: name: ENOENT
     30: goto: 
      31: name: out
 32: expr_stmt: 
  33: expr: 
   34: name: requested_dev_name
   35: operator: =
   36: call: 
    37: name: tomoyo_realpath_from_path
    38: argument_list: 
     39: argument: 
      40: expr: 
       41: operator: &
       42: name: path
 43: expr_stmt: 
  44: expr: 
   45: call: 
    46: name: path_put
    47: argument_list: 
     48: argument: 
      49: expr: 
       50: operator: &
       51: name: path
 52: if_stmt: 
  53: if: 
   54: condition: 
    55: expr: 
     56: operator: !
     57: name: requested_dev_name
   58: block: 
    59: block_content: 
     60: expr_stmt: 
      61: expr: 
       62: name: error
       63: operator: =
       64: operator: -
       65: name: ENOENT
     66: goto: 
      67: name: out
=====
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: call: 
     5: name: kern_path
     6: argument_list: 
      7: argument: 
       8: expr: 
        9: name: dev_name
      10: argument: 
       11: expr: 
        12: name: LOOKUP_FOLLOW
      13: argument: 
       14: expr: 
        15: operator: &
        16: name: path
  17: block: 
   18: block_content: 
    19: expr_stmt: 
     20: expr: 
      21: name: error
      22: operator: =
      23: operator: -
      24: name: ENOENT
    25: goto: 
     26: name: out

----------------------------------------
0: if_stmt: 
 1: if: 
  2: condition: 
   3: expr: 
    4: operator: !
    5: name: dev_name
    6: operator: ||
    7: call: 
     8: name: kern_path
     9: argument_list: 
      10: argument: 
       11: expr: 
        12: name: dev_name
      13: argument: 
       14: expr: 
        15: name: LOOKUP_FOLLOW
      16: argument: 
       17: expr: 
        18: operator: &
        19: name: path
  20: block: 
   21: block_content: 
    22: expr_stmt: 
     23: expr: 
      24: name: error
      25: operator: =
      26: operator: -
      27: name: ENOENT
    28: goto: 
     29: name: out
=====
0: if: 
 1: condition: 
  2: expr: 
   3: call: 
    4: name: kern_path
    5: argument_list: 
     6: argument: 
      7: expr: 
       8: name: dev_name
     9: argument: 
      10: expr: 
       11: name: LOOKUP_FOLLOW
     12: argument: 
      13: expr: 
       14: operator: &
       15: name: path
 16: block: 
  17: block_content: 
   18: expr_stmt: 
    19: expr: 
     20: name: error
     21: operator: =
     22: operator: -
     23: name: ENOENT
   24: goto: 
    25: name: out

----------------------------------------
0: if: 
 1: condition: 
  2: expr: 
   3: operator: !
   4: name: dev_name
   5: operator: ||
   6: call: 
    7: name: kern_path
    8: argument_list: 
     9: argument: 
      10: expr: 
       11: name: dev_name
     12: argument: 
      13: expr: 
       14: name: LOOKUP_FOLLOW
     15: argument: 
      16: expr: 
       17: operator: &
       18: name: path
 19: block: 
  20: block_content: 
   21: expr_stmt: 
    22: expr: 
     23: name: error
     24: operator: =
     25: operator: -
     26: name: ENOENT
   27: goto: 
    28: name: out
=====
0: condition: 
 1: expr: 
  2: call: 
   3: name: kern_path
   4: argument_list: 
    5: argument: 
     6: expr: 
      7: name: dev_name
    8: argument: 
     9: expr: 
      10: name: LOOKUP_FOLLOW
    11: argument: 
     12: expr: 
      13: operator: &
      14: name: path

----------------------------------------
0: condition: 
 1: expr: 
  2: operator: !
  3: name: dev_name
  4: operator: ||
  5: call: 
   6: name: kern_path
   7: argument_list: 
    8: argument: 
     9: expr: 
      10: name: dev_name
    11: argument: 
     12: expr: 
      13: name: LOOKUP_FOLLOW
    14: argument: 
     15: expr: 
      16: operator: &
      17: name: path
=====
0: expr: 
 1: call: 
  2: name: kern_path
  3: argument_list: 
   4: argument: 
    5: expr: 
     6: name: dev_name
   7: argument: 
    8: expr: 
     9: name: LOOKUP_FOLLOW
   10: argument: 
    11: expr: 
     12: operator: &
     13: name: path

----------------------------------------
0: expr: 
 1: operator: !
 2: name: dev_name
 3: operator: ||
 4: call: 
  5: name: kern_path
  6: argument_list: 
   7: argument: 
    8: expr: 
     9: name: dev_name
   10: argument: 
    11: expr: 
     12: name: LOOKUP_FOLLOW
   13: argument: 
    14: expr: 
     15: operator: &
     16: name: path
=====
