0: expr: 
 1: ?: !@#$holes0
 2: name: bufsize
 3: operator: =
 4: name: 
  5: name: file
  6: operator: ->
  7: name: size
 8: ?: !@#$holes1

----------------------------------------
0: expr: 
 1: ?: !@#$holes0
 2: name: 
  3: name: file
  4: operator: ->
  5: name: size
 6: ?: !@#$holes1
=====
0: comment: /* the last command failed, but previous ones

----------------------------------------
0: 		: 
 1: function: 
  2: type: 
   3: specifier: static
   4: name: int
  5: name: read_public_key
  6: parameter_list: 
   7: parameter: 
    8: decl: 
     9: type: 
      10: name: RSA
      11: modifier: *
     12: name: rsa
  13: block: 
   14: block_content: 
    15: decl_stmt: 
     16: decl: 
      17: type: 
       18: name: int
      19: name: r
    20: decl_stmt: 
     21: decl: 
      22: type: 
       23: name: sc_path_t
      24: name: path
    25: decl_stmt: 
     26: decl: 
      27: type: 
       28: name: sc_file_t
       29: modifier: *
      30: name: file
    31: decl_stmt: 
     32: decl: 
      33: type: 
       34: name: u8
      35: name: 
       36: name: buf
       37: index: 
        38: expr: 
         39: literal: 2048
     40: decl: 
      41: type: 
       42: modifier: *
      43: name: p
      44: init: 
       45: expr: 
        46: name: buf
    47: decl_stmt: 
     48: decl: 
      49: type: 
       50: name: size_t
      51: name: bufsize
     52: decl: 
      53: type: 
      54: name: keysize
    55: expr_stmt: 
     56: expr: 
      57: name: r
      58: operator: =
      59: call: 
       60: name: select_app_df
       61: argument_list: 
    62: if_stmt: 
     63: if: 
      64: condition: 
       65: expr: 
        66: name: r
      67: block: 
       68: block_content: 
        69: return: 
         70: expr: 
          71: literal: 1
    72: expr_stmt: 
     73: expr: 
      74: call: 
       75: name: sc_format_path
       76: argument_list: 
        77: argument: 
         78: expr: 
          79: literal: "I1012"
        80: argument: 
         81: expr: 
          82: operator: &
          83: name: path
    84: expr_stmt: 
     85: expr: 
      86: name: r
      87: operator: =
      88: call: 
       89: name: sc_select_file
       90: argument_list: 
        91: argument: 
         92: expr: 
          93: name: card
        94: argument: 
         95: expr: 
          96: operator: &
          97: name: path
        98: argument: 
         99: expr: 
          100: operator: &
          101: name: file
    102: if_stmt: 
     103: if: 
      104: condition: 
       105: expr: 
        106: name: r
      107: block: 
       108: block_content: 
        109: expr_stmt: 
         110: expr: 
          111: call: 
           112: name: fprintf
           113: argument_list: 
            114: argument: 
             115: expr: 
              116: name: stderr
            117: argument: 
             118: expr: 
              119: literal: "Unable to select public key file: %s\n"
            120: argument: 
             121: expr: 
              122: call: 
               123: name: sc_strerror
               124: argument_list: 
                125: argument: 
                 126: expr: 
                  127: name: r
        128: return: 
         129: expr: 
          130: literal: 2
    131: expr_stmt: 
     132: expr: 
      133: name: bufsize
      134: operator: =
      135: call: 
       136: name: MIN
       137: argument_list: 
        138: argument: 
         139: expr: 
          140: name: 
           141: name: file
           142: operator: ->
           143: name: size
        144: argument: 
         145: expr: 
          146: sizeof: 
           147: name: buf
    148: expr_stmt: 
     149: expr: 
      150: call: 
       151: name: sc_file_free
       152: argument_list: 
        153: argument: 
         154: expr: 
          155: name: file
    156: expr_stmt: 
     157: expr: 
      158: name: r
      159: operator: =
      160: call: 
       161: name: sc_read_binary
       162: argument_list: 
        163: argument: 
         164: expr: 
          165: name: card
        166: argument: 
         167: expr: 
          168: literal: 0
        169: argument: 
         170: expr: 
          171: name: buf
        172: argument: 
         173: expr: 
          174: name: bufsize
        175: argument: 
         176: expr: 
          177: literal: 0
    178: if_stmt: 
     179: if: 
      180: condition: 
       181: expr: 
        182: name: r
        183: operator: <
        184: literal: 0
      185: block: 
       186: block_content: 
        187: expr_stmt: 
         188: expr: 
          189: call: 
           190: name: fprintf
           191: argument_list: 
            192: argument: 
             193: expr: 
              194: name: stderr
            195: argument: 
             196: expr: 
              197: literal: "Unable to read public key file: %s\n"
            198: argument: 
             199: expr: 
              200: call: 
               201: name: sc_strerror
               202: argument_list: 
                203: argument: 
                 204: expr: 
                  205: name: r
        206: return: 
         207: expr: 
          208: literal: 2
    209: expr_stmt: 
     210: expr: 
      211: name: bufsize
      212: operator: =
      213: name: r
    214: do: 
     215: block: 
      216: block_content: 
       217: if_stmt: 
        218: if: 
         219: condition: 
          220: expr: 
           221: name: bufsize
           222: operator: <
           223: literal: 4
         224: block: 
          225: block_content: 
           226: return: 
            227: expr: 
             228: literal: 3
       229: expr_stmt: 
        230: expr: 
         231: name: keysize
         232: operator: =
         233: operator: (
         234: name: 
          235: name: p
          236: index: 
           237: expr: 
            238: literal: 0
         239: operator: <<
         240: literal: 8
         241: operator: )
         242: operator: |
         243: name: 
          244: name: p
          245: index: 
           246: expr: 
            247: literal: 1
       248: if_stmt: 
        249: if: 
         250: condition: 
          251: expr: 
           252: name: keysize
           253: operator: ==
           254: literal: 0
         255: block: 
          256: block_content: 
           257: break: 
       258: if_stmt: 
        259: if: 
         260: condition: 
          261: expr: 
           262: name: keysize
           263: operator: <
           264: literal: 3
         265: block: 
          266: block_content: 
           267: return: 
            268: expr: 
             269: literal: 3
       270: if_stmt: 
        271: if: 
         272: condition: 
          273: expr: 
           274: name: 
            275: name: p
            276: index: 
             277: expr: 
              278: literal: 2
           279: operator: ==
           280: name: opt_key_num
         281: block: 
          282: block_content: 
           283: break: 
       284: expr_stmt: 
        285: expr: 
         286: name: p
         287: operator: +=
         288: name: keysize
       289: expr_stmt: 
        290: expr: 
         291: name: bufsize
         292: operator: -=
         293: name: keysize
     294: condition: 
      295: expr: 
       296: literal: 1
    297: if_stmt: 
     298: if: 
      299: condition: 
       300: expr: 
        301: name: keysize
        302: operator: ==
        303: literal: 0
      304: block: 
       305: block_content: 
        306: expr_stmt: 
         307: expr: 
          308: call: 
           309: name: printf
           310: argument_list: 
            311: argument: 
             312: expr: 
              313: literal: "Key number %d not found.\n"
            314: argument: 
             315: expr: 
              316: name: opt_key_num
        317: return: 
         318: expr: 
          319: literal: 2
    320: return: 
     321: expr: 
      322: call: 
       323: name: parse_public_key
       324: argument_list: 
        325: argument: 
         326: expr: 
          327: name: p
        328: argument: 
         329: expr: 
          330: name: keysize
        331: argument: 
         332: expr: 
          333: name: rsa
=====
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: read_public_key
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: RSA
     10: modifier: *
    11: name: rsa
 12: block: 
  13: block_content: 
   14: decl_stmt: 
    15: decl: 
     16: type: 
      17: name: int
     18: name: r
   19: decl_stmt: 
    20: decl: 
     21: type: 
      22: name: sc_path_t
     23: name: path
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: sc_file_t
      28: modifier: *
     29: name: file
   30: decl_stmt: 
    31: decl: 
     32: type: 
      33: name: u8
     34: name: 
      35: name: buf
      36: index: 
       37: expr: 
        38: literal: 2048
    39: decl: 
     40: type: 
      41: modifier: *
     42: name: p
     43: init: 
      44: expr: 
       45: name: buf
   46: decl_stmt: 
    47: decl: 
     48: type: 
      49: name: size_t
     50: name: bufsize
    51: decl: 
     52: type: 
     53: name: keysize
   54: expr_stmt: 
    55: expr: 
     56: name: r
     57: operator: =
     58: call: 
      59: name: select_app_df
      60: argument_list: 
   61: if_stmt: 
    62: if: 
     63: condition: 
      64: expr: 
       65: name: r
     66: block: 
      67: block_content: 
       68: return: 
        69: expr: 
         70: literal: 1
   71: expr_stmt: 
    72: expr: 
     73: call: 
      74: name: sc_format_path
      75: argument_list: 
       76: argument: 
        77: expr: 
         78: literal: "I1012"
       79: argument: 
        80: expr: 
         81: operator: &
         82: name: path
   83: expr_stmt: 
    84: expr: 
     85: name: r
     86: operator: =
     87: call: 
      88: name: sc_select_file
      89: argument_list: 
       90: argument: 
        91: expr: 
         92: name: card
       93: argument: 
        94: expr: 
         95: operator: &
         96: name: path
       97: argument: 
        98: expr: 
         99: operator: &
         100: name: file
   101: if_stmt: 
    102: if: 
     103: condition: 
      104: expr: 
       105: name: r
     106: block: 
      107: block_content: 
       108: expr_stmt: 
        109: expr: 
         110: call: 
          111: name: fprintf
          112: argument_list: 
           113: argument: 
            114: expr: 
             115: name: stderr
           116: argument: 
            117: expr: 
             118: literal: "Unable to select public key file: %s\n"
           119: argument: 
            120: expr: 
             121: call: 
              122: name: sc_strerror
              123: argument_list: 
               124: argument: 
                125: expr: 
                 126: name: r
       127: return: 
        128: expr: 
         129: literal: 2
   130: expr_stmt: 
    131: expr: 
     132: name: bufsize
     133: operator: =
     134: name: 
      135: name: file
      136: operator: ->
      137: name: size
   138: expr_stmt: 
    139: expr: 
     140: call: 
      141: name: sc_file_free
      142: argument_list: 
       143: argument: 
        144: expr: 
         145: name: file
   146: expr_stmt: 
    147: expr: 
     148: name: r
     149: operator: =
     150: call: 
      151: name: sc_read_binary
      152: argument_list: 
       153: argument: 
        154: expr: 
         155: name: card
       156: argument: 
        157: expr: 
         158: literal: 0
       159: argument: 
        160: expr: 
         161: name: buf
       162: argument: 
        163: expr: 
         164: name: bufsize
       165: argument: 
        166: expr: 
         167: literal: 0
   168: if_stmt: 
    169: if: 
     170: condition: 
      171: expr: 
       172: name: r
       173: operator: <
       174: literal: 0
     175: block: 
      176: block_content: 
       177: expr_stmt: 
        178: expr: 
         179: call: 
          180: name: fprintf
          181: argument_list: 
           182: argument: 
            183: expr: 
             184: name: stderr
           185: argument: 
            186: expr: 
             187: literal: "Unable to read public key file: %s\n"
           188: argument: 
            189: expr: 
             190: call: 
              191: name: sc_strerror
              192: argument_list: 
               193: argument: 
                194: expr: 
                 195: name: r
       196: return: 
        197: expr: 
         198: literal: 2
   199: expr_stmt: 
    200: expr: 
     201: name: bufsize
     202: operator: =
     203: name: r
   204: do: 
    205: block: 
     206: block_content: 
      207: if_stmt: 
       208: if: 
        209: condition: 
         210: expr: 
          211: name: bufsize
          212: operator: <
          213: literal: 4
        214: block: 
         215: block_content: 
          216: return: 
           217: expr: 
            218: literal: 3
      219: expr_stmt: 
       220: expr: 
        221: name: keysize
        222: operator: =
        223: operator: (
        224: name: 
         225: name: p
         226: index: 
          227: expr: 
           228: literal: 0
        229: operator: <<
        230: literal: 8
        231: operator: )
        232: operator: |
        233: name: 
         234: name: p
         235: index: 
          236: expr: 
           237: literal: 1
      238: if_stmt: 
       239: if: 
        240: condition: 
         241: expr: 
          242: name: keysize
          243: operator: ==
          244: literal: 0
        245: block: 
         246: block_content: 
          247: break: 
      248: if_stmt: 
       249: if: 
        250: condition: 
         251: expr: 
          252: name: keysize
          253: operator: <
          254: literal: 3
        255: block: 
         256: block_content: 
          257: return: 
           258: expr: 
            259: literal: 3
      260: if_stmt: 
       261: if: 
        262: condition: 
         263: expr: 
          264: name: 
           265: name: p
           266: index: 
            267: expr: 
             268: literal: 2
          269: operator: ==
          270: name: opt_key_num
        271: block: 
         272: block_content: 
          273: break: 
      274: expr_stmt: 
       275: expr: 
        276: name: p
        277: operator: +=
        278: name: keysize
      279: expr_stmt: 
       280: expr: 
        281: name: bufsize
        282: operator: -=
        283: name: keysize
    284: condition: 
     285: expr: 
      286: literal: 1
   287: if_stmt: 
    288: if: 
     289: condition: 
      290: expr: 
       291: name: keysize
       292: operator: ==
       293: literal: 0
     294: block: 
      295: block_content: 
       296: expr_stmt: 
        297: expr: 
         298: call: 
          299: name: printf
          300: argument_list: 
           301: argument: 
            302: expr: 
             303: literal: "Key number %d not found.\n"
           304: argument: 
            305: expr: 
             306: name: opt_key_num
       307: return: 
        308: expr: 
         309: literal: 2
   310: return: 
    311: expr: 
     312: call: 
      313: name: parse_public_key
      314: argument_list: 
       315: argument: 
        316: expr: 
         317: name: p
       318: argument: 
        319: expr: 
         320: name: keysize
       321: argument: 
        322: expr: 
         323: name: rsa

----------------------------------------
0: function: 
 1: type: 
  2: specifier: static
  3: name: int
 4: name: read_public_key
 5: parameter_list: 
  6: parameter: 
   7: decl: 
    8: type: 
     9: name: RSA
     10: modifier: *
    11: name: rsa
 12: block: 
  13: block_content: 
   14: decl_stmt: 
    15: decl: 
     16: type: 
      17: name: int
     18: name: r
   19: decl_stmt: 
    20: decl: 
     21: type: 
      22: name: sc_path_t
     23: name: path
   24: decl_stmt: 
    25: decl: 
     26: type: 
      27: name: sc_file_t
      28: modifier: *
     29: name: file
   30: decl_stmt: 
    31: decl: 
     32: type: 
      33: name: u8
     34: name: 
      35: name: buf
      36: index: 
       37: expr: 
        38: literal: 2048
    39: decl: 
     40: type: 
      41: modifier: *
     42: name: p
     43: init: 
      44: expr: 
       45: name: buf
   46: decl_stmt: 
    47: decl: 
     48: type: 
      49: name: size_t
     50: name: bufsize
    51: decl: 
     52: type: 
     53: name: keysize
   54: expr_stmt: 
    55: expr: 
     56: name: r
     57: operator: =
     58: call: 
      59: name: select_app_df
      60: argument_list: 
   61: if_stmt: 
    62: if: 
     63: condition: 
      64: expr: 
       65: name: r
     66: block: 
      67: block_content: 
       68: return: 
        69: expr: 
         70: literal: 1
   71: expr_stmt: 
    72: expr: 
     73: call: 
      74: name: sc_format_path
      75: argument_list: 
       76: argument: 
        77: expr: 
         78: literal: "I1012"
       79: argument: 
        80: expr: 
         81: operator: &
         82: name: path
   83: expr_stmt: 
    84: expr: 
     85: name: r
     86: operator: =
     87: call: 
      88: name: sc_select_file
      89: argument_list: 
       90: argument: 
        91: expr: 
         92: name: card
       93: argument: 
        94: expr: 
         95: operator: &
         96: name: path
       97: argument: 
        98: expr: 
         99: operator: &
         100: name: file
   101: if_stmt: 
    102: if: 
     103: condition: 
      104: expr: 
       105: name: r
     106: block: 
      107: block_content: 
       108: expr_stmt: 
        109: expr: 
         110: call: 
          111: name: fprintf
          112: argument_list: 
           113: argument: 
            114: expr: 
             115: name: stderr
           116: argument: 
            117: expr: 
             118: literal: "Unable to select public key file: %s\n"
           119: argument: 
            120: expr: 
             121: call: 
              122: name: sc_strerror
              123: argument_list: 
               124: argument: 
                125: expr: 
                 126: name: r
       127: return: 
        128: expr: 
         129: literal: 2
   130: expr_stmt: 
    131: expr: 
     132: name: bufsize
     133: operator: =
     134: call: 
      135: name: MIN
      136: argument_list: 
       137: argument: 
        138: expr: 
         139: name: 
          140: name: file
          141: operator: ->
          142: name: size
       143: argument: 
        144: expr: 
         145: sizeof: 
          146: name: buf
   147: expr_stmt: 
    148: expr: 
     149: call: 
      150: name: sc_file_free
      151: argument_list: 
       152: argument: 
        153: expr: 
         154: name: file
   155: expr_stmt: 
    156: expr: 
     157: name: r
     158: operator: =
     159: call: 
      160: name: sc_read_binary
      161: argument_list: 
       162: argument: 
        163: expr: 
         164: name: card
       165: argument: 
        166: expr: 
         167: literal: 0
       168: argument: 
        169: expr: 
         170: name: buf
       171: argument: 
        172: expr: 
         173: name: bufsize
       174: argument: 
        175: expr: 
         176: literal: 0
   177: if_stmt: 
    178: if: 
     179: condition: 
      180: expr: 
       181: name: r
       182: operator: <
       183: literal: 0
     184: block: 
      185: block_content: 
       186: expr_stmt: 
        187: expr: 
         188: call: 
          189: name: fprintf
          190: argument_list: 
           191: argument: 
            192: expr: 
             193: name: stderr
           194: argument: 
            195: expr: 
             196: literal: "Unable to read public key file: %s\n"
           197: argument: 
            198: expr: 
             199: call: 
              200: name: sc_strerror
              201: argument_list: 
               202: argument: 
                203: expr: 
                 204: name: r
       205: return: 
        206: expr: 
         207: literal: 2
   208: expr_stmt: 
    209: expr: 
     210: name: bufsize
     211: operator: =
     212: name: r
   213: do: 
    214: block: 
     215: block_content: 
      216: if_stmt: 
       217: if: 
        218: condition: 
         219: expr: 
          220: name: bufsize
          221: operator: <
          222: literal: 4
        223: block: 
         224: block_content: 
          225: return: 
           226: expr: 
            227: literal: 3
      228: expr_stmt: 
       229: expr: 
        230: name: keysize
        231: operator: =
        232: operator: (
        233: name: 
         234: name: p
         235: index: 
          236: expr: 
           237: literal: 0
        238: operator: <<
        239: literal: 8
        240: operator: )
        241: operator: |
        242: name: 
         243: name: p
         244: index: 
          245: expr: 
           246: literal: 1
      247: if_stmt: 
       248: if: 
        249: condition: 
         250: expr: 
          251: name: keysize
          252: operator: ==
          253: literal: 0
        254: block: 
         255: block_content: 
          256: break: 
      257: if_stmt: 
       258: if: 
        259: condition: 
         260: expr: 
          261: name: keysize
          262: operator: <
          263: literal: 3
        264: block: 
         265: block_content: 
          266: return: 
           267: expr: 
            268: literal: 3
      269: if_stmt: 
       270: if: 
        271: condition: 
         272: expr: 
          273: name: 
           274: name: p
           275: index: 
            276: expr: 
             277: literal: 2
          278: operator: ==
          279: name: opt_key_num
        280: block: 
         281: block_content: 
          282: break: 
      283: expr_stmt: 
       284: expr: 
        285: name: p
        286: operator: +=
        287: name: keysize
      288: expr_stmt: 
       289: expr: 
        290: name: bufsize
        291: operator: -=
        292: name: keysize
    293: condition: 
     294: expr: 
      295: literal: 1
   296: if_stmt: 
    297: if: 
     298: condition: 
      299: expr: 
       300: name: keysize
       301: operator: ==
       302: literal: 0
     303: block: 
      304: block_content: 
       305: expr_stmt: 
        306: expr: 
         307: call: 
          308: name: printf
          309: argument_list: 
           310: argument: 
            311: expr: 
             312: literal: "Key number %d not found.\n"
           313: argument: 
            314: expr: 
             315: name: opt_key_num
       316: return: 
        317: expr: 
         318: literal: 2
   319: return: 
    320: expr: 
     321: call: 
      322: name: parse_public_key
      323: argument_list: 
       324: argument: 
        325: expr: 
         326: name: p
       327: argument: 
        328: expr: 
         329: name: keysize
       330: argument: 
        331: expr: 
         332: name: rsa
=====
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: r
  7: decl_stmt: 
   8: decl: 
    9: type: 
     10: name: sc_path_t
    11: name: path
  12: decl_stmt: 
   13: decl: 
    14: type: 
     15: name: sc_file_t
     16: modifier: *
    17: name: file
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: name: u8
    22: name: 
     23: name: buf
     24: index: 
      25: expr: 
       26: literal: 2048
   27: decl: 
    28: type: 
     29: modifier: *
    30: name: p
    31: init: 
     32: expr: 
      33: name: buf
  34: decl_stmt: 
   35: decl: 
    36: type: 
     37: name: size_t
    38: name: bufsize
   39: decl: 
    40: type: 
    41: name: keysize
  42: expr_stmt: 
   43: expr: 
    44: name: r
    45: operator: =
    46: call: 
     47: name: select_app_df
     48: argument_list: 
  49: if_stmt: 
   50: if: 
    51: condition: 
     52: expr: 
      53: name: r
    54: block: 
     55: block_content: 
      56: return: 
       57: expr: 
        58: literal: 1
  59: expr_stmt: 
   60: expr: 
    61: call: 
     62: name: sc_format_path
     63: argument_list: 
      64: argument: 
       65: expr: 
        66: literal: "I1012"
      67: argument: 
       68: expr: 
        69: operator: &
        70: name: path
  71: expr_stmt: 
   72: expr: 
    73: name: r
    74: operator: =
    75: call: 
     76: name: sc_select_file
     77: argument_list: 
      78: argument: 
       79: expr: 
        80: name: card
      81: argument: 
       82: expr: 
        83: operator: &
        84: name: path
      85: argument: 
       86: expr: 
        87: operator: &
        88: name: file
  89: if_stmt: 
   90: if: 
    91: condition: 
     92: expr: 
      93: name: r
    94: block: 
     95: block_content: 
      96: expr_stmt: 
       97: expr: 
        98: call: 
         99: name: fprintf
         100: argument_list: 
          101: argument: 
           102: expr: 
            103: name: stderr
          104: argument: 
           105: expr: 
            106: literal: "Unable to select public key file: %s\n"
          107: argument: 
           108: expr: 
            109: call: 
             110: name: sc_strerror
             111: argument_list: 
              112: argument: 
               113: expr: 
                114: name: r
      115: return: 
       116: expr: 
        117: literal: 2
  118: expr_stmt: 
   119: expr: 
    120: name: bufsize
    121: operator: =
    122: name: 
     123: name: file
     124: operator: ->
     125: name: size
  126: expr_stmt: 
   127: expr: 
    128: call: 
     129: name: sc_file_free
     130: argument_list: 
      131: argument: 
       132: expr: 
        133: name: file
  134: expr_stmt: 
   135: expr: 
    136: name: r
    137: operator: =
    138: call: 
     139: name: sc_read_binary
     140: argument_list: 
      141: argument: 
       142: expr: 
        143: name: card
      144: argument: 
       145: expr: 
        146: literal: 0
      147: argument: 
       148: expr: 
        149: name: buf
      150: argument: 
       151: expr: 
        152: name: bufsize
      153: argument: 
       154: expr: 
        155: literal: 0
  156: if_stmt: 
   157: if: 
    158: condition: 
     159: expr: 
      160: name: r
      161: operator: <
      162: literal: 0
    163: block: 
     164: block_content: 
      165: expr_stmt: 
       166: expr: 
        167: call: 
         168: name: fprintf
         169: argument_list: 
          170: argument: 
           171: expr: 
            172: name: stderr
          173: argument: 
           174: expr: 
            175: literal: "Unable to read public key file: %s\n"
          176: argument: 
           177: expr: 
            178: call: 
             179: name: sc_strerror
             180: argument_list: 
              181: argument: 
               182: expr: 
                183: name: r
      184: return: 
       185: expr: 
        186: literal: 2
  187: expr_stmt: 
   188: expr: 
    189: name: bufsize
    190: operator: =
    191: name: r
  192: do: 
   193: block: 
    194: block_content: 
     195: if_stmt: 
      196: if: 
       197: condition: 
        198: expr: 
         199: name: bufsize
         200: operator: <
         201: literal: 4
       202: block: 
        203: block_content: 
         204: return: 
          205: expr: 
           206: literal: 3
     207: expr_stmt: 
      208: expr: 
       209: name: keysize
       210: operator: =
       211: operator: (
       212: name: 
        213: name: p
        214: index: 
         215: expr: 
          216: literal: 0
       217: operator: <<
       218: literal: 8
       219: operator: )
       220: operator: |
       221: name: 
        222: name: p
        223: index: 
         224: expr: 
          225: literal: 1
     226: if_stmt: 
      227: if: 
       228: condition: 
        229: expr: 
         230: name: keysize
         231: operator: ==
         232: literal: 0
       233: block: 
        234: block_content: 
         235: break: 
     236: if_stmt: 
      237: if: 
       238: condition: 
        239: expr: 
         240: name: keysize
         241: operator: <
         242: literal: 3
       243: block: 
        244: block_content: 
         245: return: 
          246: expr: 
           247: literal: 3
     248: if_stmt: 
      249: if: 
       250: condition: 
        251: expr: 
         252: name: 
          253: name: p
          254: index: 
           255: expr: 
            256: literal: 2
         257: operator: ==
         258: name: opt_key_num
       259: block: 
        260: block_content: 
         261: break: 
     262: expr_stmt: 
      263: expr: 
       264: name: p
       265: operator: +=
       266: name: keysize
     267: expr_stmt: 
      268: expr: 
       269: name: bufsize
       270: operator: -=
       271: name: keysize
   272: condition: 
    273: expr: 
     274: literal: 1
  275: if_stmt: 
   276: if: 
    277: condition: 
     278: expr: 
      279: name: keysize
      280: operator: ==
      281: literal: 0
    282: block: 
     283: block_content: 
      284: expr_stmt: 
       285: expr: 
        286: call: 
         287: name: printf
         288: argument_list: 
          289: argument: 
           290: expr: 
            291: literal: "Key number %d not found.\n"
          292: argument: 
           293: expr: 
            294: name: opt_key_num
      295: return: 
       296: expr: 
        297: literal: 2
  298: return: 
   299: expr: 
    300: call: 
     301: name: parse_public_key
     302: argument_list: 
      303: argument: 
       304: expr: 
        305: name: p
      306: argument: 
       307: expr: 
        308: name: keysize
      309: argument: 
       310: expr: 
        311: name: rsa

----------------------------------------
0: block: 
 1: block_content: 
  2: decl_stmt: 
   3: decl: 
    4: type: 
     5: name: int
    6: name: r
  7: decl_stmt: 
   8: decl: 
    9: type: 
     10: name: sc_path_t
    11: name: path
  12: decl_stmt: 
   13: decl: 
    14: type: 
     15: name: sc_file_t
     16: modifier: *
    17: name: file
  18: decl_stmt: 
   19: decl: 
    20: type: 
     21: name: u8
    22: name: 
     23: name: buf
     24: index: 
      25: expr: 
       26: literal: 2048
   27: decl: 
    28: type: 
     29: modifier: *
    30: name: p
    31: init: 
     32: expr: 
      33: name: buf
  34: decl_stmt: 
   35: decl: 
    36: type: 
     37: name: size_t
    38: name: bufsize
   39: decl: 
    40: type: 
    41: name: keysize
  42: expr_stmt: 
   43: expr: 
    44: name: r
    45: operator: =
    46: call: 
     47: name: select_app_df
     48: argument_list: 
  49: if_stmt: 
   50: if: 
    51: condition: 
     52: expr: 
      53: name: r
    54: block: 
     55: block_content: 
      56: return: 
       57: expr: 
        58: literal: 1
  59: expr_stmt: 
   60: expr: 
    61: call: 
     62: name: sc_format_path
     63: argument_list: 
      64: argument: 
       65: expr: 
        66: literal: "I1012"
      67: argument: 
       68: expr: 
        69: operator: &
        70: name: path
  71: expr_stmt: 
   72: expr: 
    73: name: r
    74: operator: =
    75: call: 
     76: name: sc_select_file
     77: argument_list: 
      78: argument: 
       79: expr: 
        80: name: card
      81: argument: 
       82: expr: 
        83: operator: &
        84: name: path
      85: argument: 
       86: expr: 
        87: operator: &
        88: name: file
  89: if_stmt: 
   90: if: 
    91: condition: 
     92: expr: 
      93: name: r
    94: block: 
     95: block_content: 
      96: expr_stmt: 
       97: expr: 
        98: call: 
         99: name: fprintf
         100: argument_list: 
          101: argument: 
           102: expr: 
            103: name: stderr
          104: argument: 
           105: expr: 
            106: literal: "Unable to select public key file: %s\n"
          107: argument: 
           108: expr: 
            109: call: 
             110: name: sc_strerror
             111: argument_list: 
              112: argument: 
               113: expr: 
                114: name: r
      115: return: 
       116: expr: 
        117: literal: 2
  118: expr_stmt: 
   119: expr: 
    120: name: bufsize
    121: operator: =
    122: call: 
     123: name: MIN
     124: argument_list: 
      125: argument: 
       126: expr: 
        127: name: 
         128: name: file
         129: operator: ->
         130: name: size
      131: argument: 
       132: expr: 
        133: sizeof: 
         134: name: buf
  135: expr_stmt: 
   136: expr: 
    137: call: 
     138: name: sc_file_free
     139: argument_list: 
      140: argument: 
       141: expr: 
        142: name: file
  143: expr_stmt: 
   144: expr: 
    145: name: r
    146: operator: =
    147: call: 
     148: name: sc_read_binary
     149: argument_list: 
      150: argument: 
       151: expr: 
        152: name: card
      153: argument: 
       154: expr: 
        155: literal: 0
      156: argument: 
       157: expr: 
        158: name: buf
      159: argument: 
       160: expr: 
        161: name: bufsize
      162: argument: 
       163: expr: 
        164: literal: 0
  165: if_stmt: 
   166: if: 
    167: condition: 
     168: expr: 
      169: name: r
      170: operator: <
      171: literal: 0
    172: block: 
     173: block_content: 
      174: expr_stmt: 
       175: expr: 
        176: call: 
         177: name: fprintf
         178: argument_list: 
          179: argument: 
           180: expr: 
            181: name: stderr
          182: argument: 
           183: expr: 
            184: literal: "Unable to read public key file: %s\n"
          185: argument: 
           186: expr: 
            187: call: 
             188: name: sc_strerror
             189: argument_list: 
              190: argument: 
               191: expr: 
                192: name: r
      193: return: 
       194: expr: 
        195: literal: 2
  196: expr_stmt: 
   197: expr: 
    198: name: bufsize
    199: operator: =
    200: name: r
  201: do: 
   202: block: 
    203: block_content: 
     204: if_stmt: 
      205: if: 
       206: condition: 
        207: expr: 
         208: name: bufsize
         209: operator: <
         210: literal: 4
       211: block: 
        212: block_content: 
         213: return: 
          214: expr: 
           215: literal: 3
     216: expr_stmt: 
      217: expr: 
       218: name: keysize
       219: operator: =
       220: operator: (
       221: name: 
        222: name: p
        223: index: 
         224: expr: 
          225: literal: 0
       226: operator: <<
       227: literal: 8
       228: operator: )
       229: operator: |
       230: name: 
        231: name: p
        232: index: 
         233: expr: 
          234: literal: 1
     235: if_stmt: 
      236: if: 
       237: condition: 
        238: expr: 
         239: name: keysize
         240: operator: ==
         241: literal: 0
       242: block: 
        243: block_content: 
         244: break: 
     245: if_stmt: 
      246: if: 
       247: condition: 
        248: expr: 
         249: name: keysize
         250: operator: <
         251: literal: 3
       252: block: 
        253: block_content: 
         254: return: 
          255: expr: 
           256: literal: 3
     257: if_stmt: 
      258: if: 
       259: condition: 
        260: expr: 
         261: name: 
          262: name: p
          263: index: 
           264: expr: 
            265: literal: 2
         266: operator: ==
         267: name: opt_key_num
       268: block: 
        269: block_content: 
         270: break: 
     271: expr_stmt: 
      272: expr: 
       273: name: p
       274: operator: +=
       275: name: keysize
     276: expr_stmt: 
      277: expr: 
       278: name: bufsize
       279: operator: -=
       280: name: keysize
   281: condition: 
    282: expr: 
     283: literal: 1
  284: if_stmt: 
   285: if: 
    286: condition: 
     287: expr: 
      288: name: keysize
      289: operator: ==
      290: literal: 0
    291: block: 
     292: block_content: 
      293: expr_stmt: 
       294: expr: 
        295: call: 
         296: name: printf
         297: argument_list: 
          298: argument: 
           299: expr: 
            300: literal: "Key number %d not found.\n"
          301: argument: 
           302: expr: 
            303: name: opt_key_num
      304: return: 
       305: expr: 
        306: literal: 2
  307: return: 
   308: expr: 
    309: call: 
     310: name: parse_public_key
     311: argument_list: 
      312: argument: 
       313: expr: 
        314: name: p
      315: argument: 
       316: expr: 
        317: name: keysize
      318: argument: 
       319: expr: 
        320: name: rsa
=====
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: r
 6: decl_stmt: 
  7: decl: 
   8: type: 
    9: name: sc_path_t
   10: name: path
 11: decl_stmt: 
  12: decl: 
   13: type: 
    14: name: sc_file_t
    15: modifier: *
   16: name: file
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: name: u8
   21: name: 
    22: name: buf
    23: index: 
     24: expr: 
      25: literal: 2048
  26: decl: 
   27: type: 
    28: modifier: *
   29: name: p
   30: init: 
    31: expr: 
     32: name: buf
 33: decl_stmt: 
  34: decl: 
   35: type: 
    36: name: size_t
   37: name: bufsize
  38: decl: 
   39: type: 
   40: name: keysize
 41: expr_stmt: 
  42: expr: 
   43: name: r
   44: operator: =
   45: call: 
    46: name: select_app_df
    47: argument_list: 
 48: if_stmt: 
  49: if: 
   50: condition: 
    51: expr: 
     52: name: r
   53: block: 
    54: block_content: 
     55: return: 
      56: expr: 
       57: literal: 1
 58: expr_stmt: 
  59: expr: 
   60: call: 
    61: name: sc_format_path
    62: argument_list: 
     63: argument: 
      64: expr: 
       65: literal: "I1012"
     66: argument: 
      67: expr: 
       68: operator: &
       69: name: path
 70: expr_stmt: 
  71: expr: 
   72: name: r
   73: operator: =
   74: call: 
    75: name: sc_select_file
    76: argument_list: 
     77: argument: 
      78: expr: 
       79: name: card
     80: argument: 
      81: expr: 
       82: operator: &
       83: name: path
     84: argument: 
      85: expr: 
       86: operator: &
       87: name: file
 88: if_stmt: 
  89: if: 
   90: condition: 
    91: expr: 
     92: name: r
   93: block: 
    94: block_content: 
     95: expr_stmt: 
      96: expr: 
       97: call: 
        98: name: fprintf
        99: argument_list: 
         100: argument: 
          101: expr: 
           102: name: stderr
         103: argument: 
          104: expr: 
           105: literal: "Unable to select public key file: %s\n"
         106: argument: 
          107: expr: 
           108: call: 
            109: name: sc_strerror
            110: argument_list: 
             111: argument: 
              112: expr: 
               113: name: r
     114: return: 
      115: expr: 
       116: literal: 2
 117: expr_stmt: 
  118: expr: 
   119: name: bufsize
   120: operator: =
   121: name: 
    122: name: file
    123: operator: ->
    124: name: size
 125: expr_stmt: 
  126: expr: 
   127: call: 
    128: name: sc_file_free
    129: argument_list: 
     130: argument: 
      131: expr: 
       132: name: file
 133: expr_stmt: 
  134: expr: 
   135: name: r
   136: operator: =
   137: call: 
    138: name: sc_read_binary
    139: argument_list: 
     140: argument: 
      141: expr: 
       142: name: card
     143: argument: 
      144: expr: 
       145: literal: 0
     146: argument: 
      147: expr: 
       148: name: buf
     149: argument: 
      150: expr: 
       151: name: bufsize
     152: argument: 
      153: expr: 
       154: literal: 0
 155: if_stmt: 
  156: if: 
   157: condition: 
    158: expr: 
     159: name: r
     160: operator: <
     161: literal: 0
   162: block: 
    163: block_content: 
     164: expr_stmt: 
      165: expr: 
       166: call: 
        167: name: fprintf
        168: argument_list: 
         169: argument: 
          170: expr: 
           171: name: stderr
         172: argument: 
          173: expr: 
           174: literal: "Unable to read public key file: %s\n"
         175: argument: 
          176: expr: 
           177: call: 
            178: name: sc_strerror
            179: argument_list: 
             180: argument: 
              181: expr: 
               182: name: r
     183: return: 
      184: expr: 
       185: literal: 2
 186: expr_stmt: 
  187: expr: 
   188: name: bufsize
   189: operator: =
   190: name: r
 191: do: 
  192: block: 
   193: block_content: 
    194: if_stmt: 
     195: if: 
      196: condition: 
       197: expr: 
        198: name: bufsize
        199: operator: <
        200: literal: 4
      201: block: 
       202: block_content: 
        203: return: 
         204: expr: 
          205: literal: 3
    206: expr_stmt: 
     207: expr: 
      208: name: keysize
      209: operator: =
      210: operator: (
      211: name: 
       212: name: p
       213: index: 
        214: expr: 
         215: literal: 0
      216: operator: <<
      217: literal: 8
      218: operator: )
      219: operator: |
      220: name: 
       221: name: p
       222: index: 
        223: expr: 
         224: literal: 1
    225: if_stmt: 
     226: if: 
      227: condition: 
       228: expr: 
        229: name: keysize
        230: operator: ==
        231: literal: 0
      232: block: 
       233: block_content: 
        234: break: 
    235: if_stmt: 
     236: if: 
      237: condition: 
       238: expr: 
        239: name: keysize
        240: operator: <
        241: literal: 3
      242: block: 
       243: block_content: 
        244: return: 
         245: expr: 
          246: literal: 3
    247: if_stmt: 
     248: if: 
      249: condition: 
       250: expr: 
        251: name: 
         252: name: p
         253: index: 
          254: expr: 
           255: literal: 2
        256: operator: ==
        257: name: opt_key_num
      258: block: 
       259: block_content: 
        260: break: 
    261: expr_stmt: 
     262: expr: 
      263: name: p
      264: operator: +=
      265: name: keysize
    266: expr_stmt: 
     267: expr: 
      268: name: bufsize
      269: operator: -=
      270: name: keysize
  271: condition: 
   272: expr: 
    273: literal: 1
 274: if_stmt: 
  275: if: 
   276: condition: 
    277: expr: 
     278: name: keysize
     279: operator: ==
     280: literal: 0
   281: block: 
    282: block_content: 
     283: expr_stmt: 
      284: expr: 
       285: call: 
        286: name: printf
        287: argument_list: 
         288: argument: 
          289: expr: 
           290: literal: "Key number %d not found.\n"
         291: argument: 
          292: expr: 
           293: name: opt_key_num
     294: return: 
      295: expr: 
       296: literal: 2
 297: return: 
  298: expr: 
   299: call: 
    300: name: parse_public_key
    301: argument_list: 
     302: argument: 
      303: expr: 
       304: name: p
     305: argument: 
      306: expr: 
       307: name: keysize
     308: argument: 
      309: expr: 
       310: name: rsa

----------------------------------------
0: block_content: 
 1: decl_stmt: 
  2: decl: 
   3: type: 
    4: name: int
   5: name: r
 6: decl_stmt: 
  7: decl: 
   8: type: 
    9: name: sc_path_t
   10: name: path
 11: decl_stmt: 
  12: decl: 
   13: type: 
    14: name: sc_file_t
    15: modifier: *
   16: name: file
 17: decl_stmt: 
  18: decl: 
   19: type: 
    20: name: u8
   21: name: 
    22: name: buf
    23: index: 
     24: expr: 
      25: literal: 2048
  26: decl: 
   27: type: 
    28: modifier: *
   29: name: p
   30: init: 
    31: expr: 
     32: name: buf
 33: decl_stmt: 
  34: decl: 
   35: type: 
    36: name: size_t
   37: name: bufsize
  38: decl: 
   39: type: 
   40: name: keysize
 41: expr_stmt: 
  42: expr: 
   43: name: r
   44: operator: =
   45: call: 
    46: name: select_app_df
    47: argument_list: 
 48: if_stmt: 
  49: if: 
   50: condition: 
    51: expr: 
     52: name: r
   53: block: 
    54: block_content: 
     55: return: 
      56: expr: 
       57: literal: 1
 58: expr_stmt: 
  59: expr: 
   60: call: 
    61: name: sc_format_path
    62: argument_list: 
     63: argument: 
      64: expr: 
       65: literal: "I1012"
     66: argument: 
      67: expr: 
       68: operator: &
       69: name: path
 70: expr_stmt: 
  71: expr: 
   72: name: r
   73: operator: =
   74: call: 
    75: name: sc_select_file
    76: argument_list: 
     77: argument: 
      78: expr: 
       79: name: card
     80: argument: 
      81: expr: 
       82: operator: &
       83: name: path
     84: argument: 
      85: expr: 
       86: operator: &
       87: name: file
 88: if_stmt: 
  89: if: 
   90: condition: 
    91: expr: 
     92: name: r
   93: block: 
    94: block_content: 
     95: expr_stmt: 
      96: expr: 
       97: call: 
        98: name: fprintf
        99: argument_list: 
         100: argument: 
          101: expr: 
           102: name: stderr
         103: argument: 
          104: expr: 
           105: literal: "Unable to select public key file: %s\n"
         106: argument: 
          107: expr: 
           108: call: 
            109: name: sc_strerror
            110: argument_list: 
             111: argument: 
              112: expr: 
               113: name: r
     114: return: 
      115: expr: 
       116: literal: 2
 117: expr_stmt: 
  118: expr: 
   119: name: bufsize
   120: operator: =
   121: call: 
    122: name: MIN
    123: argument_list: 
     124: argument: 
      125: expr: 
       126: name: 
        127: name: file
        128: operator: ->
        129: name: size
     130: argument: 
      131: expr: 
       132: sizeof: 
        133: name: buf
 134: expr_stmt: 
  135: expr: 
   136: call: 
    137: name: sc_file_free
    138: argument_list: 
     139: argument: 
      140: expr: 
       141: name: file
 142: expr_stmt: 
  143: expr: 
   144: name: r
   145: operator: =
   146: call: 
    147: name: sc_read_binary
    148: argument_list: 
     149: argument: 
      150: expr: 
       151: name: card
     152: argument: 
      153: expr: 
       154: literal: 0
     155: argument: 
      156: expr: 
       157: name: buf
     158: argument: 
      159: expr: 
       160: name: bufsize
     161: argument: 
      162: expr: 
       163: literal: 0
 164: if_stmt: 
  165: if: 
   166: condition: 
    167: expr: 
     168: name: r
     169: operator: <
     170: literal: 0
   171: block: 
    172: block_content: 
     173: expr_stmt: 
      174: expr: 
       175: call: 
        176: name: fprintf
        177: argument_list: 
         178: argument: 
          179: expr: 
           180: name: stderr
         181: argument: 
          182: expr: 
           183: literal: "Unable to read public key file: %s\n"
         184: argument: 
          185: expr: 
           186: call: 
            187: name: sc_strerror
            188: argument_list: 
             189: argument: 
              190: expr: 
               191: name: r
     192: return: 
      193: expr: 
       194: literal: 2
 195: expr_stmt: 
  196: expr: 
   197: name: bufsize
   198: operator: =
   199: name: r
 200: do: 
  201: block: 
   202: block_content: 
    203: if_stmt: 
     204: if: 
      205: condition: 
       206: expr: 
        207: name: bufsize
        208: operator: <
        209: literal: 4
      210: block: 
       211: block_content: 
        212: return: 
         213: expr: 
          214: literal: 3
    215: expr_stmt: 
     216: expr: 
      217: name: keysize
      218: operator: =
      219: operator: (
      220: name: 
       221: name: p
       222: index: 
        223: expr: 
         224: literal: 0
      225: operator: <<
      226: literal: 8
      227: operator: )
      228: operator: |
      229: name: 
       230: name: p
       231: index: 
        232: expr: 
         233: literal: 1
    234: if_stmt: 
     235: if: 
      236: condition: 
       237: expr: 
        238: name: keysize
        239: operator: ==
        240: literal: 0
      241: block: 
       242: block_content: 
        243: break: 
    244: if_stmt: 
     245: if: 
      246: condition: 
       247: expr: 
        248: name: keysize
        249: operator: <
        250: literal: 3
      251: block: 
       252: block_content: 
        253: return: 
         254: expr: 
          255: literal: 3
    256: if_stmt: 
     257: if: 
      258: condition: 
       259: expr: 
        260: name: 
         261: name: p
         262: index: 
          263: expr: 
           264: literal: 2
        265: operator: ==
        266: name: opt_key_num
      267: block: 
       268: block_content: 
        269: break: 
    270: expr_stmt: 
     271: expr: 
      272: name: p
      273: operator: +=
      274: name: keysize
    275: expr_stmt: 
     276: expr: 
      277: name: bufsize
      278: operator: -=
      279: name: keysize
  280: condition: 
   281: expr: 
    282: literal: 1
 283: if_stmt: 
  284: if: 
   285: condition: 
    286: expr: 
     287: name: keysize
     288: operator: ==
     289: literal: 0
   290: block: 
    291: block_content: 
     292: expr_stmt: 
      293: expr: 
       294: call: 
        295: name: printf
        296: argument_list: 
         297: argument: 
          298: expr: 
           299: literal: "Key number %d not found.\n"
         300: argument: 
          301: expr: 
           302: name: opt_key_num
     303: return: 
      304: expr: 
       305: literal: 2
 306: return: 
  307: expr: 
   308: call: 
    309: name: parse_public_key
    310: argument_list: 
     311: argument: 
      312: expr: 
       313: name: p
     314: argument: 
      315: expr: 
       316: name: keysize
     317: argument: 
      318: expr: 
       319: name: rsa
=====
0: expr_stmt: 
 1: expr: 
  2: name: bufsize
  3: operator: =
  4: name: 
   5: name: file
   6: operator: ->
   7: name: size

----------------------------------------
0: expr_stmt: 
 1: expr: 
  2: name: bufsize
  3: operator: =
  4: call: 
   5: name: MIN
   6: argument_list: 
    7: argument: 
     8: expr: 
      9: name: 
       10: name: file
       11: operator: ->
       12: name: size
    13: argument: 
     14: expr: 
      15: sizeof: 
       16: name: buf
=====
